{"ast":null,"code":"import $k7QOs$react, { useState as $k7QOs$useState, useCallback as $k7QOs$useCallback, useRef as $k7QOs$useRef, useEffect as $k7QOs$useEffect, useContext as $k7QOs$useContext, useMemo as $k7QOs$useMemo } from \"react\";\nimport { useLayoutEffect as $k7QOs$useLayoutEffect, useId as $k7QOs$useId, isIOS as $k7QOs$isIOS, chain as $k7QOs$chain, getScrollParent as $k7QOs$getScrollParent, useLabels as $k7QOs$useLabels, mergeProps as $k7QOs$mergeProps } from \"@react-aria/utils\";\nimport { useLocale as $k7QOs$useLocale, useLocalizedStringFormatter as $k7QOs$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useInteractOutside as $k7QOs$useInteractOutside, useFocusWithin as $k7QOs$useFocusWithin } from \"@react-aria/interactions\";\nimport $k7QOs$reactdom from \"react-dom\";\nimport { useIsSSR as $k7QOs$useIsSSR } from \"@react-aria/ssr\";\nimport { VisuallyHidden as $k7QOs$VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { FocusScope as $k7QOs$FocusScope } from \"@react-aria/focus\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nconst $edcf132a9284368a$var$AXIS = {\n  top: 'top',\n  bottom: 'top',\n  left: 'left',\n  right: 'left'\n};\nconst $edcf132a9284368a$var$FLIPPED_DIRECTION = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\nconst $edcf132a9284368a$var$CROSS_AXIS = {\n  top: 'left',\n  left: 'top'\n};\nconst $edcf132a9284368a$var$AXIS_SIZE = {\n  top: 'height',\n  left: 'width'\n};\nconst $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE = {}; // @ts-ignore\n\nlet $edcf132a9284368a$var$visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nfunction $edcf132a9284368a$var$getContainerDimensions(containerNode) {\n  let width = 0,\n      height = 0,\n      top = 0,\n      left = 0;\n  let scroll = {};\n\n  if (containerNode.tagName === 'BODY') {\n    let documentElement = document.documentElement;\n    var ref;\n    width = (ref = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.width) !== null && ref !== void 0 ? ref : documentElement.clientWidth;\n    var ref1;\n    height = (ref1 = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.height) !== null && ref1 !== void 0 ? ref1 : documentElement.clientHeight;\n    scroll.top = documentElement.scrollTop || containerNode.scrollTop;\n    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;\n  } else {\n    ({\n      width: width,\n      height: height,\n      top: top,\n      left: left\n    } = $edcf132a9284368a$var$getOffset(containerNode));\n    scroll.top = containerNode.scrollTop;\n    scroll.left = containerNode.scrollLeft;\n  }\n\n  return {\n    width: width,\n    height: height,\n    scroll: scroll,\n    top: top,\n    left: left\n  };\n}\n\nfunction $edcf132a9284368a$var$getScroll(node) {\n  return {\n    top: node.scrollTop,\n    left: node.scrollLeft,\n    width: node.scrollWidth,\n    height: node.scrollHeight\n  };\n}\n\nfunction $edcf132a9284368a$var$getDelta(axis, offset, size, containerDimensions, padding) {\n  let containerScroll = containerDimensions.scroll[axis];\n  let containerHeight = containerDimensions[$edcf132a9284368a$var$AXIS_SIZE[axis]];\n  let startEdgeOffset = offset - padding - containerScroll;\n  let endEdgeOffset = offset + padding - containerScroll + size;\n  if (startEdgeOffset < 0) return -startEdgeOffset;else if (endEdgeOffset > containerHeight) return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);else return 0;\n}\n\nfunction $edcf132a9284368a$var$getMargins(node) {\n  let style = window.getComputedStyle(node);\n  return {\n    top: parseInt(style.marginTop, 10) || 0,\n    bottom: parseInt(style.marginBottom, 10) || 0,\n    left: parseInt(style.marginLeft, 10) || 0,\n    right: parseInt(style.marginRight, 10) || 0\n  };\n}\n\nfunction $edcf132a9284368a$var$parsePlacement(input) {\n  if ($edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input]) return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];\n  let [placement, crossPlacement] = input.split(' ');\n  let axis = $edcf132a9284368a$var$AXIS[placement] || 'right';\n  let crossAxis = $edcf132a9284368a$var$CROSS_AXIS[axis];\n  if (!$edcf132a9284368a$var$AXIS[crossPlacement]) crossPlacement = 'center';\n  let size = $edcf132a9284368a$var$AXIS_SIZE[axis];\n  let crossSize = $edcf132a9284368a$var$AXIS_SIZE[crossAxis];\n  $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input] = {\n    placement: placement,\n    crossPlacement: crossPlacement,\n    axis: axis,\n    crossAxis: crossAxis,\n    size: size,\n    crossSize: crossSize\n  };\n  return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];\n}\n\nfunction $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned) {\n  let {\n    placement: placement,\n    crossPlacement: crossPlacement,\n    axis: axis,\n    crossAxis: crossAxis,\n    size: size,\n    crossSize: crossSize\n  } = placementInfo;\n  let position = {}; // button position\n\n  position[crossAxis] = childOffset[crossAxis];\n  if (crossPlacement === 'center') //  + (button size / 2) - (overlay size / 2)\n    // at this point the overlay center should match the button center\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;else if (crossPlacement !== crossAxis) //  + (button size) - (overlay size)\n    // at this point the overlay bottom should match the button bottom\n    position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];\n  /* else {\n  the overlay top should match the button top\n  } */\n  // add the crossOffset from props\n\n  position[crossAxis] += crossOffset; // this is button center position - the overlay size + half of the button to align bottom of overlay with button center\n\n  let minViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2 - overlaySize[crossSize]; // this is button position of center, aligns top of overlay with button center\n\n  let maxViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2; // clamp it into the range of the min/max positions\n\n  position[crossAxis] = Math.min(Math.max(minViablePosition, position[crossAxis]), maxViablePosition); // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n\n  if (placement === axis) {\n    // If the container is positioned (non-static), then we use the container's actual\n    // height, as `bottom` will be relative to this height.  But if the container is static,\n    // then it can only be the `document.body`, and `bottom` will be relative to _its_\n    // container, which should be as large as boundaryDimensions.\n    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size];\n    position[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);\n  } else position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n\n  return position;\n}\n\nfunction $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding) {\n  return position.top != null ? Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - (containerOffsetWithBoundary.top + position.top) - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n  ) : Math.max(0, childOffset.top + containerOffsetWithBoundary.top - (boundaryDimensions.top + boundaryDimensions.scroll.top) - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n  );\n}\n\nfunction $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {\n  let {\n    placement: placement,\n    axis: axis,\n    size: size\n  } = placementInfo;\n  if (placement === axis) return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);\n  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);\n}\n\nfunction $edcf132a9284368a$export$6839422d1f33cee9(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, userSetMaxHeight) {\n  let placementInfo = $edcf132a9284368a$var$parsePlacement(placementInput);\n  let {\n    size: size,\n    crossAxis: crossAxis,\n    crossSize: crossSize,\n    placement: placement,\n    crossPlacement: crossPlacement\n  } = placementInfo;\n  let position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  let normalizedOffset = offset;\n  let space = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo); // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n\n  if (flip && scrollSize[size] > space) {\n    let flippedPlacementInfo = $edcf132a9284368a$var$parsePlacement(`${$edcf132a9284368a$var$FLIPPED_DIRECTION[placement]} ${crossPlacement}`);\n    let flippedPosition = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    let flippedSpace = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo); // If the available space for the flipped position is greater than the original available space, flip.\n\n    if (flippedSpace > space) {\n      placementInfo = flippedPlacementInfo;\n      position = flippedPosition;\n      normalizedOffset = offset;\n    }\n  }\n\n  let delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n  let maxHeight = $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding);\n  if (userSetMaxHeight && userSetMaxHeight < maxHeight) maxHeight = userSetMaxHeight;\n  overlaySize.height = Math.min(overlaySize.height, maxHeight);\n  position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n  let arrowPosition = {};\n  arrowPosition[crossAxis] = childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2;\n  return {\n    position: position,\n    maxHeight: maxHeight,\n    arrowOffsetLeft: arrowPosition.left,\n    arrowOffsetTop: arrowPosition.top,\n    placement: placementInfo.placement\n  };\n}\n\nfunction $edcf132a9284368a$export$b3ceb0cbf1056d98(opts) {\n  let {\n    placement: placement,\n    targetNode: targetNode,\n    overlayNode: overlayNode,\n    scrollNode: scrollNode,\n    padding: padding,\n    shouldFlip: shouldFlip,\n    boundaryElement: boundaryElement,\n    offset: offset,\n    crossOffset: crossOffset,\n    maxHeight: maxHeight\n  } = opts;\n  let container = overlayNode instanceof HTMLElement && overlayNode.offsetParent || document.body;\n  let isBodyContainer = container.tagName === 'BODY';\n  const containerPositionStyle = window.getComputedStyle(container).position;\n  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';\n  let childOffset = isBodyContainer ? $edcf132a9284368a$var$getOffset(targetNode) : $edcf132a9284368a$var$getPosition(targetNode, container);\n\n  if (!isBodyContainer) {\n    let {\n      marginTop: marginTop,\n      marginLeft: marginLeft\n    } = window.getComputedStyle(targetNode);\n    childOffset.top += parseInt(marginTop, 10) || 0;\n    childOffset.left += parseInt(marginLeft, 10) || 0;\n  }\n\n  let overlaySize = $edcf132a9284368a$var$getOffset(overlayNode);\n  let margins = $edcf132a9284368a$var$getMargins(overlayNode);\n  overlaySize.width += margins.left + margins.right;\n  overlaySize.height += margins.top + margins.bottom;\n  let scrollSize = $edcf132a9284368a$var$getScroll(scrollNode);\n  let boundaryDimensions = $edcf132a9284368a$var$getContainerDimensions(boundaryElement);\n  let containerOffsetWithBoundary = boundaryElement.tagName === 'BODY' ? $edcf132a9284368a$var$getOffset(container) : $edcf132a9284368a$var$getPosition(container, boundaryElement);\n  return $edcf132a9284368a$export$6839422d1f33cee9(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, maxHeight);\n}\n\nfunction $edcf132a9284368a$var$getOffset(node) {\n  let {\n    top: top,\n    left: left,\n    width: width,\n    height: height\n  } = node.getBoundingClientRect();\n  let {\n    scrollTop: scrollTop,\n    scrollLeft: scrollLeft,\n    clientTop: clientTop,\n    clientLeft: clientLeft\n  } = document.documentElement;\n  return {\n    top: top + scrollTop - clientTop,\n    left: left + scrollLeft - clientLeft,\n    width: width,\n    height: height\n  };\n}\n\nfunction $edcf132a9284368a$var$getPosition(node, parent) {\n  let style = window.getComputedStyle(node);\n  let offset;\n\n  if (style.position === 'fixed') {\n    let {\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    } = node.getBoundingClientRect();\n    offset = {\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    };\n  } else {\n    offset = $edcf132a9284368a$var$getOffset(node);\n    let parentOffset = $edcf132a9284368a$var$getOffset(parent);\n    let parentStyle = window.getComputedStyle(parent);\n    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;\n    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;\n    offset.top -= parentOffset.top;\n    offset.left -= parentOffset.left;\n  }\n\n  offset.top -= parseInt(style.marginTop, 10) || 0;\n  offset.left -= parseInt(style.marginLeft, 10) || 0;\n  return offset;\n}\n\nconst $dd149f63282afbbf$export$f6211563215e3b37 = new WeakMap();\n\nfunction $dd149f63282afbbf$export$18fc8428861184da(opts) {\n  let {\n    triggerRef: triggerRef,\n    isOpen: isOpen,\n    onClose: onClose\n  } = opts;\n  $k7QOs$useEffect(() => {\n    if (!isOpen) return;\n\n    let onScroll = e => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target; // window is not a Node and doesn't have contain, but window contains everything\n\n      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) return;\n      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);\n      if (onCloseHandler) onCloseHandler();\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n} // @ts-ignore\n\n\nlet $2a41e45df1593e64$var$visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nfunction $2a41e45df1593e64$export$d39e1813b3bdd0e1(props) {\n  let {\n    direction: direction\n  } = $k7QOs$useLocale();\n  let {\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    scrollRef = overlayRef,\n    placement = 'bottom',\n    containerPadding = 12,\n    shouldFlip = true,\n    boundaryElement = typeof document !== 'undefined' ? document.body : null,\n    offset = 0,\n    crossOffset = 0,\n    shouldUpdatePosition = true,\n    isOpen = true,\n    onClose: onClose,\n    maxHeight: maxHeight\n  } = props;\n  let [position, setPosition] = $k7QOs$useState({\n    position: {},\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined,\n    maxHeight: undefined,\n    placement: undefined\n  });\n  let deps = [shouldUpdatePosition, placement, overlayRef.current, targetRef.current, scrollRef.current, containerPadding, shouldFlip, boundaryElement, offset, crossOffset, isOpen, direction, maxHeight];\n  let updatePosition = $k7QOs$useCallback(() => {\n    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) return;\n    setPosition($edcf132a9284368a$export$b3ceb0cbf1056d98({\n      placement: $2a41e45df1593e64$var$translateRTL(placement, direction),\n      overlayNode: overlayRef.current,\n      targetNode: targetRef.current,\n      scrollNode: scrollRef.current,\n      padding: containerPadding,\n      shouldFlip: shouldFlip,\n      boundaryElement: boundaryElement,\n      offset: offset,\n      crossOffset: crossOffset,\n      maxHeight: maxHeight\n    }));\n  }, deps); // Update position when anything changes\n\n  $k7QOs$useLayoutEffect(updatePosition, deps); // Update position on window resize\n\n  $2a41e45df1593e64$var$useResize(updatePosition); // Reposition the overlay and do not close on scroll while the visual viewport is resizing.\n  // This will ensure that overlays adjust their positioning when the iOS virtual keyboard appears.\n\n  let isResizing = $k7QOs$useRef(false);\n  $k7QOs$useLayoutEffect(() => {\n    let timeout;\n\n    let onResize = () => {\n      isResizing.current = true;\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        isResizing.current = false;\n      }, 500);\n      updatePosition();\n    };\n\n    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener('resize', onResize);\n    return () => {\n      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener('resize', onResize);\n    };\n  }, [updatePosition]);\n  let close = $k7QOs$useCallback(() => {\n    if (!isResizing.current) onClose();\n  }, [onClose, isResizing]); // When scrolling a parent scrollable region of the trigger (other than the body),\n  // we hide the popover. Otherwise, its position would be incorrect.\n\n  $dd149f63282afbbf$export$18fc8428861184da({\n    triggerRef: targetRef,\n    isOpen: isOpen,\n    onClose: onClose ? close : undefined\n  });\n  return {\n    overlayProps: {\n      style: {\n        position: 'absolute',\n        zIndex: 100000,\n        ...position.position,\n        maxHeight: position.maxHeight\n      }\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop\n      }\n    },\n    updatePosition: updatePosition\n  };\n}\n\nfunction $2a41e45df1593e64$var$useResize(onResize) {\n  $k7QOs$useLayoutEffect(() => {\n    window.addEventListener('resize', onResize, false);\n    return () => {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\n\nfunction $2a41e45df1593e64$var$translateRTL(position, direction) {\n  if (direction === 'rtl') return position.replace('start', 'right').replace('end', 'left');\n  return position.replace('start', 'left').replace('end', 'right');\n}\n\nconst $a11501f3d1d39e6c$var$visibleOverlays = [];\n\nfunction $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {\n  let {\n    onClose: onClose,\n    shouldCloseOnBlur: shouldCloseOnBlur,\n    isOpen: isOpen,\n    isDismissable = false,\n    isKeyboardDismissDisabled = false,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n  } = props; // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n\n  $k7QOs$useEffect(() => {\n    if (isOpen) $a11501f3d1d39e6c$var$visibleOverlays.push(ref);\n    return () => {\n      let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);\n      if (index >= 0) $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);\n    };\n  }, [isOpen, ref]); // Only hide the overlay when it is the topmost visible overlay in the stack.\n\n  let onHide = () => {\n    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose) onClose();\n  };\n\n  let onInteractOutsideStart = e => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  };\n\n  let onInteractOutside = e => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      onHide();\n    }\n  }; // Handle the escape key\n\n\n  let onKeyDown = e => {\n    if (e.key === 'Escape' && !isKeyboardDismissDisabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      onHide();\n    }\n  }; // Handle clicking outside the overlay to close it\n\n\n  $k7QOs$useInteractOutside({\n    ref: ref,\n    onInteractOutside: isDismissable ? onInteractOutside : null,\n    onInteractOutsideStart: onInteractOutsideStart\n  });\n  let {\n    focusWithinProps: focusWithinProps\n  } = $k7QOs$useFocusWithin({\n    isDisabled: !shouldCloseOnBlur,\n    onBlurWithin: e => {\n      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) onClose();\n    }\n  });\n\n  let onPointerDownUnderlay = e => {\n    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846\n    if (e.target === e.currentTarget) e.preventDefault();\n  };\n\n  return {\n    overlayProps: {\n      onKeyDown: onKeyDown,\n      ...focusWithinProps\n    },\n    underlayProps: {\n      onPointerDown: onPointerDownUnderlay\n    }\n  };\n}\n\nfunction $628037886ba31236$export$f9d5c8beee7d008d(props, state, ref) {\n  let {\n    type: type\n  } = props;\n  let {\n    isOpen: isOpen\n  } = state; // Backward compatibility. Share state close function with useOverlayPosition so it can close on scroll\n  // without forcing users to pass onClose.\n\n  $k7QOs$useEffect(() => {\n    if (ref && ref.current) $dd149f63282afbbf$export$f6211563215e3b37.set(ref.current, state.close);\n  }); // Aria 1.1 supports multiple values for aria-haspopup other than just menus.\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup\n  // However, we only add it for menus for now because screen readers often\n  // announce it as a menu even for other values.\n\n  let ariaHasPopup = undefined;\n  if (type === 'menu') ariaHasPopup = true;else if (type === 'listbox') ariaHasPopup = 'listbox';\n  let overlayId = $k7QOs$useId();\n  return {\n    triggerProps: {\n      'aria-haspopup': ariaHasPopup,\n      'aria-expanded': isOpen,\n      'aria-controls': isOpen ? overlayId : null,\n      onPress: state.toggle\n    },\n    overlayProps: {\n      id: overlayId\n    }\n  };\n} // @ts-ignore\n\n\nconst $49c51c25361d4cd2$var$visualViewport = typeof window !== 'undefined' && window.visualViewport; // HTML input types that do not cause the software keyboard to appear.\n\nconst $49c51c25361d4cd2$var$nonTextInputTypes = new Set(['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset']);\n\nfunction $49c51c25361d4cd2$export$ee0f7cc6afcd1c18(options = {}) {\n  let {\n    isDisabled: isDisabled\n  } = options;\n  $k7QOs$useLayoutEffect(() => {\n    if (isDisabled) return;\n    if ($k7QOs$isIOS()) return $49c51c25361d4cd2$var$preventScrollMobileSafari();else return $49c51c25361d4cd2$var$preventScrollStandard();\n  }, [isDisabled]);\n} // For most browsers, all we need to do is set `overflow: hidden` on the root element, and\n// add some padding to prevent the page from shifting when the scrollbar is hidden.\n\n\nfunction $49c51c25361d4cd2$var$preventScrollStandard() {\n  return $k7QOs$chain($49c51c25361d4cd2$var$setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`), $49c51c25361d4cd2$var$setStyle(document.documentElement, 'overflow', 'hidden'));\n} // Mobile Safari is a whole different beast. Even with overflow: hidden,\n// it still scrolls the page in many situations:\n//\n// 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n// 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n//    it, so it becomes scrollable.\n// 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n//    This may cause even fixed position elements to scroll off the screen.\n// 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n//    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n//\n// In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n//\n// 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n//    on the window.\n// 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n//    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n// 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n// 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n//    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n//    into view ourselves, without scrolling the whole page.\n// 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n//    same visually, but makes the actual scroll position always zero. This is required to make all of the\n//    above work or Safari will still try to scroll the page when focusing an input.\n// 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n//    to navigate to an input with the next/previous buttons that's outside a modal.\n\n\nfunction $49c51c25361d4cd2$var$preventScrollMobileSafari() {\n  let scrollable;\n  let lastY = 0;\n\n  let onTouchStart = e => {\n    // Store the nearest scrollable parent element from the element that the user touched.\n    scrollable = $k7QOs$getScrollParent(e.target);\n    if (scrollable === document.documentElement && scrollable === document.body) return;\n    lastY = e.changedTouches[0].pageY;\n  };\n\n  let onTouchMove = e => {\n    // Prevent scrolling the window.\n    if (scrollable === document.documentElement || scrollable === document.body) {\n      e.preventDefault();\n      return;\n    } // Prevent scrolling up when at the top and scrolling down when at the bottom\n    // of a nested scrollable area, otherwise mobile Safari will start scrolling\n    // the window instead. Unfortunately, this disables bounce scrolling when at\n    // the top but it's the best we can do.\n\n\n    let y = e.changedTouches[0].pageY;\n    let scrollTop = scrollable.scrollTop;\n    let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n    if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY) e.preventDefault();\n    lastY = y;\n  };\n\n  let onTouchEnd = e => {\n    let target = e.target; // Apply this change if we're not already focused on the target element\n\n    if ($49c51c25361d4cd2$var$willOpenKeyboard(target) && target !== document.activeElement) {\n      e.preventDefault(); // Apply a transform to trick Safari into thinking the input is at the top of the page\n      // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n      // be done before the \"focus\" event, so we have to focus the element ourselves.\n\n      target.style.transform = 'translateY(-2000px)';\n      target.focus();\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n      });\n    }\n  };\n\n  let onFocus = e => {\n    let target = e.target;\n\n    if ($49c51c25361d4cd2$var$willOpenKeyboard(target)) {\n      // Transform also needs to be applied in the focus event in cases where focus moves\n      // other than tapping on an input directly, e.g. the next/previous buttons in the\n      // software keyboard. In these cases, it seems applying the transform in the focus event\n      // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n      target.style.transform = 'translateY(-2000px)';\n      requestAnimationFrame(() => {\n        target.style.transform = ''; // This will have prevented the browser from scrolling the focused element into view,\n        // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n\n        if ($49c51c25361d4cd2$var$visualViewport) {\n          if ($49c51c25361d4cd2$var$visualViewport.height < window.innerHeight) // If the keyboard is already visible, do this after one additional frame\n            // to wait for the transform to be removed.\n            requestAnimationFrame(() => {\n              $49c51c25361d4cd2$var$scrollIntoView(target);\n            });else // Otherwise, wait for the visual viewport to resize before scrolling so we can\n            // measure the correct position to scroll to.\n            $49c51c25361d4cd2$var$visualViewport.addEventListener('resize', () => $49c51c25361d4cd2$var$scrollIntoView(target), {\n              once: true\n            });\n        }\n      });\n    }\n  };\n\n  let onWindowScroll = () => {\n    // Last resort. If the window scrolled, scroll it back to the top.\n    // It should always be at the top because the body will have a negative margin (see below).\n    window.scrollTo(0, 0);\n  }; // Record the original scroll position so we can restore it.\n  // Then apply a negative margin to the body to offset it by the scroll position. This will\n  // enable us to scroll the window to the top, which is required for the rest of this to work.\n\n\n  let scrollX = window.pageXOffset;\n  let scrollY = window.pageYOffset;\n  let restoreStyles = $k7QOs$chain($49c51c25361d4cd2$var$setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`), $49c51c25361d4cd2$var$setStyle(document.documentElement, 'overflow', 'hidden'), $49c51c25361d4cd2$var$setStyle(document.body, 'marginTop', `-${scrollY}px`)); // Scroll to the top. The negative margin on the body will make this appear the same.\n\n  window.scrollTo(0, 0);\n  let removeEvents = $k7QOs$chain($49c51c25361d4cd2$var$addEvent(document, 'touchstart', onTouchStart, {\n    passive: false,\n    capture: true\n  }), $49c51c25361d4cd2$var$addEvent(document, 'touchmove', onTouchMove, {\n    passive: false,\n    capture: true\n  }), $49c51c25361d4cd2$var$addEvent(document, 'touchend', onTouchEnd, {\n    passive: false,\n    capture: true\n  }), $49c51c25361d4cd2$var$addEvent(document, 'focus', onFocus, true), $49c51c25361d4cd2$var$addEvent(window, 'scroll', onWindowScroll));\n  return () => {\n    // Restore styles and scroll the page back to where it was.\n    restoreStyles();\n    removeEvents();\n    window.scrollTo(scrollX, scrollY);\n  };\n} // Sets a CSS property on an element, and returns a function to revert it to the previous value.\n\n\nfunction $49c51c25361d4cd2$var$setStyle(element, style, value) {\n  let cur = element.style[style];\n  element.style[style] = value;\n  return () => {\n    element.style[style] = cur;\n  };\n} // Adds an event listener to an element, and returns a function to remove it.\n\n\nfunction $49c51c25361d4cd2$var$addEvent(target, event, handler, options) {\n  target.addEventListener(event, handler, options);\n  return () => {\n    target.removeEventListener(event, handler, options);\n  };\n}\n\nfunction $49c51c25361d4cd2$var$scrollIntoView(target) {\n  let root = document.scrollingElement || document.documentElement;\n\n  while (target && target !== root) {\n    // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n    let scrollable = $k7QOs$getScrollParent(target);\n\n    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n      let scrollableTop = scrollable.getBoundingClientRect().top;\n      let targetTop = target.getBoundingClientRect().top;\n      if (targetTop > scrollableTop + target.clientHeight) scrollable.scrollTop += targetTop - scrollableTop;\n    }\n\n    target = scrollable.parentElement;\n  }\n}\n\nfunction $49c51c25361d4cd2$var$willOpenKeyboard(target) {\n  return target instanceof HTMLInputElement && !$49c51c25361d4cd2$var$nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;\n}\n\nconst $f57aed4a881a3485$var$Context = /*#__PURE__*/$k7QOs$react.createContext(null);\n\nfunction $f57aed4a881a3485$export$178405afcd8c5eb(props) {\n  let {\n    children: children\n  } = props;\n  let parent = $k7QOs$useContext($f57aed4a881a3485$var$Context);\n  let [modalCount, setModalCount] = $k7QOs$useState(0);\n  let context = $k7QOs$useMemo(() => ({\n    parent: parent,\n    modalCount: modalCount,\n\n    addModal() {\n      setModalCount(count => count + 1);\n      if (parent) parent.addModal();\n    },\n\n    removeModal() {\n      setModalCount(count => count - 1);\n      if (parent) parent.removeModal();\n    }\n\n  }), [parent, modalCount]);\n  return /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$var$Context.Provider, {\n    value: context\n  }, children);\n}\n\nfunction $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {\n  let context = $k7QOs$useContext($f57aed4a881a3485$var$Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : null\n    }\n  };\n}\n/**\n * Creates a root node that will be aria-hidden if there are other modals open.\n */\n\n\nfunction $f57aed4a881a3485$var$OverlayContainerDOM(props) {\n  let {\n    modalProviderProps: modalProviderProps\n  } = $f57aed4a881a3485$export$d9aaed4c3ece1bc0();\n  return /*#__PURE__*/$k7QOs$react.createElement(\"div\", {\n    \"data-overlay-container\": true,\n    ...props,\n    ...modalProviderProps\n  });\n}\n\nfunction $f57aed4a881a3485$export$bf688221f59024e5(props) {\n  return /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));\n}\n\nfunction $f57aed4a881a3485$export$b47c3594eab58386(props) {\n  let isSSR = $k7QOs$useIsSSR();\n  let {\n    portalContainer = isSSR ? null : document.body,\n    ...rest\n  } = props;\n  $k7QOs$react.useEffect(() => {\n    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest('[data-overlay-container]')) throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n  }, [portalContainer]);\n  if (!portalContainer) return null;\n  let contents = /*#__PURE__*/$k7QOs$react.createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);\n  return /*#__PURE__*/$k7QOs$reactdom.createPortal(contents, portalContainer);\n}\n\nfunction $f57aed4a881a3485$export$33ffd74ebf07f060(options) {\n  // Add aria-hidden to all parent providers on mount, and restore on unmount.\n  let context = $k7QOs$useContext($f57aed4a881a3485$var$Context);\n  if (!context) throw new Error('Modal is not contained within a provider');\n  $k7QOs$useEffect(() => {\n    if ((options === null || options === void 0 ? void 0 : options.isDisabled) || !context || !context.parent) return; // The immediate context is from the provider containing this modal, so we only\n    // want to trigger aria-hidden on its parents not on the modal provider itself.\n\n    context.parent.addModal();\n    return () => {\n      if (context && context.parent) context.parent.removeModal();\n    };\n  }, [context, context.parent, options === null || options === void 0 ? void 0 : options.isDisabled]);\n  return {\n    modalProps: {\n      'data-ismodal': !(options === null || options === void 0 ? void 0 : options.isDisabled)\n    }\n  };\n}\n\nvar $61fe14465afefc5e$exports = {};\nvar $773d5888b972f1cf$exports = {};\n$773d5888b972f1cf$exports = {\n  \"dismiss\": `تجاهل`\n};\nvar $d11f19852b941573$exports = {};\n$d11f19852b941573$exports = {\n  \"dismiss\": `Отхвърляне`\n};\nvar $b983974c2ee1efb3$exports = {};\n$b983974c2ee1efb3$exports = {\n  \"dismiss\": `Odstranit`\n};\nvar $5809cc9d4e92de73$exports = {};\n$5809cc9d4e92de73$exports = {\n  \"dismiss\": `Luk`\n};\nvar $c68c2e4fc74398d1$exports = {};\n$c68c2e4fc74398d1$exports = {\n  \"dismiss\": `Schließen`\n};\nvar $0898b4c153db2b77$exports = {};\n$0898b4c153db2b77$exports = {\n  \"dismiss\": `Απόρριψη`\n};\nvar $6d74810286a15183$exports = {};\n$6d74810286a15183$exports = {\n  \"dismiss\": `Dismiss`\n};\nvar $309d73dc65f78055$exports = {};\n$309d73dc65f78055$exports = {\n  \"dismiss\": `Descartar`\n};\nvar $44ad94f7205cf593$exports = {};\n$44ad94f7205cf593$exports = {\n  \"dismiss\": `Lõpeta`\n};\nvar $7c28f5687f0779a9$exports = {};\n$7c28f5687f0779a9$exports = {\n  \"dismiss\": `Hylkää`\n};\nvar $e6d75df4b68bd73a$exports = {};\n$e6d75df4b68bd73a$exports = {\n  \"dismiss\": `Rejeter`\n};\nvar $87505c9dab186d0f$exports = {};\n$87505c9dab186d0f$exports = {\n  \"dismiss\": `התעלם`\n};\nvar $553439c3ffb3e492$exports = {};\n$553439c3ffb3e492$exports = {\n  \"dismiss\": `Odbaci`\n};\nvar $74cf411061b983a2$exports = {};\n$74cf411061b983a2$exports = {\n  \"dismiss\": `Elutasítás`\n};\nvar $e933f298574dc435$exports = {};\n$e933f298574dc435$exports = {\n  \"dismiss\": `Ignora`\n};\nvar $ac91fc9fe02f71f6$exports = {};\n$ac91fc9fe02f71f6$exports = {\n  \"dismiss\": `閉じる`\n};\nvar $52b96f86422025af$exports = {};\n$52b96f86422025af$exports = {\n  \"dismiss\": `무시`\n};\nvar $c0d724c3e51dafa6$exports = {};\n$c0d724c3e51dafa6$exports = {\n  \"dismiss\": `Atmesti`\n};\nvar $c92899672a3fe72e$exports = {};\n$c92899672a3fe72e$exports = {\n  \"dismiss\": `Nerādīt`\n};\nvar $9f576b39d8e7a9d6$exports = {};\n$9f576b39d8e7a9d6$exports = {\n  \"dismiss\": `Lukk`\n};\nvar $9d025808aeec81a7$exports = {};\n$9d025808aeec81a7$exports = {\n  \"dismiss\": `Negeren`\n};\nvar $fce709921e2c0fa6$exports = {};\n$fce709921e2c0fa6$exports = {\n  \"dismiss\": `Zignoruj`\n};\nvar $2599cf0c4ab37f59$exports = {};\n$2599cf0c4ab37f59$exports = {\n  \"dismiss\": `Descartar`\n};\nvar $3c220ae7ef8a35fd$exports = {};\n$3c220ae7ef8a35fd$exports = {\n  \"dismiss\": `Dispensar`\n};\nvar $93562b5094072f54$exports = {};\n$93562b5094072f54$exports = {\n  \"dismiss\": `Revocare`\n};\nvar $cd9e2abd0d06c7b4$exports = {};\n$cd9e2abd0d06c7b4$exports = {\n  \"dismiss\": `Пропустить`\n};\nvar $45375701f409adf1$exports = {};\n$45375701f409adf1$exports = {\n  \"dismiss\": `Zrušiť`\n};\nvar $27fab53a576de9dd$exports = {};\n$27fab53a576de9dd$exports = {\n  \"dismiss\": `Opusti`\n};\nvar $4438748d9952e7c7$exports = {};\n$4438748d9952e7c7$exports = {\n  \"dismiss\": `Odbaci`\n};\nvar $0936d7347ef4da4c$exports = {};\n$0936d7347ef4da4c$exports = {\n  \"dismiss\": `Avvisa`\n};\nvar $29700c92185d38f8$exports = {};\n$29700c92185d38f8$exports = {\n  \"dismiss\": `Kapat`\n};\nvar $662ccaf2be4c25b3$exports = {};\n$662ccaf2be4c25b3$exports = {\n  \"dismiss\": `Скасувати`\n};\nvar $d80a27deda7cdb3c$exports = {};\n$d80a27deda7cdb3c$exports = {\n  \"dismiss\": `取消`\n};\nvar $2b2734393847c884$exports = {};\n$2b2734393847c884$exports = {\n  \"dismiss\": `關閉`\n};\n$61fe14465afefc5e$exports = {\n  \"ar-AE\": $773d5888b972f1cf$exports,\n  \"bg-BG\": $d11f19852b941573$exports,\n  \"cs-CZ\": $b983974c2ee1efb3$exports,\n  \"da-DK\": $5809cc9d4e92de73$exports,\n  \"de-DE\": $c68c2e4fc74398d1$exports,\n  \"el-GR\": $0898b4c153db2b77$exports,\n  \"en-US\": $6d74810286a15183$exports,\n  \"es-ES\": $309d73dc65f78055$exports,\n  \"et-EE\": $44ad94f7205cf593$exports,\n  \"fi-FI\": $7c28f5687f0779a9$exports,\n  \"fr-FR\": $e6d75df4b68bd73a$exports,\n  \"he-IL\": $87505c9dab186d0f$exports,\n  \"hr-HR\": $553439c3ffb3e492$exports,\n  \"hu-HU\": $74cf411061b983a2$exports,\n  \"it-IT\": $e933f298574dc435$exports,\n  \"ja-JP\": $ac91fc9fe02f71f6$exports,\n  \"ko-KR\": $52b96f86422025af$exports,\n  \"lt-LT\": $c0d724c3e51dafa6$exports,\n  \"lv-LV\": $c92899672a3fe72e$exports,\n  \"nb-NO\": $9f576b39d8e7a9d6$exports,\n  \"nl-NL\": $9d025808aeec81a7$exports,\n  \"pl-PL\": $fce709921e2c0fa6$exports,\n  \"pt-BR\": $2599cf0c4ab37f59$exports,\n  \"pt-PT\": $3c220ae7ef8a35fd$exports,\n  \"ro-RO\": $93562b5094072f54$exports,\n  \"ru-RU\": $cd9e2abd0d06c7b4$exports,\n  \"sk-SK\": $45375701f409adf1$exports,\n  \"sl-SI\": $27fab53a576de9dd$exports,\n  \"sr-SP\": $4438748d9952e7c7$exports,\n  \"sv-SE\": $0936d7347ef4da4c$exports,\n  \"tr-TR\": $29700c92185d38f8$exports,\n  \"uk-UA\": $662ccaf2be4c25b3$exports,\n  \"zh-CN\": $d80a27deda7cdb3c$exports,\n  \"zh-TW\": $2b2734393847c884$exports\n};\n\nfunction $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {\n  let {\n    onDismiss: onDismiss,\n    ...otherProps\n  } = props;\n  let stringFormatter = $k7QOs$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($61fe14465afefc5e$exports));\n  let labels = $k7QOs$useLabels(otherProps, stringFormatter.format('dismiss'));\n\n  let onClick = () => {\n    if (onDismiss) onDismiss();\n  };\n\n  return /*#__PURE__*/$k7QOs$react.createElement($k7QOs$VisuallyHidden, null, /*#__PURE__*/$k7QOs$react.createElement(\"button\", { ...labels,\n    tabIndex: -1,\n    onClick: onClick\n  }));\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n// Keeps a ref count of all hidden elements. Added to when hiding an element, and\n// subtracted from when showing it again. When it reaches zero, aria-hidden is removed.\n\n\nlet $5e3802645cc19319$var$refCountMap = new WeakMap();\n\nfunction $5e3802645cc19319$export$1c3ebcada18427bf(targets, root = document.body) {\n  let visibleNodes = new Set(targets);\n  let hiddenNodes = new Set();\n  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode(node) {\n      // If this node is a live announcer, add it to the set of nodes to keep visible.\n      if ((node instanceof HTMLElement || node instanceof SVGElement) && node.dataset.liveAnnouncer === 'true') visibleNodes.add(node); // Skip this node and its children if it is one of the target nodes, or a live announcer.\n      // Also skip children of already hidden nodes, as aria-hidden is recursive. An exception is\n      // made for elements with role=\"row\" since VoiceOver on iOS has issues hiding elements with role=\"row\".\n      // For that case we want to hide the cells inside as well (https://bugs.webkit.org/show_bug.cgi?id=222623).\n\n      if (visibleNodes.has(node) || hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute('role') !== 'row') return NodeFilter.FILTER_REJECT; // Skip this node but continue to children if one of the targets is inside the node.\n\n      if (targets.some(target => node.contains(target))) return NodeFilter.FILTER_SKIP;\n      return NodeFilter.FILTER_ACCEPT;\n    }\n\n  });\n\n  let hide = node => {\n    var ref;\n    let refCount = (ref = $5e3802645cc19319$var$refCountMap.get(node)) !== null && ref !== void 0 ? ref : 0; // If already aria-hidden, and the ref count is zero, then this element\n    // was already hidden and there's nothing for us to do.\n\n    if (node.getAttribute('aria-hidden') === 'true' && refCount === 0) return;\n    if (refCount === 0) node.setAttribute('aria-hidden', 'true');\n    hiddenNodes.add(node);\n    $5e3802645cc19319$var$refCountMap.set(node, refCount + 1);\n  };\n\n  let node1 = walker.nextNode();\n\n  while (node1 != null) {\n    hide(node1);\n    node1 = walker.nextNode();\n  }\n\n  let observer = new MutationObserver(changes => {\n    for (let change of changes) {\n      if (change.type !== 'childList' || change.addedNodes.length === 0) continue; // If the parent element of the added nodes is not within one of the targets,\n      // and not already inside a hidden node, hide all of the new children.\n\n      if (![...visibleNodes, ...hiddenNodes].some(node => node.contains(change.target))) for (let node2 of change.addedNodes) {\n        if ((node2 instanceof HTMLElement || node2 instanceof SVGElement) && node2.dataset.liveAnnouncer === 'true') visibleNodes.add(node2);else if (node2 instanceof Element) hide(node2);\n      }\n    }\n  });\n  observer.observe(root, {\n    childList: true,\n    subtree: true\n  });\n  return () => {\n    observer.disconnect();\n\n    for (let node of hiddenNodes) {\n      let count = $5e3802645cc19319$var$refCountMap.get(node);\n\n      if (count === 1) {\n        node.removeAttribute('aria-hidden');\n        $5e3802645cc19319$var$refCountMap.delete(node);\n      } else $5e3802645cc19319$var$refCountMap.set(node, count - 1);\n    }\n  };\n}\n\nfunction $f2f8a6077418541e$export$542a6fd13ac93354(props, state) {\n  let {\n    triggerRef: triggerRef,\n    popoverRef: popoverRef,\n    isNonModal: isNonModal,\n    ...otherProps\n  } = props;\n  let {\n    overlayProps: overlayProps\n  } = $a11501f3d1d39e6c$export$ea8f71083e90600f({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur: true,\n    isDismissable: true\n  }, popoverRef);\n  let {\n    overlayProps: positionProps,\n    arrowProps: arrowProps\n  } = $2a41e45df1593e64$export$d39e1813b3bdd0e1({ ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen\n  });\n  $k7QOs$useEffect(() => {\n    if (state.isOpen && !isNonModal) return $5e3802645cc19319$export$1c3ebcada18427bf([popoverRef.current]);\n  }, [isNonModal, state.isOpen, popoverRef]);\n  return {\n    popoverProps: $k7QOs$mergeProps(overlayProps, positionProps),\n    arrowProps: arrowProps\n  };\n}\n\nconst $337b884510726a0d$var$OverlayContext = /*#__PURE__*/$k7QOs$react.createContext(null);\n\nfunction $337b884510726a0d$export$c6fdb837b070b4ff(props) {\n  let isSSR = $k7QOs$useIsSSR();\n  let {\n    portalContainer = isSSR ? null : document.body\n  } = props;\n  let [contain, setContain] = $k7QOs$useState(false);\n  if (!portalContainer) return null;\n  let contents = /*#__PURE__*/$k7QOs$react.createElement($337b884510726a0d$var$OverlayContext.Provider, {\n    value: setContain\n  }, /*#__PURE__*/$k7QOs$react.createElement($k7QOs$FocusScope, {\n    restoreFocus: true,\n    contain: contain\n  }, props.children));\n  return /*#__PURE__*/$k7QOs$reactdom.createPortal(contents, portalContainer);\n}\n\nfunction $337b884510726a0d$export$14c98a7594375490() {\n  let setContain = $k7QOs$useContext($337b884510726a0d$var$OverlayContext);\n  $k7QOs$useLayoutEffect(() => {\n    setContain === null || setContain === void 0 ? void 0 : setContain(true);\n  }, [setContain]);\n}\n\nfunction $8ac8429251c45e4b$export$dbc0f175b25fb0fb(props, state, ref) {\n  let {\n    overlayProps: overlayProps,\n    underlayProps: underlayProps\n  } = $a11501f3d1d39e6c$export$ea8f71083e90600f({ ...props,\n    isOpen: state.isOpen,\n    onClose: state.close\n  }, ref);\n  $49c51c25361d4cd2$export$ee0f7cc6afcd1c18({\n    isDisabled: !state.isOpen\n  });\n  $337b884510726a0d$export$14c98a7594375490();\n  $k7QOs$useEffect(() => {\n    if (state.isOpen) return $5e3802645cc19319$export$1c3ebcada18427bf([ref.current]);\n  }, [state.isOpen, ref]);\n  return {\n    modalProps: $k7QOs$mergeProps(overlayProps),\n    underlayProps: underlayProps\n  };\n}\n\nexport { $2a41e45df1593e64$export$d39e1813b3bdd0e1 as useOverlayPosition, $a11501f3d1d39e6c$export$ea8f71083e90600f as useOverlay, $628037886ba31236$export$f9d5c8beee7d008d as useOverlayTrigger, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18 as usePreventScroll, $f57aed4a881a3485$export$178405afcd8c5eb as ModalProvider, $f57aed4a881a3485$export$d9aaed4c3ece1bc0 as useModalProvider, $f57aed4a881a3485$export$bf688221f59024e5 as OverlayProvider, $f57aed4a881a3485$export$b47c3594eab58386 as OverlayContainer, $f57aed4a881a3485$export$33ffd74ebf07f060 as useModal, $86ea4cb521eb2e37$export$2317d149ed6f78c4 as DismissButton, $5e3802645cc19319$export$1c3ebcada18427bf as ariaHideOutside, $f2f8a6077418541e$export$542a6fd13ac93354 as usePopover, $8ac8429251c45e4b$export$dbc0f175b25fb0fb as useModalOverlay, $337b884510726a0d$export$c6fdb837b070b4ff as Overlay, $337b884510726a0d$export$14c98a7594375490 as useOverlayFocusContain };","map":{"version":3,"sources":["packages/@react-aria/overlays/src/useOverlayPosition.ts","packages/@react-aria/overlays/src/calculatePosition.ts","packages/@react-aria/overlays/src/useCloseOnScroll.ts","packages/@react-aria/overlays/src/useOverlay.ts","packages/@react-aria/overlays/src/useOverlayTrigger.ts","packages/@react-aria/overlays/src/usePreventScroll.ts","packages/@react-aria/overlays/src/useModal.tsx","packages/@react-aria/overlays/src/DismissButton.tsx","packages/@react-aria/overlays/intl/*.js","packages/@react-aria/overlays/intl/ar-AE.json","packages/@react-aria/overlays/intl/bg-BG.json","packages/@react-aria/overlays/intl/cs-CZ.json","packages/@react-aria/overlays/intl/da-DK.json","packages/@react-aria/overlays/intl/de-DE.json","packages/@react-aria/overlays/intl/el-GR.json","packages/@react-aria/overlays/intl/en-US.json","packages/@react-aria/overlays/intl/es-ES.json","packages/@react-aria/overlays/intl/et-EE.json","packages/@react-aria/overlays/intl/fi-FI.json","packages/@react-aria/overlays/intl/fr-FR.json","packages/@react-aria/overlays/intl/he-IL.json","packages/@react-aria/overlays/intl/hr-HR.json","packages/@react-aria/overlays/intl/hu-HU.json","packages/@react-aria/overlays/intl/it-IT.json","packages/@react-aria/overlays/intl/ja-JP.json","packages/@react-aria/overlays/intl/ko-KR.json","packages/@react-aria/overlays/intl/lt-LT.json","packages/@react-aria/overlays/intl/lv-LV.json","packages/@react-aria/overlays/intl/nb-NO.json","packages/@react-aria/overlays/intl/nl-NL.json","packages/@react-aria/overlays/intl/pl-PL.json","packages/@react-aria/overlays/intl/pt-BR.json","packages/@react-aria/overlays/intl/pt-PT.json","packages/@react-aria/overlays/intl/ro-RO.json","packages/@react-aria/overlays/intl/ru-RU.json","packages/@react-aria/overlays/intl/sk-SK.json","packages/@react-aria/overlays/intl/sl-SI.json","packages/@react-aria/overlays/intl/sr-SP.json","packages/@react-aria/overlays/intl/sv-SE.json","packages/@react-aria/overlays/intl/tr-TR.json","packages/@react-aria/overlays/intl/uk-UA.json","packages/@react-aria/overlays/intl/zh-CN.json","packages/@react-aria/overlays/intl/zh-TW.json","packages/@react-aria/overlays/src/ariaHideOutside.ts","packages/@react-aria/overlays/src/usePopover.ts","packages/@react-aria/overlays/src/useModalOverlay.ts","packages/@react-aria/overlays/src/Overlay.tsx"],"names":[],"mappings":";;;;;;;;;;;;;ACkEA,MAAM,0BAAI,GAAG;AACX,EAAA,GAAG,EAAE,KADM;AAEX,EAAA,MAAM,EAAE,KAFG;AAGX,EAAA,IAAI,EAAE,MAHK;AAIX,EAAA,KAAK,EAAE;AAJI,CAAb;AAOA,MAAM,uCAAiB,GAAG;AACxB,EAAA,GAAG,EAAE,QADmB;AAExB,EAAA,MAAM,EAAE,KAFgB;AAGxB,EAAA,IAAI,EAAE,OAHkB;AAIxB,EAAA,KAAK,EAAE;AAJiB,CAA1B;AAOA,MAAM,gCAAU,GAAG;AACjB,EAAA,GAAG,EAAE,MADY;AAEjB,EAAA,IAAI,EAAE;AAFW,CAAnB;AAKA,MAAM,+BAAS,GAAG;AAChB,EAAA,GAAG,EAAE,QADW;AAEhB,EAAA,IAAI,EAAE;AAFU,CAAlB;AAKA,MAAM,4CAAsB,GAAG,EAA/B,C,CAEA;;AACA,IAAI,oCAAc,GAAG,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAM,CAAC,cAA7D;;SAES,4C,CAAuB,a,EAAoC;AAClE,MAAI,KAAK,GAAG,CAAZ;AAAA,MAAe,MAAM,GAAG,CAAxB;AAAA,MAA2B,GAAG,GAAG,CAAjC;AAAA,MAAoC,IAAI,GAAG,CAA3C;AACA,MAAI,MAAM,GAAa,EAAvB;;AAEA,MAAI,aAAa,CAAC,OAAd,KAA0B,MAA9B,EAAsC;AACpC,QAAI,eAAe,GAAG,QAAQ,CAAC,eAA/B;QACQ,G;AAAR,IAAA,KAAK,GAAA,CAAG,GAAqB,GAArB,oCAAc,KAAA,IAAd,IAAA,oCAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,oCAAc,CAAE,KAAnB,MAAwB,IAAxB,IAAG,GAAqB,KAAA,KAAA,CAAxB,GAAG,GAAH,GAA4B,eAAe,CAAC,WAAjD;QACS,I;AAAT,IAAA,MAAM,GAAA,CAAG,IAAsB,GAAtB,oCAAc,KAAA,IAAd,IAAA,oCAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,oCAAc,CAAE,MAAnB,MAAyB,IAAzB,IAAG,IAAsB,KAAA,KAAA,CAAzB,GAAG,IAAH,GAA6B,eAAe,CAAC,YAAnD;AAEA,IAAA,MAAM,CAAC,GAAP,GAAa,eAAe,CAAC,SAAhB,IAA6B,aAAa,CAAC,SAAxD;AACA,IAAA,MAAM,CAAC,IAAP,GAAc,eAAe,CAAC,UAAhB,IAA8B,aAAa,CAAC,UAA1D;AACD,GAPD,MAOO;KACJ;AAAC,MAAA,KAAA,EAAA,KAAD;AAAM,MAAA,MAAA,EAAE,MAAR;AAAc,MAAA,GAAA,EAAE,GAAhB;AAAmB,MAAA,IAAA,EAAE;AAArB,QAA6B,+BAAS,CAAC,aAAD,C;AACvC,IAAA,MAAM,CAAC,GAAP,GAAa,aAAa,CAAC,SAA3B;AACA,IAAA,MAAM,CAAC,IAAP,GAAc,aAAa,CAAC,UAA5B;AACD;;AAED,SAAO;WAAC,KAAD;YAAQ,MAAR;YAAgB,MAAhB;SAAwB,GAAxB;UAA6B;AAA7B,GAAP;AACD;;SAEQ,+B,CAAU,I,EAAuB;AACxC,SAAO;AACL,IAAA,GAAG,EAAE,IAAI,CAAC,SADL;AAEL,IAAA,IAAI,EAAE,IAAI,CAAC,UAFN;AAGL,IAAA,KAAK,EAAE,IAAI,CAAC,WAHP;AAIL,IAAA,MAAM,EAAE,IAAI,CAAC;AAJR,GAAP;AAMD;;SAEQ,8B,CACP,I,EACA,M,EACA,I,EACA,mB,EACA,O,EACA;AACA,MAAI,eAAe,GAAG,mBAAmB,CAAC,MAApB,CAA2B,IAA3B,CAAtB;AACA,MAAI,eAAe,GAAG,mBAAmB,CAAC,+BAAS,CAAC,IAAD,CAAV,CAAzC;AAEA,MAAI,eAAe,GAAG,MAAM,GAAG,OAAT,GAAmB,eAAzC;AACA,MAAI,aAAa,GAAG,MAAM,GAAG,OAAT,GAAmB,eAAnB,GAAqC,IAAzD;AAEA,MAAI,eAAe,GAAG,CAAtB,EACE,OAAM,CAAE,eAAR,CADF,KAEO,IAAI,aAAa,GAAG,eAApB,EACL,OAAO,IAAI,CAAC,GAAL,CAAS,eAAe,GAAG,aAA3B,EAAwC,CAAG,eAA3C,CAAP,CADK,KAGL,OAAO,CAAP;AAEH;;SAEQ,gC,CAAW,I,EAAyB;AAC3C,MAAI,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,IAAxB,CAAZ;AACA,SAAO;AACL,IAAA,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,SAAP,EAAkB,EAAlB,CAAR,IAAiC,CADjC;AAEL,IAAA,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,YAAP,EAAqB,EAArB,CAAR,IAAoC,CAFvC;AAGL,IAAA,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAP,EAAmB,EAAnB,CAAR,IAAkC,CAHnC;AAIL,IAAA,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,WAAP,EAAoB,EAApB,CAAR,IAAmC;AAJrC,GAAP;AAMD;;SAEQ,oC,CAAe,K,EAAmC;AACzD,MAAI,4CAAsB,CAAC,KAAD,CAA1B,EACE,OAAO,4CAAsB,CAAC,KAAD,CAA7B;AAGF,MAAG,CAAE,SAAF,EAAa,cAAb,IAA+B,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAlC;AACA,MAAI,IAAI,GAAS,0BAAI,CAAC,SAAD,CAAJ,IAAmB,OAApC;AACA,MAAI,SAAS,GAAS,gCAAU,CAAC,IAAD,CAAhC;AAEA,MAAE,CAAG,0BAAI,CAAC,cAAD,CAAT,EACE,cAAc,GAAG,QAAjB;AAGF,MAAI,IAAI,GAAG,+BAAS,CAAC,IAAD,CAApB;AACA,MAAI,SAAS,GAAG,+BAAS,CAAC,SAAD,CAAzB;AACA,EAAA,4CAAsB,CAAC,KAAD,CAAtB,GAAgC;eAAC,SAAD;oBAAY,cAAZ;UAA4B,IAA5B;eAAkC,SAAlC;UAA6C,IAA7C;eAAmD;AAAnD,GAAhC;AACA,SAAO,4CAAsB,CAAC,KAAD,CAA7B;AACD;;SAEQ,qC,CACP,W,EACA,kB,EACA,W,EACA,a,EACA,M,EACA,W,EACA,2B,EACA,qB,EACA;AACA,MAAI;AAAC,IAAA,SAAA,EAAA,SAAD;AAAU,IAAA,cAAA,EAAE,cAAZ;AAA0B,IAAA,IAAA,EAAE,IAA5B;AAAgC,IAAA,SAAA,EAAE,SAAlC;AAA2C,IAAA,IAAA,EAAE,IAA7C;AAAiD,IAAA,SAAA,EAAE;AAAnD,MAAgE,aAApE;AACA,MAAI,QAAQ,GAAa,EAAzB,CAFA,CAIA;;AACA,EAAA,QAAQ,CAAC,SAAD,CAAR,GAAsB,WAAW,CAAC,SAAD,CAAjC;AACA,MAAI,cAAc,KAAK,QAAvB,EACE;AACA;AACA,IAAA,QAAQ,CAAC,SAAD,CAAR,IAAkB,CAAM,WAAW,CAAC,SAAD,CAAX,GAAyB,WAAW,CAAC,SAAD,CAA1C,IAAyD,CAA3E,CAHF,KAIO,IAAI,cAAc,KAAK,SAAvB,EACL;AACA;AACA,IAAA,QAAQ,CAAC,SAAD,CAAR,IAAwB,WAAW,CAAC,SAAD,CAAX,GAAyB,WAAW,CAAC,SAAD,CAA5D;AACD;;AAAA;AAGD;;AACA,EAAA,QAAQ,CAAC,SAAD,CAAR,IAAuB,WAAvB,CAlBA,CAoBA;;AACA,MAAI,iBAAiB,GAAG,WAAW,CAAC,SAAD,CAAX,GAA0B,WAAW,CAAC,SAAD,CAAX,GAAyB,CAAnD,GAAwD,WAAW,CAAC,SAAD,CAA3F,CArBA,CAsBA;;AACA,MAAI,iBAAiB,GAAG,WAAW,CAAC,SAAD,CAAX,GAA0B,WAAW,CAAC,SAAD,CAAX,GAAyB,CAA3E,CAvBA,CAyBA;;AACA,EAAA,QAAQ,CAAC,SAAD,CAAR,GAAsB,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,iBAAT,EAA4B,QAAQ,CAAC,SAAD,CAApC,CAAT,EAA2D,iBAA3D,CAAtB,CA1BA,CA4BA;;AACA,MAAI,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA;AACA;AACA;AACA,UAAM,eAAe,GAAI,qBAAqB,GAAG,2BAA2B,CAAC,IAAD,CAA9B,GAAuC,kBAAkB,CAAC,IAAD,CAAvG;AACA,IAAA,QAAQ,CAAC,uCAAiB,CAAC,IAAD,CAAlB,CAAR,GAAoC,IAAI,CAAC,KAAL,CAAW,eAAe,GAAG,WAAW,CAAC,IAAD,CAA7B,GAAsC,MAAjD,CAApC;AACD,GAPD,MAQE,QAAQ,CAAC,IAAD,CAAR,GAAiB,IAAI,CAAC,KAAL,CAAW,WAAW,CAAC,IAAD,CAAX,GAAoB,WAAW,CAAC,IAAD,CAA/B,GAAwC,MAAnD,CAAjB;;AAGF,SAAO,QAAP;AACD;;SAEQ,kC,CACP,Q,EACA,kB,EACA,2B,EACA,W,EACA,O,EACA,O,EACA;AACA,SAAO,QAAQ,CAAC,GAAT,IAAgB,IAAhB,GAEH,IAAI,CAAC,GAAL,CAAS,CAAT,EACC,kBAAkB,CAAC,MAAnB,GAA4B,kBAAkB,CAAC,GAA/C,GAAqD,kBAAkB,CAAC,MAAnB,CAA0B,GAA/E,IACE,2BAA2B,CAAC,GAA5B,GAAkC,QAAQ,CAAC,GAD7C,KAEE,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC,MAAtB,GAA+B,OAFjC,CADD,CAG2C;AAH3C,GAFG,GAQH,IAAI,CAAC,GAAL,CAAS,CAAT,EACC,WAAW,CAAC,GAAZ,GAAkB,2BAA2B,CAAC,GAA9C,IACE,kBAAkB,CAAC,GAAnB,GAAyB,kBAAkB,CAAC,MAAnB,CAA0B,GADrD,KAEE,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC,MAAtB,GAA+B,OAFjC,CADD,CAG2C;AAH3C,GARJ;AAaD;;SAEQ,uC,CACP,kB,EACA,2B,EACA,W,EACA,O,EACA,O,EACA,a,EACA;AACA,MAAI;AAAC,IAAA,SAAA,EAAA,SAAD;AAAU,IAAA,IAAA,EAAE,IAAZ;AAAgB,IAAA,IAAA,EAAE;AAAlB,MAA0B,aAA9B;AACA,MAAI,SAAS,KAAK,IAAlB,EACE,OAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,WAAW,CAAC,IAAD,CAAX,GAAoB,kBAAkB,CAAC,IAAD,CAAtC,GAA+C,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAA/C,GAAiF,2BAA2B,CAAC,IAAD,CAA5G,GAAqH,OAAO,CAAC,IAAD,CAA5H,GAAqI,OAAO,CAAC,uCAAiB,CAAC,IAAD,CAAlB,CAA5I,GAAwK,OAApL,CAAP;AAGF,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,kBAAkB,CAAC,IAAD,CAAlB,GAA2B,kBAAkB,CAAC,IAAD,CAA7C,GAAsD,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAAtD,GAAwF,2BAA2B,CAAC,IAAD,CAAnH,GAA4H,WAAW,CAAC,IAAD,CAAvI,GAAgJ,WAAW,CAAC,IAAD,CAA3J,GAAoK,OAAO,CAAC,IAAD,CAA3K,GAAoL,OAAO,CAAC,uCAAiB,CAAC,IAAD,CAAlB,CAA3L,GAAuN,OAAnO,CAAP;AACD;;SAEe,yC,CACd,c,EACA,W,EACA,W,EACA,U,EACA,O,EACA,O,EACA,I,EACA,kB,EACA,2B,EACA,M,EACA,W,EACA,qB,EACA,gB,EACgB;AAChB,MAAI,aAAa,GAAG,oCAAc,CAAC,cAAD,CAAlC;AACA,MAAI;AAAC,IAAA,IAAA,EAAA,IAAD;AAAK,IAAA,SAAA,EAAE,SAAP;AAAgB,IAAA,SAAA,EAAE,SAAlB;AAA2B,IAAA,SAAA,EAAE,SAA7B;AAAsC,IAAA,cAAA,EAAE;AAAxC,MAA0D,aAA9D;AACA,MAAI,QAAQ,GAAG,qCAAe,CAAC,WAAD,EAAc,kBAAd,EAAkC,WAAlC,EAA+C,aAA/C,EAA8D,MAA9D,EAAsE,WAAtE,EAAmF,2BAAnF,EAAgH,qBAAhH,CAA9B;AACA,MAAI,gBAAgB,GAAG,MAAvB;AACA,MAAI,KAAK,GAAG,uCAAiB,CAC3B,kBAD2B,EAE3B,2BAF2B,EAG3B,WAH2B,EAI3B,OAJ2B,EAK3B,OAAO,GAAG,MALiB,EAM3B,aAN2B,CAA7B,CALgB,CAchB;;AACA,MAAI,IAAI,IAAI,UAAU,CAAC,IAAD,CAAV,GAAmB,KAA/B,EAAsC;AACpC,QAAI,oBAAoB,GAAG,oCAAc,CAAA,GAAI,uCAAiB,CAAC,SAAD,CAAY,IAAG,cAAc,EAAlD,CAAzC;AACA,QAAI,eAAe,GAAG,qCAAe,CAAC,WAAD,EAAc,kBAAd,EAAkC,WAAlC,EAA+C,oBAA/C,EAAqE,MAArE,EAA6E,WAA7E,EAA0F,2BAA1F,EAAuH,qBAAvH,CAArC;AACA,QAAI,YAAY,GAAG,uCAAiB,CAClC,kBADkC,EAElC,2BAFkC,EAGlC,WAHkC,EAIlC,OAJkC,EAKlC,OAAO,GAAG,MALwB,EAMlC,oBANkC,CAApC,CAHoC,CAYpC;;AACA,QAAI,YAAY,GAAG,KAAnB,EAA0B;AACxB,MAAA,aAAa,GAAG,oBAAhB;AACA,MAAA,QAAQ,GAAG,eAAX;AACA,MAAA,gBAAgB,GAAG,MAAnB;AACD;AACF;;AAED,MAAI,KAAK,GAAG,8BAAQ,CAAC,SAAD,EAAY,QAAQ,CAAC,SAAD,CAApB,EAAiC,WAAW,CAAC,SAAD,CAA5C,EAAyD,kBAAzD,EAA6E,OAA7E,CAApB;AACA,EAAA,QAAQ,CAAC,SAAD,CAAR,IAAuB,KAAvB;AAEA,MAAI,SAAS,GAAG,kCAAY,CAC1B,QAD0B,EAE1B,kBAF0B,EAG1B,2BAH0B,EAI1B,WAJ0B,EAK1B,OAL0B,EAM1B,OAN0B,CAA5B;AASA,MAAI,gBAAgB,IAAI,gBAAgB,GAAG,SAA3C,EACE,SAAS,GAAG,gBAAZ;AAGF,EAAA,WAAW,CAAC,MAAZ,GAAqB,IAAI,CAAC,GAAL,CAAS,WAAW,CAAC,MAArB,EAA6B,SAA7B,CAArB;AAEA,EAAA,QAAQ,GAAG,qCAAe,CAAC,WAAD,EAAc,kBAAd,EAAkC,WAAlC,EAA+C,aAA/C,EAA8D,gBAA9D,EAAgF,WAAhF,EAA6F,2BAA7F,EAA0H,qBAA1H,CAA1B;AACA,EAAA,KAAK,GAAG,8BAAQ,CAAC,SAAD,EAAY,QAAQ,CAAC,SAAD,CAApB,EAAiC,WAAW,CAAC,SAAD,CAA5C,EAAyD,kBAAzD,EAA6E,OAA7E,CAAhB;AACA,EAAA,QAAQ,CAAC,SAAD,CAAR,IAAuB,KAAvB;AAEA,MAAI,aAAa,GAAa,EAA9B;AACA,EAAA,aAAa,CAAC,SAAD,CAAb,GAA4B,WAAW,CAAC,SAAD,CAAX,GAAyB,QAAQ,CAAC,SAAD,CAAjC,GAA+C,WAAW,CAAC,SAAD,CAAX,GAAyB,CAApG;AAEA,SAAO;cACL,QADK;AAEL,IAAA,SAAS,EAAE,SAFN;AAGL,IAAA,eAAe,EAAE,aAAa,CAAC,IAH1B;AAIL,IAAA,cAAc,EAAE,aAAa,CAAC,GAJzB;AAKL,IAAA,SAAS,EAAE,aAAa,CAAC;AALpB,GAAP;AAOD;;SAKe,yC,CAAkB,I,EAAoC;AACpE,MAAI;AAAC,IAAA,SAAA,EACH,SADE;AACO,IAAA,UAAA,EACT,UAFE;AAEQ,IAAA,WAAA,EACV,WAHE;AAGS,IAAA,UAAA,EACX,UAJE;AAIQ,IAAA,OAAA,EACV,OALE;AAKK,IAAA,UAAA,EACP,UANE;AAMQ,IAAA,eAAA,EACV,eAPE;AAOa,IAAA,MAAA,EACf,MARE;AAQI,IAAA,WAAA,EACN,WATE;AASS,IAAA,SAAA,EACX;AAVE,MAWA,IAXJ;AAaA,MAAI,SAAS,GAAK,WAAW,YAAY,WAAvB,IAAsC,WAAW,CAAC,YAAlD,IAAmE,QAAQ,CAAC,IAA9F;AACA,MAAI,eAAe,GAAG,SAAS,CAAC,OAAV,KAAsB,MAA5C;AACA,QAAM,sBAAsB,GAAG,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC,QAAlE;AACA,MAAI,qBAAqB,GAAA,CAAA,CAAK,sBAAL,IAA+B,sBAAsB,KAAK,QAAnF;AACA,MAAI,WAAW,GAAW,eAAe,GAAG,+BAAS,CAAC,UAAD,CAAZ,GAA2B,iCAAW,CAAC,UAAD,EAAa,SAAb,CAA/E;;AAEA,MAAE,CAAG,eAAL,EAAsB;AACpB,QAAI;AAAC,MAAA,SAAA,EAAA,SAAD;AAAU,MAAA,UAAA,EAAE;AAAZ,QAA0B,MAAM,CAAC,gBAAP,CAAwB,UAAxB,CAA9B;AACA,IAAA,WAAW,CAAC,GAAZ,IAAmB,QAAQ,CAAC,SAAD,EAAY,EAAZ,CAAR,IAA2B,CAA9C;AACA,IAAA,WAAW,CAAC,IAAZ,IAAoB,QAAQ,CAAC,UAAD,EAAa,EAAb,CAAR,IAA4B,CAAhD;AACD;;AAED,MAAI,WAAW,GAAW,+BAAS,CAAC,WAAD,CAAnC;AACA,MAAI,OAAO,GAAG,gCAAU,CAAC,WAAD,CAAxB;AACA,EAAA,WAAW,CAAC,KAAZ,IAAqB,OAAO,CAAC,IAAR,GAAe,OAAO,CAAC,KAA5C;AACA,EAAA,WAAW,CAAC,MAAZ,IAAsB,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC,MAA5C;AAEA,MAAI,UAAU,GAAG,+BAAS,CAAC,UAAD,CAA1B;AACA,MAAI,kBAAkB,GAAG,4CAAsB,CAAC,eAAD,CAA/C;AACA,MAAI,2BAA2B,GAAW,eAAe,CAAC,OAAhB,KAA4B,MAA5B,GAAqC,+BAAS,CAAC,SAAD,CAA9C,GAA4D,iCAAW,CAAC,SAAD,EAAY,eAAZ,CAAjH;AAEA,SAAO,yCAAyB,CAC9B,SAD8B,EAE9B,WAF8B,EAG9B,WAH8B,EAI9B,UAJ8B,EAK9B,OAL8B,EAM9B,OAN8B,EAO9B,UAP8B,EAQ9B,kBAR8B,EAS9B,2BAT8B,EAU9B,MAV8B,EAW9B,WAX8B,EAY9B,qBAZ8B,EAa9B,SAb8B,CAAhC;AAeD;;SAEQ,+B,CAAU,I,EAAuB;AACxC,MAAI;AAAC,IAAA,GAAA,EAAA,GAAD;AAAI,IAAA,IAAA,EAAE,IAAN;AAAU,IAAA,KAAA,EAAE,KAAZ;AAAiB,IAAA,MAAA,EAAE;AAAnB,MAA6B,IAAI,CAAC,qBAAL,EAAjC;AACA,MAAI;AAAC,IAAA,SAAA,EAAA,SAAD;AAAU,IAAA,UAAA,EAAE,UAAZ;AAAsB,IAAA,SAAA,EAAE,SAAxB;AAAiC,IAAA,UAAA,EAAE;AAAnC,MAAiD,QAAQ,CAAC,eAA9D;AACA,SAAO;AACL,IAAA,GAAG,EAAE,GAAG,GAAG,SAAN,GAAkB,SADlB;AAEL,IAAA,IAAI,EAAE,IAAI,GAAG,UAAP,GAAoB,UAFrB;WAGL,KAHK;YAIL;AAJK,GAAP;AAMD;;SAEQ,iC,CAAY,I,EAAe,M,EAAyB;AAC3D,MAAI,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,IAAxB,CAAZ;AACA,MAAI,MAAJ;;AACA,MAAI,KAAK,CAAC,QAAN,KAAmB,OAAvB,EAAgC;AAC9B,QAAI;AAAC,MAAA,GAAA,EAAA,GAAD;AAAI,MAAA,IAAA,EAAE,IAAN;AAAU,MAAA,KAAA,EAAE,KAAZ;AAAiB,MAAA,MAAA,EAAE;AAAnB,QAA6B,IAAI,CAAC,qBAAL,EAAjC;AACA,IAAA,MAAM,GAAG;WAAC,GAAD;YAAM,IAAN;aAAY,KAAZ;cAAmB;AAAnB,KAAT;AACD,GAHD,MAGO;AACL,IAAA,MAAM,GAAG,+BAAS,CAAC,IAAD,CAAlB;AACA,QAAI,YAAY,GAAG,+BAAS,CAAC,MAAD,CAA5B;AACA,QAAI,WAAW,GAAG,MAAM,CAAC,gBAAP,CAAwB,MAAxB,CAAlB;AACA,IAAA,YAAY,CAAC,GAAb,IAAgB,CAAK,QAAQ,CAAC,WAAW,CAAC,cAAb,EAA6B,EAA7B,CAAR,IAA4C,CAAjD,IAAsD,MAAM,CAAC,SAA7E;AACA,IAAA,YAAY,CAAC,IAAb,IAAiB,CAAK,QAAQ,CAAC,WAAW,CAAC,eAAb,EAA8B,EAA9B,CAAR,IAA6C,CAAlD,IAAuD,MAAM,CAAC,UAA/E;AACA,IAAA,MAAM,CAAC,GAAP,IAAc,YAAY,CAAC,GAA3B;AACA,IAAA,MAAM,CAAC,IAAP,IAAe,YAAY,CAAC,IAA5B;AACD;;AAED,EAAA,MAAM,CAAC,GAAP,IAAc,QAAQ,CAAC,KAAK,CAAC,SAAP,EAAkB,EAAlB,CAAR,IAAiC,CAA/C;AACA,EAAA,MAAM,CAAC,IAAP,IAAe,QAAQ,CAAC,KAAK,CAAC,UAAP,EAAmB,EAAnB,CAAR,IAAkC,CAAjD;AACA,SAAO,MAAP;AACD;;AC/ZM,MAAM,yCAAU,GAAiC,IAAI,OAAJ,EAAjD;;SASS,yC,CAAiB,I,EAA4B;AAC3D,MAAI;AAAC,IAAA,UAAA,EAAA,UAAD;AAAW,IAAA,MAAA,EAAE,MAAb;AAAmB,IAAA,OAAA,EAAE;AAArB,MAAgC,IAApC;AAEA,EAAA,gBAAS,CAAA,MAAO;AACd,QAAE,CAAG,MAAL,EACE;;AAGF,QAAI,QAAQ,GAAI,CAAJ,IAAsB;AAChC;AACA,UAAI,MAAM,GAAG,CAAC,CAAC,MAAf,CAFgC,CAGhC;;AACA,UAAE,CAAG,UAAU,CAAC,OAAd,IAA2B,MAAM,YAAY,IAAlB,IAAsB,CAAM,MAAM,CAAC,QAAP,CAAgB,UAAU,CAAC,OAA3B,CAAzD,EACE;AAGF,UAAI,cAAc,GAAG,OAAO,IAAI,yCAAU,CAAC,GAAX,CAAe,UAAU,CAAC,OAA1B,CAAhC;AACA,UAAI,cAAJ,EACE,cAAc;AAEjB,KAZD;;AAcA,IAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,QAAlC,EAA4C,IAA5C;AACA,WAAM,MAAO;AACX,MAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,QAArC,EAA+C,IAA/C;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,CAvBM,CAAT;AAwBD,C,CFSD;;;AACA,IAAI,oCAAc,GAAG,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAM,CAAC,cAA7D;;SAMgB,yC,CAAmB,K,EAAwC;AACzE,MAAI;AAAC,IAAA,SAAA,EAAA;AAAD,MAAc,gBAAS,EAA3B;AACA,MAAI;AAAC,IAAA,SAAA,EACH,SADE;AACO,IAAA,UAAA,EACT,UAFE;AAGF,IAAA,SAAS,GAAG,UAHV;AAIF,IAAA,SAAS,GAAG,QAJV;AAKF,IAAA,gBAAgB,GAAG,EALjB;AAMF,IAAA,UAAU,GAAG,IANX;AAOF,IAAA,eAAe,GAAG,OAAO,QAAP,KAAoB,WAApB,GAAkC,QAAQ,CAAC,IAA3C,GAAkD,IAPlE;AAQF,IAAA,MAAM,GAAG,CARP;AASF,IAAA,WAAW,GAAG,CATZ;AAUF,IAAA,oBAAoB,GAAG,IAVrB;AAWF,IAAA,MAAM,GAAG,IAXP;AAWW,IAAA,OAAA,EACb,OAZE;AAYK,IAAA,SAAA,EACP;AAbE,MAcA,KAdJ;AAeA,MAAG,CAAE,QAAF,EAAY,WAAZ,IAA2B,eAAQ,CAAiB;AACrD,IAAA,QAAQ,EAAE,EAD2C;AAErD,IAAA,eAAe,EAAE,SAFoC;AAGrD,IAAA,cAAc,EAAE,SAHqC;AAIrD,IAAA,SAAS,EAAE,SAJ0C;AAKrD,IAAA,SAAS,EAAE;AAL0C,GAAjB,CAAtC;AAQA,MAAI,IAAI,GAAG,CACT,oBADS,EAET,SAFS,EAGT,UAAU,CAAC,OAHF,EAIT,SAAS,CAAC,OAJD,EAKT,SAAS,CAAC,OALD,EAMT,gBANS,EAOT,UAPS,EAQT,eARS,EAST,MATS,EAUT,WAVS,EAWT,MAXS,EAYT,SAZS,EAaT,SAbS,CAAX;AAgBA,MAAI,cAAc,GAAG,kBAAW,CAAA,MAAO;AACrC,QAAI,oBAAoB,KAAK,KAAzB,IAA8B,CAAK,MAAnC,IAAyC,CAAK,UAAU,CAAC,OAAzD,IAAgE,CAAK,SAAS,CAAC,OAA/E,IAAsF,CAAK,SAAS,CAAC,OAArG,IAA4G,CAAK,eAArH,EACE;AAGF,IAAA,WAAW,CACT,yCAAiB,CAAC;AAChB,MAAA,SAAS,EAAE,kCAAY,CAAC,SAAD,EAAY,SAAZ,CADP;AAEhB,MAAA,WAAW,EAAE,UAAU,CAAC,OAFR;AAGhB,MAAA,UAAU,EAAE,SAAS,CAAC,OAHN;AAIhB,MAAA,UAAU,EAAE,SAAS,CAAC,OAJN;AAKhB,MAAA,OAAO,EAAE,gBALO;kBAMhB,UANgB;uBAOhB,eAPgB;cAQhB,MARgB;mBAShB,WATgB;iBAUhB;AAVgB,KAAD,CADR,CAAX;AAcD,GAnB+B,EAmB7B,IAnB6B,CAAhC,CAzCyE,CA8DzE;;AACA,EAAA,sBAAe,CAAC,cAAD,EAAiB,IAAjB,CAAf,CA/DyE,CAiEzE;;AACA,EAAA,+BAAS,CAAC,cAAD,CAAT,CAlEyE,CAoEzE;AACA;;AACA,MAAI,UAAU,GAAG,aAAM,CAAC,KAAD,CAAvB;AACA,EAAA,sBAAe,CAAA,MAAO;AACpB,QAAI,OAAJ;;AACA,QAAI,QAAQ,GAAA,MAAS;AACnB,MAAA,UAAU,CAAC,OAAX,GAAqB,IAArB;AACA,MAAA,YAAY,CAAC,OAAD,CAAZ;AAEA,MAAA,OAAO,GAAG,UAAU,CAAA,MAAO;AACzB,QAAA,UAAU,CAAC,OAAX,GAAqB,KAArB;AACD,OAFmB,EAEjB,GAFiB,CAApB;AAIA,MAAA,cAAc;AACf,KATD;;AAWA,IAAA,oCAAc,KAAA,IAAd,IAAA,oCAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,oCAAc,CAAE,gBAAhB,CAAiC,QAAjC,EAA2C,QAA3C,CAAA;AAEA,WAAM,MAAO;AACX,MAAA,oCAAc,KAAA,IAAd,IAAA,oCAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,oCAAc,CAAE,mBAAhB,CAAoC,QAApC,EAA8C,QAA9C,CAAA;AACD,KAFD;AAGD,GAlBc,EAkBZ,CAAC,cAAD,CAlBY,CAAf;AAoBA,MAAI,KAAK,GAAG,kBAAW,CAAA,MAAO;AAC5B,QAAE,CAAG,UAAU,CAAC,OAAhB,EACE,OAAO;AAEV,GAJsB,EAIpB,CAAC,OAAD,EAAU,UAAV,CAJoB,CAAvB,CA3FyE,CAiGzE;AACA;;AACA,EAAA,yCAAgB,CAAC;AACf,IAAA,UAAU,EAAE,SADG;YAEf,MAFe;AAGf,IAAA,OAAO,EAAE,OAAO,GAAG,KAAH,GAAW;AAHZ,GAAD,CAAhB;AAMA,SAAO;AACL,IAAA,YAAY,EAAE;AACZ,MAAA,KAAK,EAAE;AACL,QAAA,QAAQ,EAAE,UADL;AAEL,QAAA,MAAM,EAAE,MAFH;WAGF,QAAQ,CAAC,QAHP;AAIL,QAAA,SAAS,EAAE,QAAQ,CAAC;AAJf;AADK,KADT;AASL,IAAA,SAAS,EAAE,QAAQ,CAAC,SATf;AAUL,IAAA,UAAU,EAAE;AACV,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,QAAQ,CAAC,eADV;AAEL,QAAA,GAAG,EAAE,QAAQ,CAAC;AAFT;AADG,KAVP;oBAgBL;AAhBK,GAAP;AAkBD;;SAEQ,+B,CAAU,Q,EAAU;AAC3B,EAAA,sBAAe,CAAA,MAAO;AACpB,IAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,QAAlC,EAA4C,KAA5C;AACA,WAAM,MAAO;AACX,MAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,QAArC,EAA+C,KAA/C;AACD,KAFD;AAGD,GALc,EAKZ,CAAC,QAAD,CALY,CAAf;AAMD;;SAEQ,kC,CAAa,Q,EAAU,S,EAAW;AACzC,MAAI,SAAS,KAAK,KAAlB,EACE,OAAO,QAAQ,CAAC,OAAT,CAAiB,OAAjB,EAA0B,OAA1B,EAAmC,OAAnC,CAA2C,KAA3C,EAAkD,MAAlD,CAAP;AAEF,SAAO,QAAQ,CAAC,OAAT,CAAiB,OAAjB,EAA0B,MAA1B,EAAkC,OAAlC,CAA0C,KAA1C,EAAiD,OAAjD,CAAP;AACD;;AG5JD,MAAM,qCAAe,GAAyB,EAA9C;;SAOgB,yC,CAAW,K,EAAyB,G,EAAsC;AACxF,MAAI;AAAC,IAAA,OAAA,EACH,OADE;AACK,IAAA,iBAAA,EACP,iBAFE;AAEe,IAAA,MAAA,EACjB,MAHE;AAIF,IAAA,aAAa,GAAG,KAJd;AAKF,IAAA,yBAAyB,GAAG,KAL1B;AAK+B,IAAA,4BAAA,EACjC;AANE,MAOA,KAPJ,CADwF,CAUxF;;AACA,EAAA,gBAAS,CAAA,MAAO;AACd,QAAI,MAAJ,EACE,qCAAe,CAAC,IAAhB,CAAqB,GAArB;AAGF,WAAM,MAAO;AACX,UAAI,KAAK,GAAG,qCAAe,CAAC,OAAhB,CAAwB,GAAxB,CAAZ;AACA,UAAI,KAAK,IAAI,CAAb,EACE,qCAAe,CAAC,MAAhB,CAAuB,KAAvB,EAA8B,CAA9B;AAEH,KALD;AAMD,GAXQ,EAWN,CAAC,MAAD,EAAS,GAAT,CAXM,CAAT,CAXwF,CAwBxF;;AACA,MAAI,MAAM,GAAA,MAAS;AACjB,QAAI,qCAAe,CAAC,qCAAe,CAAC,MAAhB,GAAyB,CAA1B,CAAf,KAAgD,GAAhD,IAAuD,OAA3D,EACE,OAAO;AAEV,GAJD;;AAMA,MAAI,sBAAsB,GAAI,CAAJ,IAAmC;AAC3D,QAAE,CAAG,4BAAH,IAAmC,4BAA4B,CAAC,CAAC,CAAC,MAAH,CAAjE,EACE;AAAA,UAAI,qCAAe,CAAC,qCAAe,CAAC,MAAhB,GAAyB,CAA1B,CAAf,KAAgD,GAApD,EAAyD;AACvD,QAAA,CAAC,CAAC,eAAF;AACA,QAAA,CAAC,CAAC,cAAF;AACD;AAAA;AAEJ,GAPD;;AASA,MAAI,iBAAiB,GAAI,CAAJ,IAAmC;AACtD,QAAE,CAAG,4BAAH,IAAmC,4BAA4B,CAAC,CAAC,CAAC,MAAH,CAAjE,EAAwF;AACtF,UAAI,qCAAe,CAAC,qCAAe,CAAC,MAAhB,GAAyB,CAA1B,CAAf,KAAgD,GAApD,EAAyD;AACvD,QAAA,CAAC,CAAC,eAAF;AACA,QAAA,CAAC,CAAC,cAAF;AACD;;AACD,MAAA,MAAM;AACP;AACF,GARD,CAxCwF,CAkDxF;;;AACA,MAAI,SAAS,GAAI,CAAJ,IAAU;AACrB,QAAI,CAAC,CAAC,GAAF,KAAU,QAAV,IAAkB,CAAK,yBAA3B,EAAsD;AACpD,MAAA,CAAC,CAAC,eAAF;AACA,MAAA,CAAC,CAAC,cAAF;AACA,MAAA,MAAM;AACP;AACF,GAND,CAnDwF,CA2DxF;;;AACA,EAAA,yBAAkB,CAAC;SAAC,GAAD;AAAM,IAAA,iBAAiB,EAAE,aAAa,GAAG,iBAAH,GAAuB,IAA7D;4BAAmE;AAAnE,GAAD,CAAlB;AAEA,MAAI;AAAC,IAAA,gBAAA,EAAA;AAAD,MAAqB,qBAAc,CAAC;AACtC,IAAA,UAAU,EAAA,CAAG,iBADyB;AAEtC,IAAA,YAAY,EAAG,CAAH,IAAS;AACnB,UAAE,CAAG,4BAAH,IAAmC,4BAA4B,CAAC,CAAC,CAAC,aAAH,CAAjE,EACE,OAAO;AAEV;AANqC,GAAD,CAAvC;;AASA,MAAI,qBAAqB,GAAG,CAAH,IAAQ;AAC/B;AACA,QAAI,CAAC,CAAC,MAAF,KAAa,CAAC,CAAC,aAAnB,EACE,CAAC,CAAC,cAAF;AAEH,GALD;;AAOA,SAAO;AACL,IAAA,YAAY,EAAE;iBACZ,SADY;SAET;AAFS,KADT;AAKL,IAAA,aAAa,EAAE;AACb,MAAA,aAAa,EAAE;AADF;AALV,GAAP;AASD;;SChHe,yC,CAAkB,K,EAA4B,K,EAA4B,G,EAA6C;AACrI,MAAI;AAAC,IAAA,IAAA,EAAA;AAAD,MAAS,KAAb;AACA,MAAI;AAAC,IAAA,MAAA,EAAA;AAAD,MAAW,KAAf,CAFqI,CAIrI;AACA;;AACA,EAAA,gBAAS,CAAA,MAAO;AACd,QAAI,GAAG,IAAI,GAAG,CAAC,OAAf,EACE,yCAAU,CAAC,GAAX,CAAe,GAAG,CAAC,OAAnB,EAA4B,KAAK,CAAC,KAAlC;AAEH,GAJQ,CAAT,CANqI,CAYrI;AACA;AACA;AACA;;AACA,MAAI,YAAY,GAAG,SAAnB;AACA,MAAI,IAAI,KAAK,MAAb,EACE,YAAY,GAAG,IAAf,CADF,KAEO,IAAI,IAAI,KAAK,SAAb,EACL,YAAY,GAAG,SAAf;AAGF,MAAI,SAAS,GAAG,YAAK,EAArB;AACA,SAAO;AACL,IAAA,YAAY,EAAE;AACZ,uBAAiB,YADL;AAEZ,uBAAiB,MAFL;AAGZ,uBAAiB,MAAM,GAAG,SAAH,GAAe,IAH1B;AAIZ,MAAA,OAAO,EAAE,KAAK,CAAC;AAJH,KADT;AAOL,IAAA,YAAY,EAAE;AACZ,MAAA,EAAE,EAAE;AADQ;AAPT,GAAP;AAWD,C,CCpDD;;;AACA,MAAM,oCAAc,GAAG,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAM,CAAC,cAA/D,C,CAEA;;AACA,MAAM,uCAAiB,GAAG,IAAI,GAAJ,CAAQ,CAChC,UADgC,EAEhC,OAFgC,EAGhC,OAHgC,EAIhC,OAJgC,EAKhC,MALgC,EAMhC,OANgC,EAOhC,QAPgC,EAQhC,QARgC,EAShC,OATgC,CAAR,CAA1B;;SAiBgB,yC,CAAiB,OAA6B,GAAG,E,EAAI;AACnE,MAAI;AAAC,IAAA,UAAA,EAAA;AAAD,MAAe,OAAnB;AAEA,EAAA,sBAAe,CAAA,MAAO;AACpB,QAAI,UAAJ,EACE;AAGF,QAAI,YAAK,EAAT,EACE,OAAO,+CAAyB,EAAhC,CADF,KAGE,OAAO,2CAAqB,EAA5B;AAEH,GAVc,EAUZ,CAAC,UAAD,CAVY,CAAf;AAWD,C,CAED;AACA;;;SACS,2C,GAAwB;AAC/B,SAAO,YAAK,CACV,8BAAQ,CAAC,QAAQ,CAAC,eAAV,EAA2B,cAA3B,EAAyC,GAAK,MAAM,CAAC,UAAP,GAAoB,QAAQ,CAAC,eAAT,CAAyB,WAAY,IAAvG,CADE,EAEV,8BAAQ,CAAC,QAAQ,CAAC,eAAV,EAA2B,UAA3B,EAAuC,QAAvC,CAFE,CAAZ;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS,+C,GAA4B;AACnC,MAAI,UAAJ;AACA,MAAI,KAAK,GAAG,CAAZ;;AACA,MAAI,YAAY,GAAI,CAAJ,IAAsB;AACpC;AACA,IAAA,UAAU,GAAG,sBAAe,CAAC,CAAC,CAAC,MAAH,CAA5B;AACA,QAAI,UAAU,KAAK,QAAQ,CAAC,eAAxB,IAA2C,UAAU,KAAK,QAAQ,CAAC,IAAvE,EACE;AAGF,IAAA,KAAK,GAAG,CAAC,CAAC,cAAF,CAAiB,CAAjB,EAAoB,KAA5B;AACD,GARD;;AAUA,MAAI,WAAW,GAAI,CAAJ,IAAsB;AACnC;AACA,QAAI,UAAU,KAAK,QAAQ,CAAC,eAAxB,IAA2C,UAAU,KAAK,QAAQ,CAAC,IAAvE,EAA6E;AAC3E,MAAA,CAAC,CAAC,cAAF;AACA;AACD,KALkC,CAOnC;AACA;AACA;AACA;;;AACA,QAAI,CAAC,GAAG,CAAC,CAAC,cAAF,CAAiB,CAAjB,EAAoB,KAA5B;AACA,QAAI,SAAS,GAAG,UAAU,CAAC,SAA3B;AACA,QAAI,MAAM,GAAG,UAAU,CAAC,YAAX,GAA0B,UAAU,CAAC,YAAlD;AAEA,QAAK,SAAS,IAAI,CAAb,IAAkB,CAAC,GAAG,KAAtB,IAAiC,SAAS,IAAI,MAAb,IAAuB,CAAC,GAAG,KAAjE,EACE,CAAC,CAAC,cAAF;AAGF,IAAA,KAAK,GAAG,CAAR;AACD,GApBD;;AAsBA,MAAI,UAAU,GAAI,CAAJ,IAAsB;AAClC,QAAI,MAAM,GAAG,CAAC,CAAC,MAAf,CADkC,CAGlC;;AACA,QAAI,sCAAgB,CAAC,MAAD,CAAhB,IAA4B,MAAM,KAAK,QAAQ,CAAC,aAApD,EAAmE;AACjE,MAAA,CAAC,CAAC,cAAF,GADiE,CAGjE;AACA;AACA;;AACA,MAAA,MAAM,CAAC,KAAP,CAAa,SAAb,GAAyB,qBAAzB;AACA,MAAA,MAAM,CAAC,KAAP;AACA,MAAA,qBAAqB,CAAA,MAAO;AAC1B,QAAA,MAAM,CAAC,KAAP,CAAa,SAAb,GAAyB,EAAzB;AACD,OAFoB,CAArB;AAGD;AACF,GAhBD;;AAkBA,MAAI,OAAO,GAAI,CAAJ,IAAsB;AAC/B,QAAI,MAAM,GAAG,CAAC,CAAC,MAAf;;AACA,QAAI,sCAAgB,CAAC,MAAD,CAApB,EAA8B;AAC5B;AACA;AACA;AACA;AACA,MAAA,MAAM,CAAC,KAAP,CAAa,SAAb,GAAyB,qBAAzB;AACA,MAAA,qBAAqB,CAAA,MAAO;AAC1B,QAAA,MAAM,CAAC,KAAP,CAAa,SAAb,GAAyB,EAAzB,CAD0B,CAG1B;AACA;;AACA,YAAI,oCAAJ,EAAkB;AAChB,cAAI,oCAAc,CAAC,MAAf,GAAwB,MAAM,CAAC,WAAnC,EACE;AACA;AACA,YAAA,qBAAqB,CAAA,MAAO;AAC1B,cAAA,oCAAc,CAAC,MAAD,CAAd;AACD,aAFoB,CAArB,CAHF,KAOE;AACA;AACA,YAAA,oCAAc,CAAC,gBAAf,CAAgC,QAAhC,EAAwC,MAAQ,oCAAc,CAAC,MAAD,CAA9D,EAAwE;AAAC,cAAA,IAAI,EAAE;AAAP,aAAxE;;AAGL,OAlBoB,CAArB;AAmBD;AACF,GA5BD;;AA8BA,MAAI,cAAc,GAAA,MAAS;AACzB;AACA;AACA,IAAA,MAAM,CAAC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAJD,CAnFmC,CAyFnC;AACA;AACA;;;AACA,MAAI,OAAO,GAAG,MAAM,CAAC,WAArB;AACA,MAAI,OAAO,GAAG,MAAM,CAAC,WAArB;AACA,MAAI,aAAa,GAAG,YAAK,CACvB,8BAAQ,CAAC,QAAQ,CAAC,eAAV,EAA2B,cAA3B,EAAyC,GAAK,MAAM,CAAC,UAAP,GAAoB,QAAQ,CAAC,eAAT,CAAyB,WAAY,IAAvG,CADe,EAEvB,8BAAQ,CAAC,QAAQ,CAAC,eAAV,EAA2B,UAA3B,EAAuC,QAAvC,CAFe,EAGvB,8BAAQ,CAAC,QAAQ,CAAC,IAAV,EAAgB,WAAhB,EAA8B,IAAG,OAAQ,IAAzC,CAHe,CAAzB,CA9FmC,CAoGnC;;AACA,EAAA,MAAM,CAAC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA,MAAI,YAAY,GAAG,YAAK,CACtB,8BAAQ,CAAC,QAAD,EAAW,YAAX,EAAyB,YAAzB,EAAuC;AAAC,IAAA,OAAO,EAAE,KAAV;AAAiB,IAAA,OAAO,EAAE;AAA1B,GAAvC,CADc,EAEtB,8BAAQ,CAAC,QAAD,EAAW,WAAX,EAAwB,WAAxB,EAAqC;AAAC,IAAA,OAAO,EAAE,KAAV;AAAiB,IAAA,OAAO,EAAE;AAA1B,GAArC,CAFc,EAGtB,8BAAQ,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC;AAAC,IAAA,OAAO,EAAE,KAAV;AAAiB,IAAA,OAAO,EAAE;AAA1B,GAAnC,CAHc,EAItB,8BAAQ,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6B,IAA7B,CAJc,EAKtB,8BAAQ,CAAC,MAAD,EAAS,QAAT,EAAmB,cAAnB,CALc,CAAxB;AAQA,SAAM,MAAO;AACX;AACA,IAAA,aAAa;AACb,IAAA,YAAY;AACZ,IAAA,MAAM,CAAC,QAAP,CAAgB,OAAhB,EAAyB,OAAzB;AACD,GALD;AAMD,C,CAED;;;SACS,8B,CAAS,O,EAAsB,K,EAAe,K,EAAe;AACpE,MAAI,GAAG,GAAG,OAAO,CAAC,KAAR,CAAc,KAAd,CAAV;AACA,EAAA,OAAO,CAAC,KAAR,CAAc,KAAd,IAAuB,KAAvB;AACA,SAAM,MAAO;AACX,IAAA,OAAO,CAAC,KAAR,CAAc,KAAd,IAAuB,GAAvB;AACD,GAFD;AAGD,C,CAED;;;SACS,8B,CACP,M,EACA,K,EACA,O,EACA,O,EACA;AACA,EAAA,MAAM,CAAC,gBAAP,CAAwB,KAAxB,EAA+B,OAA/B,EAAwC,OAAxC;AACA,SAAM,MAAO;AACX,IAAA,MAAM,CAAC,mBAAP,CAA2B,KAA3B,EAAkC,OAAlC,EAA2C,OAA3C;AACD,GAFD;AAGD;;SAEQ,oC,CAAe,M,EAAiB;AACvC,MAAI,IAAI,GAAG,QAAQ,CAAC,gBAAT,IAA6B,QAAQ,CAAC,eAAjD;;SACO,MAAM,IAAI,MAAM,KAAK,I,EAAM;AAChC;AACA,QAAI,UAAU,GAAG,sBAAe,CAAC,MAAD,CAAhC;;AACA,QAAI,UAAU,KAAK,QAAQ,CAAC,eAAxB,IAA2C,UAAU,KAAK,QAAQ,CAAC,IAAnE,IAA2E,UAAU,KAAK,MAA9F,EAAsG;AACpG,UAAI,aAAa,GAAG,UAAU,CAAC,qBAAX,GAAmC,GAAvD;AACA,UAAI,SAAS,GAAG,MAAM,CAAC,qBAAP,GAA+B,GAA/C;AACA,UAAI,SAAS,GAAG,aAAa,GAAG,MAAM,CAAC,YAAvC,EACE,UAAU,CAAC,SAAX,IAAwB,SAAS,GAAG,aAApC;AAEH;;AAED,IAAA,MAAM,GAAG,UAAU,CAAC,aAApB;AACD;AACF;;SAEQ,sC,CAAiB,M,EAAiB;AACzC,SACG,MAAM,YAAY,gBAAlB,IAAkC,CAAK,uCAAiB,CAAC,GAAlB,CAAsB,MAAM,CAAC,IAA7B,CAAvC,IACD,MAAM,YAAY,mBADjB,IAEA,MAAM,YAAY,WAAlB,IAAiC,MAAM,CAAC,iBAH3C;AAKD;;ACnOD,MAAM,6BAAO,GAAA,aAAG,YAAK,CAAC,aAAN,CAAyC,IAAzC,CAAhB;;SAUgB,wC,CAAc,K,EAA2B;AACvD,MAAI;AAAC,IAAA,QAAA,EAAA;AAAD,MAAa,KAAjB;AACA,MAAI,MAAM,GAAG,iBAAU,CAAC,6BAAD,CAAvB;AACA,MAAG,CAAE,UAAF,EAAc,aAAd,IAA+B,eAAQ,CAAC,CAAD,CAA1C;AACA,MAAI,OAAO,GAAG,cAAO,CAAA,OAAQ;YAC3B,MAD2B;gBAE3B,UAF2B;;AAG3B,IAAA,QAAQ,GAAG;AACT,MAAA,aAAa,CAAC,KAAD,IAAU,KAAK,GAAG,CAAlB,CAAb;AACA,UAAI,MAAJ,EACE,MAAM,CAAC,QAAP;AAEH,KAR0B;;AAS3B,IAAA,WAAW,GAAG;AACZ,MAAA,aAAa,CAAC,KAAD,IAAU,KAAK,GAAG,CAAlB,CAAb;AACA,UAAI,MAAJ,EACE,MAAM,CAAC,WAAP;AAEH;;AAd0B,GAAR,CAAA,EAejB,CAAC,MAAD,EAAS,UAAT,CAfiB,CAArB;AAiBA,SAAM,aAAA,YAAA,CAAA,aAAA,CACH,6BAAO,CAAC,QADL,EACa;AAAC,IAAA,KAAK,EAAE;AAAR,GADb,EAED,QAFC,CAAN;AAKD;;SAae,yC,GAAsC;AACpD,MAAI,OAAO,GAAG,iBAAU,CAAC,6BAAD,CAAxB;AACA,SAAO;AACL,IAAA,kBAAkB,EAAE;AAClB,qBAAe,OAAO,IAAI,OAAO,CAAC,UAAR,GAAqB,CAAhC,GAAoC,IAApC,GAA2C;AADxC;AADf,GAAP;AAKD;AAED;;AAAA;;;AAEG,SACM,yCADN,CAC0B,KAD1B,EACqD;AACtD,MAAI;AAAC,IAAA,kBAAA,EAAA;AAAD,MAAuB,yCAAgB,EAA3C;AACA,SAAM,aAAA,YAAA,CAAA,aAAA,CAAE,KAAF,EAAK;AAAC,8BAAA,IAAD;OAA4B,KAA5B;OAAuC;AAAvC,GAAL,CAAN;AACD;;SAUe,yC,CAAgB,K,EAA2B;AACzD,SAAM,aAAA,YAAA,CAAA,aAAA,CACH,wCADG,EACU,IADV,EACU,aAAA,YAAA,CAAA,aAAA,CACX,yCADW,EACa,KADb,CADV,CAAN;AAKD;;SAiBe,yC,CAAiB,K,EAAiD;AAChF,MAAI,KAAK,GAAG,eAAQ,EAApB;AACA,MAAI;AAAC,IAAA,eAAe,GAAG,KAAK,GAAG,IAAH,GAAU,QAAQ,CAAC,IAA3C;AAA+C,OAAK;AAApD,MAA4D,KAAhE;AAEA,EAAA,YAAK,CAAC,SAAN,CAAe,MAAO;AACpB,QAAI,eAAe,KAAA,IAAf,IAAA,eAAe,KAAf,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,eAAe,CAAE,OAAjB,CAAyB,0BAAzB,CAAJ,EACE,MAAM,IAAI,KAAJ,CAAU,mGAAV,CAAN;AAEH,GAJD,EAIG,CAAC,eAAD,CAJH;AAMA,MAAE,CAAG,eAAL,EACE,OAAO,IAAP;AAGF,MAAI,QAAQ,GAAA,aAAA,YAAA,CAAA,aAAA,CAAI,yCAAJ,EAAwB,IAAxB,CAAZ;AACA,SAAM,aAAC,eAAQ,CAAC,YAAT,CAAsB,QAAtB,EAAgC,eAAhC,CAAP;AACD;;SAsBe,yC,CAAS,O,EAAuC;AAC9D;AACA,MAAI,OAAO,GAAG,iBAAU,CAAC,6BAAD,CAAxB;AACA,MAAE,CAAG,OAAL,EACE,MAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AAGF,EAAA,gBAAS,CAAA,MAAO;AACd,QAAE,CAAE,OAAO,KAAA,IAAP,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAX,KAAqB,CAAK,OAA1B,IAAiC,CAAK,OAAO,CAAC,MAAhD,EACE,OAFY,CAKd;AACA;;AACA,IAAA,OAAO,CAAC,MAAR,CAAe,QAAf;AACA,WAAM,MAAO;AACX,UAAI,OAAO,IAAI,OAAO,CAAC,MAAvB,EACE,OAAO,CAAC,MAAR,CAAe,WAAf;AAEH,KAJD;AAKD,GAbQ,EAaN,CAAC,OAAD,EAAU,OAAO,CAAC,MAAlB,EAA0B,OAAO,KAAA,IAAP,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAnC,CAbM,CAAT;AAeA,SAAO;AACL,IAAA,UAAU,EAAE;AACV,sBAAc,EAAG,OAAO,KAAA,IAAP,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAZ;AADJ;AADP,GAAP;AAKD;;;;AG9LD,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;;ACAA,yBAAc,GAAG;AAAG,aAAY;AAAf,CAAjB;AlCkCA,yBAAc,GAAG;AACf,WAAS,yBADM;AAEf,WAAS,yBAFM;AAGf,WAAS,yBAHM;AAIf,WAAS,yBAJM;AAKf,WAAS,yBALM;AAMf,WAAS,yBANM;AAOf,WAAS,yBAPM;AAQf,WAAS,yBARM;AASf,WAAS,yBATM;AAUf,WAAS,yBAVM;AAWf,WAAS,yBAXM;AAYf,WAAS,yBAZM;AAaf,WAAS,yBAbM;AAcf,WAAS,yBAdM;AAef,WAAS,yBAfM;AAgBf,WAAS,yBAhBM;AAiBf,WAAS,yBAjBM;AAkBf,WAAS,yBAlBM;AAmBf,WAAS,yBAnBM;AAoBf,WAAS,yBApBM;AAqBf,WAAS,yBArBM;AAsBf,WAAS,yBAtBM;AAuBf,WAAS,yBAvBM;AAwBf,WAAS,yBAxBM;AAyBf,WAAS,yBAzBM;AA0Bf,WAAS,yBA1BM;AA2Bf,WAAS,yBA3BM;AA4Bf,WAAS,yBA5BM;AA6Bf,WAAS,yBA7BM;AA8Bf,WAAS,yBA9BM;AA+Bf,WAAS,yBA/BM;AAgCf,WAAS,yBAhCM;AAiCf,WAAS,yBAjCM;AAkCf,WAAS;AAlCM,CAAjB;;SDJgB,yC,CAAc,K,EAA2B;AACvD,MAAI;AAAC,IAAA,SAAA,EAAA,SAAD;AAAU,OAAK;AAAf,MAA6B,KAAjC;AACA,MAAI,eAAe,GAAG,kCAA2B,EAAC,aAAA,sBAAA,CAAA,yBAAA,CAAD,CAAjD;AAEA,MAAI,MAAM,GAAG,gBAAS,CAAC,UAAD,EAAa,eAAe,CAAC,MAAhB,CAAuB,SAAvB,CAAb,CAAtB;;AAEA,MAAI,OAAO,GAAA,MAAS;AAClB,QAAI,SAAJ,EACE,SAAS;AAEZ,GAJD;;AAMA,SAAM,aAAA,YAAA,CAAA,aAAA,CACH,qBADG,EACW,IADX,EACW,aAAA,YAAA,CAAA,aAAA,CACZ,QADY,EACN,E,GACD,MADC;AAEL,IAAA,QAAQ,EAAE,CAAA,CAFL;AAGL,IAAA,OAAO,EAAE;AAHJ,GADM,CADX,CAAN;AAQD;AoClDD;;;;;;;;;;AAAA;AAYA;AACA;;;AACA,IAAI,iCAAW,GAAG,IAAI,OAAJ,EAAlB;;SAUgB,yC,CAAgB,O,EAAoB,IAAI,GAAG,QAAQ,CAAC,I,EAAM;AACxE,MAAI,YAAY,GAAG,IAAI,GAAJ,CAAiB,OAAjB,CAAnB;AACA,MAAI,WAAW,GAAG,IAAI,GAAJ,EAAlB;AACA,MAAI,MAAM,GAAG,QAAQ,CAAC,gBAAT,CACX,IADW,EAEX,UAAU,CAAC,YAFA,EAGX;AACE,IAAA,UAAU,CAAC,IAAD,EAAO;AACf;AACA,UAAE,CAAI,IAAI,YAAY,WAAhB,IAA+B,IAAI,YAAY,UAAnD,KAAkE,IAAI,CAAC,OAAL,CAAa,aAAb,KAA+B,MAAnG,EACE,YAAY,CAAC,GAAb,CAAiB,IAAjB,EAHa,CAMf;AACA;AACA;AACA;;AACA,UACE,YAAY,CAAC,GAAb,CAAiB,IAAjB,KACC,WAAW,CAAC,GAAZ,CAAgB,IAAI,CAAC,aAArB,KAAuC,IAAI,CAAC,aAAL,CAAmB,YAAnB,CAAgC,MAAhC,MAA4C,KAFtF,EAIE,OAAO,UAAU,CAAC,aAAlB,CAda,CAiBf;;AACA,UAAI,OAAO,CAAC,IAAR,CAAa,MAAD,IAAW,IAAI,CAAC,QAAL,CAAc,MAAd,CAAvB,CAAJ,EACE,OAAO,UAAU,CAAC,WAAlB;AAGF,aAAO,UAAU,CAAC,aAAlB;AACD;;AAxBH,GAHW,CAAb;;AA+BA,MAAI,IAAI,GAAI,IAAJ,IAAsB;QACb,G;AAAf,QAAI,QAAQ,GAAA,CAAG,GAAqB,GAArB,iCAAW,CAAC,GAAZ,CAAgB,IAAhB,CAAH,MAAuB,IAAvB,IAAG,GAAqB,KAAA,KAAA,CAAxB,GAAG,GAAH,GAA4B,CAAxC,CAD4B,CAG5B;AACA;;AACA,QAAI,IAAI,CAAC,YAAL,CAAkB,aAAlB,MAAqC,MAArC,IAA+C,QAAQ,KAAK,CAAhE,EACE;AAGF,QAAI,QAAQ,KAAK,CAAjB,EACE,IAAI,CAAC,YAAL,CAAkB,aAAlB,EAAiC,MAAjC;AAGF,IAAA,WAAW,CAAC,GAAZ,CAAgB,IAAhB;AACA,IAAA,iCAAW,CAAC,GAAZ,CAAgB,IAAhB,EAAsB,QAAQ,GAAG,CAAjC;AACD,GAfD;;AAiBA,MAAI,KAAI,GAAG,MAAM,CAAC,QAAP,EAAX;;SACO,KAAI,IAAI,I,EAAM;AACnB,IAAA,IAAI,CAAC,KAAD,CAAJ;AACA,IAAA,KAAI,GAAG,MAAM,CAAC,QAAP,EAAP;AACD;;AAED,MAAI,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,OAAD,IAAY;AAC7C,SAAK,IAAI,MAAT,IAAmB,OAAnB,EAA4B;AAC1B,UAAI,MAAM,CAAC,IAAP,KAAgB,WAAhB,IAA+B,MAAM,CAAC,UAAP,CAAkB,MAAlB,KAA6B,CAAhE,EACE,SAFwB,CAK1B;AACA;;AACA,UAAE,CAAG,C,GAAI,YAAJ,E,GAAqB,WAArB,EAAkC,IAAlC,CAAuC,IAAD,IAAS,IAAI,CAAC,QAAL,CAAc,MAAM,CAAC,MAArB,CAA/C,CAAL,EACE,KAAK,IAAI,KAAT,IAAiB,MAAM,CAAC,UAAxB,EAAoC;AAClC,YAAE,CAAI,KAAI,YAAY,WAAhB,IAA+B,KAAI,YAAY,UAAnD,KAAkE,KAAI,CAAC,OAAL,CAAa,aAAb,KAA+B,MAAnG,EACE,YAAY,CAAC,GAAb,CAAiB,KAAjB,EADF,KAEO,IAAI,KAAI,YAAY,OAApB,EACL,IAAI,CAAC,KAAD,CAAJ;AAEH;AAEJ;AACF,GAlBc,CAAf;AAoBA,EAAA,QAAQ,CAAC,OAAT,CAAiB,IAAjB,EAAuB;AAAC,IAAA,SAAS,EAAE,IAAZ;AAAkB,IAAA,OAAO,EAAE;AAA3B,GAAvB;AAEA,SAAM,MAAO;AACX,IAAA,QAAQ,CAAC,UAAT;;AAEA,SAAK,IAAI,IAAT,IAAiB,WAAjB,EAA8B;AAC5B,UAAI,KAAK,GAAG,iCAAW,CAAC,GAAZ,CAAgB,IAAhB,CAAZ;;AACA,UAAI,KAAK,KAAK,CAAd,EAAiB;AACf,QAAA,IAAI,CAAC,eAAL,CAAqB,aAArB;AACA,QAAA,iCAAW,CAAC,MAAZ,CAAmB,IAAnB;AACD,OAHD,MAIE,iCAAW,CAAC,GAAZ,CAAgB,IAAhB,EAAsB,KAAK,GAAG,CAA9B;AAEH;AACF,GAZD;AAaD;;SChEe,yC,CAAW,K,EAAyB,K,EAAyC;AAC3F,MAAI;AAAC,IAAA,UAAA,EACH,UADE;AACQ,IAAA,UAAA,EACV,UAFE;AAEQ,IAAA,UAAA,EACV,UAHE;AAGQ,OACP;AAJD,MAKA,KALJ;AAOA,MAAI;AAAC,IAAA,YAAA,EAAA;AAAD,MAAiB,yCAAU,CAC7B;AACE,IAAA,MAAM,EAAE,KAAK,CAAC,MADhB;AAEE,IAAA,OAAO,EAAE,KAAK,CAAC,KAFjB;AAGE,IAAA,iBAAiB,EAAE,IAHrB;AAIE,IAAA,aAAa,EAAE;AAJjB,GAD6B,EAO7B,UAP6B,CAA/B;AAUA,MAAI;AAAC,IAAA,YAAY,EAAE,aAAf;AAA4B,IAAA,UAAA,EAAE;AAA9B,MAA4C,yCAAkB,CAAC,E,GAC9D,UAD8D;AAEjE,IAAA,SAAS,EAAE,UAFsD;AAGjE,IAAA,UAAU,EAAE,UAHqD;AAIjE,IAAA,MAAM,EAAE,KAAK,CAAC;AAJmD,GAAD,CAAlE;AAOA,EAAA,gBAAS,CAAA,MAAO;AACd,QAAI,KAAK,CAAC,MAAN,IAAY,CAAK,UAArB,EACE,OAAO,yCAAe,CAAC,CAAC,UAAU,CAAC,OAAZ,CAAD,CAAtB;AAEH,GAJQ,EAIN,CAAC,UAAD,EAAa,KAAK,CAAC,MAAnB,EAA2B,UAA3B,CAJM,CAAT;AAMA,SAAO;AACL,IAAA,YAAY,EAAE,iBAAU,CAAC,YAAD,EAAe,aAAf,CADnB;gBAEL;AAFK,GAAP;AAID;;AE3DD,MAAM,oCAAc,GAAA,aAAG,YAAK,CAAC,aAAN,CAAoB,IAApB,CAAvB;;SAMgB,yC,CAAQ,K,EAAqB;AAC3C,MAAI,KAAK,GAAG,eAAQ,EAApB;AACA,MAAI;AAAC,IAAA,eAAe,GAAG,KAAK,GAAG,IAAH,GAAU,QAAQ,CAAC;AAA3C,MAAmD,KAAvD;AACA,MAAG,CAAE,OAAF,EAAW,UAAX,IAAyB,eAAQ,CAAC,KAAD,CAApC;AAEA,MAAE,CAAG,eAAL,EACE,OAAO,IAAP;AAGF,MAAI,QAAQ,GAAA,aAAA,YAAA,CAAA,aAAA,CACT,oCAAc,CAAC,QADN,EACc;AAAC,IAAA,KAAK,EAAE;AAAR,GADd,E,wCAEP,iB,EAAU;AAAC,IAAA,YAAY,EAAZ,IAAD;AAAc,IAAA,OAAO,EAAE;AAAvB,G,EACR,KAAK,CAAC,Q,CAHD,CAAZ;AAQA,SAAM,aAAC,eAAQ,CAAC,YAAT,CAAsB,QAAtB,EAAgC,eAAhC,CAAP;AACD;;SAGe,yC,GAAyB;AACvC,MAAI,UAAU,GAAG,iBAAU,CAAC,oCAAD,CAA3B;AACA,EAAA,sBAAe,CAAA,MAAO;AACpB,IAAA,UAAU,KAAA,IAAV,IAAA,UAAU,KAAV,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,UAAU,CAAG,IAAH,CAAV;AACD,GAFc,EAEZ,CAAC,UAAD,CAFY,CAAf;AAGD;;SDfe,yC,CAAgB,K,EAA8B,K,EAA4B,G,EAA+C;AACvI,MAAI;AAAC,IAAA,YAAA,EAAA,YAAD;AAAa,IAAA,aAAA,EAAE;AAAf,MAAgC,yCAAU,CAAC,E,GAC1C,KAD0C;AAE7C,IAAA,MAAM,EAAE,KAAK,CAAC,MAF+B;AAG7C,IAAA,OAAO,EAAE,KAAK,CAAC;AAH8B,GAAD,EAI3C,GAJ2C,CAA9C;AAMA,EAAA,yCAAgB,CAAC;AACf,IAAA,UAAU,EAAA,CAAG,KAAK,CAAC;AADJ,GAAD,CAAhB;AAIA,EAAA,yCAAsB;AAEtB,EAAA,gBAAS,CAAA,MAAO;AACd,QAAI,KAAK,CAAC,MAAV,EACE,OAAO,yCAAe,CAAC,CAAC,GAAG,CAAC,OAAL,CAAD,CAAtB;AAEH,GAJQ,EAIN,CAAC,KAAK,CAAC,MAAP,EAAe,GAAf,CAJM,CAAT;AAMA,SAAO;AACL,IAAA,UAAU,EAAE,iBAAU,CAAC,YAAD,CADjB;mBAEL;AAFK,GAAP;AAID","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {calculatePosition, PositionResult} from './calculatePosition';\nimport {DOMAttributes} from '@react-types/shared';\nimport {Placement, PlacementAxis, PositionProps} from '@react-types/overlays';\nimport {RefObject, useCallback, useRef, useState} from 'react';\nimport {useCloseOnScroll} from './useCloseOnScroll';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\n\nexport interface AriaPositionProps extends PositionProps {\n  /**\n   * Element that that serves as the positioning boundary.\n   * @default document.body\n   */\n  boundaryElement?: Element,\n  /**\n   * The ref for the element which the overlay positions itself with respect to.\n   */\n  targetRef: RefObject<Element>,\n  /**\n   * The ref for the overlay element.\n   */\n  overlayRef: RefObject<Element>,\n  /**\n   * A ref for the scrollable region within the overlay.\n   * @default overlayRef\n   */\n  scrollRef?: RefObject<Element>,\n  /**\n   * Whether the overlay should update its position automatically.\n   * @default true\n   */\n  shouldUpdatePosition?: boolean,\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void,\n  /**\n   * The maxHeight specified for the overlay element.\n   * By default, it will take all space up to the current viewport height.\n   */\n  maxHeight?: number\n}\n\nexport interface PositionAria {\n  /** Props for the overlay container element. */\n  overlayProps: DOMAttributes,\n  /** Props for the overlay tip arrow if any. */\n  arrowProps: DOMAttributes,\n  /** Placement of the overlay with respect to the overlay trigger. */\n  placement: PlacementAxis,\n  /** Updates the position of the overlay. */\n  updatePosition(): void\n}\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\n/**\n * Handles positioning overlays like popovers and menus relative to a trigger\n * element, and updating the position when the window resizes.\n */\nexport function useOverlayPosition(props: AriaPositionProps): PositionAria {\n  let {direction} = useLocale();\n  let {\n    targetRef,\n    overlayRef,\n    scrollRef = overlayRef,\n    placement = 'bottom' as Placement,\n    containerPadding = 12,\n    shouldFlip = true,\n    boundaryElement = typeof document !== 'undefined' ? document.body : null,\n    offset = 0,\n    crossOffset = 0,\n    shouldUpdatePosition = true,\n    isOpen = true,\n    onClose,\n    maxHeight\n  } = props;\n  let [position, setPosition] = useState<PositionResult>({\n    position: {},\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined,\n    maxHeight: undefined,\n    placement: undefined\n  });\n\n  let deps = [\n    shouldUpdatePosition,\n    placement,\n    overlayRef.current,\n    targetRef.current,\n    scrollRef.current,\n    containerPadding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    isOpen,\n    direction,\n    maxHeight\n  ];\n\n  let updatePosition = useCallback(() => {\n    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) {\n      return;\n    }\n\n    setPosition(\n      calculatePosition({\n        placement: translateRTL(placement, direction),\n        overlayNode: overlayRef.current,\n        targetNode: targetRef.current,\n        scrollNode: scrollRef.current,\n        padding: containerPadding,\n        shouldFlip,\n        boundaryElement,\n        offset,\n        crossOffset,\n        maxHeight\n      })\n    );\n  }, deps);\n\n  // Update position when anything changes\n  useLayoutEffect(updatePosition, deps);\n\n  // Update position on window resize\n  useResize(updatePosition);\n\n  // Reposition the overlay and do not close on scroll while the visual viewport is resizing.\n  // This will ensure that overlays adjust their positioning when the iOS virtual keyboard appears.\n  let isResizing = useRef(false);\n  useLayoutEffect(() => {\n    let timeout: ReturnType<typeof setTimeout>;\n    let onResize = () => {\n      isResizing.current = true;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        isResizing.current = false;\n      }, 500);\n\n      updatePosition();\n    };\n\n    visualViewport?.addEventListener('resize', onResize);\n\n    return () => {\n      visualViewport?.removeEventListener('resize', onResize);\n    };\n  }, [updatePosition]);\n\n  let close = useCallback(() => {\n    if (!isResizing.current) {\n      onClose();\n    }\n  }, [onClose, isResizing]);\n\n  // When scrolling a parent scrollable region of the trigger (other than the body),\n  // we hide the popover. Otherwise, its position would be incorrect.\n  useCloseOnScroll({\n    triggerRef: targetRef,\n    isOpen,\n    onClose: onClose ? close : undefined\n  });\n\n  return {\n    overlayProps: {\n      style: {\n        position: 'absolute',\n        zIndex: 100000, // should match the z-index in ModalTrigger\n        ...position.position,\n        maxHeight: position.maxHeight\n      }\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop\n      }\n    },\n    updatePosition\n  };\n}\n\nfunction useResize(onResize) {\n  useLayoutEffect(() => {\n    window.addEventListener('resize', onResize, false);\n    return () => {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\n\nfunction translateRTL(position, direction) {\n  if (direction === 'rtl') {\n    return position.replace('start', 'right').replace('end', 'left');\n  }\n  return position.replace('start', 'left').replace('end', 'right');\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Axis, Placement, PlacementAxis, SizeAxis} from '@react-types/overlays';\n\ninterface Position {\n  top?: number,\n  left?: number,\n  bottom?: number,\n  right?: number\n}\n\ninterface Dimensions {\n  width: number,\n  height: number,\n  top: number,\n  left: number,\n  scroll: Position\n}\n\ninterface ParsedPlacement {\n  placement: PlacementAxis,\n  crossPlacement: PlacementAxis,\n  axis: Axis,\n  crossAxis: Axis,\n  size: SizeAxis,\n  crossSize: SizeAxis\n}\n\ninterface Offset {\n  top: number,\n  left: number,\n  width: number,\n  height: number\n}\n\ninterface PositionOpts {\n  placement: Placement,\n  targetNode: Element,\n  overlayNode: Element,\n  scrollNode: Element,\n  padding: number,\n  shouldFlip: boolean,\n  boundaryElement: Element,\n  offset: number,\n  crossOffset: number,\n  maxHeight?: number\n}\n\nexport interface PositionResult {\n  position?: Position,\n  arrowOffsetLeft?: number,\n  arrowOffsetTop?: number,\n  maxHeight?: number,\n  placement: PlacementAxis\n}\n\nconst AXIS = {\n  top: 'top',\n  bottom: 'top',\n  left: 'left',\n  right: 'left'\n};\n\nconst FLIPPED_DIRECTION = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\n\nconst CROSS_AXIS = {\n  top: 'left',\n  left: 'top'\n};\n\nconst AXIS_SIZE = {\n  top: 'height',\n  left: 'width'\n};\n\nconst PARSED_PLACEMENT_CACHE = {};\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nfunction getContainerDimensions(containerNode: Element): Dimensions {\n  let width = 0, height = 0, top = 0, left = 0;\n  let scroll: Position = {};\n\n  if (containerNode.tagName === 'BODY') {\n    let documentElement = document.documentElement;\n    width = visualViewport?.width ?? documentElement.clientWidth;\n    height = visualViewport?.height ?? documentElement.clientHeight;\n\n    scroll.top = documentElement.scrollTop || containerNode.scrollTop;\n    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;\n  } else {\n    ({width, height, top, left} = getOffset(containerNode));\n    scroll.top = containerNode.scrollTop;\n    scroll.left = containerNode.scrollLeft;\n  }\n\n  return {width, height, scroll, top, left};\n}\n\nfunction getScroll(node: Element): Offset {\n  return {\n    top: node.scrollTop,\n    left: node.scrollLeft,\n    width: node.scrollWidth,\n    height: node.scrollHeight\n  };\n}\n\nfunction getDelta(\n  axis: Axis,\n  offset: number,\n  size: number,\n  containerDimensions: Dimensions,\n  padding: number\n) {\n  let containerScroll = containerDimensions.scroll[axis];\n  let containerHeight = containerDimensions[AXIS_SIZE[axis]];\n\n  let startEdgeOffset = offset - padding - containerScroll;\n  let endEdgeOffset = offset + padding - containerScroll + size;\n\n  if (startEdgeOffset < 0) {\n    return -startEdgeOffset;\n  } else if (endEdgeOffset > containerHeight) {\n    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);\n  } else {\n    return 0;\n  }\n}\n\nfunction getMargins(node: Element): Position {\n  let style = window.getComputedStyle(node);\n  return {\n    top: parseInt(style.marginTop, 10) || 0,\n    bottom: parseInt(style.marginBottom, 10) || 0,\n    left: parseInt(style.marginLeft, 10) || 0,\n    right: parseInt(style.marginRight, 10) || 0\n  };\n}\n\nfunction parsePlacement(input: Placement): ParsedPlacement {\n  if (PARSED_PLACEMENT_CACHE[input]) {\n    return PARSED_PLACEMENT_CACHE[input];\n  }\n\n  let [placement, crossPlacement] = input.split(' ');\n  let axis: Axis = AXIS[placement] || 'right';\n  let crossAxis: Axis = CROSS_AXIS[axis];\n\n  if (!AXIS[crossPlacement]) {\n    crossPlacement = 'center';\n  }\n\n  let size = AXIS_SIZE[axis];\n  let crossSize = AXIS_SIZE[crossAxis];\n  PARSED_PLACEMENT_CACHE[input] = {placement, crossPlacement, axis, crossAxis, size, crossSize};\n  return PARSED_PLACEMENT_CACHE[input];\n}\n\nfunction computePosition(\n  childOffset: Offset,\n  boundaryDimensions: Dimensions,\n  overlaySize: Offset,\n  placementInfo: ParsedPlacement,\n  offset: number,\n  crossOffset: number,\n  containerOffsetWithBoundary: Offset,\n  isContainerPositioned: boolean\n) {\n  let {placement, crossPlacement, axis, crossAxis, size, crossSize} = placementInfo;\n  let position: Position = {};\n\n  // button position\n  position[crossAxis] = childOffset[crossAxis];\n  if (crossPlacement === 'center') {\n    //  + (button size / 2) - (overlay size / 2)\n    // at this point the overlay center should match the button center\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;\n  } else if (crossPlacement !== crossAxis) {\n    //  + (button size) - (overlay size)\n    // at this point the overlay bottom should match the button bottom\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]);\n  }/* else {\n    the overlay top should match the button top\n  } */\n  // add the crossOffset from props\n  position[crossAxis] += crossOffset;\n\n  // this is button center position - the overlay size + half of the button to align bottom of overlay with button center\n  let minViablePosition = childOffset[crossAxis] + (childOffset[crossSize] / 2) - overlaySize[crossSize];\n  // this is button position of center, aligns top of overlay with button center\n  let maxViablePosition = childOffset[crossAxis] + (childOffset[crossSize] / 2);\n\n  // clamp it into the range of the min/max positions\n  position[crossAxis] = Math.min(Math.max(minViablePosition, position[crossAxis]), maxViablePosition);\n\n  // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n  if (placement === axis) {\n    // If the container is positioned (non-static), then we use the container's actual\n    // height, as `bottom` will be relative to this height.  But if the container is static,\n    // then it can only be the `document.body`, and `bottom` will be relative to _its_\n    // container, which should be as large as boundaryDimensions.\n    const containerHeight = (isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size]);\n    position[FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);\n  } else {\n    position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n  }\n\n  return position;\n}\n\nfunction getMaxHeight(\n  position: Position,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number\n) {\n  return position.top != null\n    // We want the distance between the top of the overlay to the bottom of the boundary\n    ? Math.max(0,\n      (boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top) // this is the bottom of the boundary\n      - (containerOffsetWithBoundary.top + position.top) // this is the top of the overlay\n      - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n    )\n    // We want the distance between the top of the trigger to the top of the boundary\n    : Math.max(0,\n      (childOffset.top + containerOffsetWithBoundary.top) // this is the top of the trigger\n      - (boundaryDimensions.top + boundaryDimensions.scroll.top) // this is the top of the boundary\n      - (margins.top + margins.bottom + padding) // save additional space for margin and padding\n    );\n}\n\nfunction getAvailableSpace(\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number,\n  placementInfo: ParsedPlacement\n) {\n  let {placement, axis, size} = placementInfo;\n  if (placement === axis) {\n    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n  }\n\n  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n}\n\nexport function calculatePositionInternal(\n  placementInput: Placement,\n  childOffset: Offset,\n  overlaySize: Offset,\n  scrollSize: Offset,\n  margins: Position,\n  padding: number,\n  flip: boolean,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  offset: number,\n  crossOffset: number,\n  isContainerPositioned: boolean,\n  userSetMaxHeight?: number\n): PositionResult {\n  let placementInfo = parsePlacement(placementInput);\n  let {size, crossAxis, crossSize, placement, crossPlacement} = placementInfo;\n  let position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  let normalizedOffset = offset;\n  let space = getAvailableSpace(\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding + offset,\n    placementInfo\n  );\n\n  // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n  if (flip && scrollSize[size] > space) {\n    let flippedPlacementInfo = parsePlacement(`${FLIPPED_DIRECTION[placement]} ${crossPlacement}` as Placement);\n    let flippedPosition = computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    let flippedSpace = getAvailableSpace(\n      boundaryDimensions,\n      containerOffsetWithBoundary,\n      childOffset,\n      margins,\n      padding + offset,\n      flippedPlacementInfo\n    );\n\n    // If the available space for the flipped position is greater than the original available space, flip.\n    if (flippedSpace > space) {\n      placementInfo = flippedPlacementInfo;\n      position = flippedPosition;\n      normalizedOffset = offset;\n    }\n  }\n\n  let delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let maxHeight = getMaxHeight(\n    position,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding\n  );\n\n  if (userSetMaxHeight && userSetMaxHeight < maxHeight) {\n    maxHeight = userSetMaxHeight;\n  }\n\n  overlaySize.height = Math.min(overlaySize.height, maxHeight);\n\n  position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n  delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let arrowPosition: Position = {};\n  arrowPosition[crossAxis] = (childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2);\n\n  return {\n    position,\n    maxHeight: maxHeight,\n    arrowOffsetLeft: arrowPosition.left,\n    arrowOffsetTop: arrowPosition.top,\n    placement: placementInfo.placement\n  };\n}\n\n/**\n * Determines where to place the overlay with regards to the target and the position of an optional indicator.\n */\nexport function calculatePosition(opts: PositionOpts): PositionResult {\n  let {\n    placement,\n    targetNode,\n    overlayNode,\n    scrollNode,\n    padding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    maxHeight\n  } = opts;\n\n  let container = ((overlayNode instanceof HTMLElement && overlayNode.offsetParent) || document.body) as Element;\n  let isBodyContainer = container.tagName === 'BODY';\n  const containerPositionStyle = window.getComputedStyle(container).position;\n  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';\n  let childOffset: Offset = isBodyContainer ? getOffset(targetNode) : getPosition(targetNode, container);\n\n  if (!isBodyContainer) {\n    let {marginTop, marginLeft} = window.getComputedStyle(targetNode);\n    childOffset.top += parseInt(marginTop, 10) || 0;\n    childOffset.left += parseInt(marginLeft, 10) || 0;\n  }\n\n  let overlaySize: Offset = getOffset(overlayNode);\n  let margins = getMargins(overlayNode);\n  overlaySize.width += margins.left + margins.right;\n  overlaySize.height += margins.top + margins.bottom;\n\n  let scrollSize = getScroll(scrollNode);\n  let boundaryDimensions = getContainerDimensions(boundaryElement);\n  let containerOffsetWithBoundary: Offset = boundaryElement.tagName === 'BODY' ? getOffset(container) : getPosition(container, boundaryElement);\n\n  return calculatePositionInternal(\n    placement,\n    childOffset,\n    overlaySize,\n    scrollSize,\n    margins,\n    padding,\n    shouldFlip,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    offset,\n    crossOffset,\n    isContainerPositioned,\n    maxHeight\n  );\n}\n\nfunction getOffset(node: Element): Offset {\n  let {top, left, width, height} = node.getBoundingClientRect();\n  let {scrollTop, scrollLeft, clientTop, clientLeft} = document.documentElement;\n  return {\n    top: top + scrollTop - clientTop,\n    left: left + scrollLeft - clientLeft,\n    width,\n    height\n  };\n}\n\nfunction getPosition(node: Element, parent: Element): Offset {\n  let style = window.getComputedStyle(node);\n  let offset: Offset;\n  if (style.position === 'fixed') {\n    let {top, left, width, height} = node.getBoundingClientRect();\n    offset = {top, left, width, height};\n  } else {\n    offset = getOffset(node);\n    let parentOffset = getOffset(parent);\n    let parentStyle = window.getComputedStyle(parent);\n    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;\n    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;\n    offset.top -= parentOffset.top;\n    offset.left -= parentOffset.left;\n  }\n\n  offset.top -= parseInt(style.marginTop, 10) || 0;\n  offset.left -= parseInt(style.marginLeft, 10) || 0;\n  return offset;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useEffect} from 'react';\n\n// This behavior moved from useOverlayTrigger to useOverlayPosition.\n// For backward compatibility, where useOverlayTrigger handled hiding the popover on close,\n// it sets a close function here mapped from the trigger element. This way we can avoid\n// forcing users to pass an onClose function to useOverlayPosition which could be considered\n// a breaking change.\nexport const onCloseMap: WeakMap<Element, () => void> = new WeakMap();\n\ninterface CloseOnScrollOptions {\n  triggerRef: RefObject<Element>,\n  isOpen?: boolean,\n  onClose?: () => void\n}\n\n/** @private */\nexport function useCloseOnScroll(opts: CloseOnScrollOptions) {\n  let {triggerRef, isOpen, onClose} = opts;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    let onScroll = (e: MouseEvent) => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target;\n      // window is not a Node and doesn't have contain, but window contains everything\n      if (!triggerRef.current || ((target instanceof Node) && !target.contains(triggerRef.current))) {\n        return;\n      }\n\n      let onCloseHandler = onClose || onCloseMap.get(triggerRef.current);\n      if (onCloseHandler) {\n        onCloseHandler();\n      }\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {RefObject, SyntheticEvent, useEffect} from 'react';\nimport {useFocusWithin, useInteractOutside} from '@react-aria/interactions';\n\nexport interface AriaOverlayProps {\n  /** Whether the overlay is currently open. */\n  isOpen?: boolean,\n\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void,\n\n  /**\n   * Whether to close the overlay when the user interacts outside it.\n   * @default false\n   */\n  isDismissable?: boolean,\n\n  /** Whether the overlay should close when focus is lost or moves outside it. */\n  shouldCloseOnBlur?: boolean,\n\n  /**\n   * Whether pressing the escape key to close the overlay should be disabled.\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean,\n\n  /**\n   * When user interacts with the argument element outside of the overlay ref,\n   * return true if onClose should be called.  This gives you a chance to filter\n   * out interaction with elements that should not dismiss the overlay.\n   * By default, onClose will always be called on interaction outside the overlay ref.\n   */\n  shouldCloseOnInteractOutside?: (element: Element) => boolean\n}\n\nexport interface OverlayAria {\n  /** Props to apply to the overlay container element. */\n  overlayProps: DOMAttributes,\n  /** Props to apply to the underlay element, if any. */\n  underlayProps: DOMAttributes\n}\n\nconst visibleOverlays: RefObject<Element>[] = [];\n\n/**\n * Provides the behavior for overlays such as dialogs, popovers, and menus.\n * Hides the overlay when the user interacts outside it, when the Escape key is pressed,\n * or optionally, on blur. Only the top-most overlay will close at once.\n */\nexport function useOverlay(props: AriaOverlayProps, ref: RefObject<Element>): OverlayAria {\n  let {\n    onClose,\n    shouldCloseOnBlur,\n    isOpen,\n    isDismissable = false,\n    isKeyboardDismissDisabled = false,\n    shouldCloseOnInteractOutside\n  } = props;\n\n  // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n  useEffect(() => {\n    if (isOpen) {\n      visibleOverlays.push(ref);\n    }\n\n    return () => {\n      let index = visibleOverlays.indexOf(ref);\n      if (index >= 0) {\n        visibleOverlays.splice(index, 1);\n      }\n    };\n  }, [isOpen, ref]);\n\n  // Only hide the overlay when it is the topmost visible overlay in the stack.\n  let onHide = () => {\n    if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {\n      onClose();\n    }\n  };\n\n  let onInteractOutsideStart = (e: SyntheticEvent<Element>) => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  };\n\n  let onInteractOutside = (e: SyntheticEvent<Element>) => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      onHide();\n    }\n  };\n\n  // Handle the escape key\n  let onKeyDown = (e) => {\n    if (e.key === 'Escape' && !isKeyboardDismissDisabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      onHide();\n    }\n  };\n\n  // Handle clicking outside the overlay to close it\n  useInteractOutside({ref, onInteractOutside: isDismissable ? onInteractOutside : null, onInteractOutsideStart});\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !shouldCloseOnBlur,\n    onBlurWithin: (e) => {\n      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget as Element)) {\n        onClose();\n      }\n    }\n  });\n\n  let onPointerDownUnderlay = e => {\n    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846\n    if (e.target === e.currentTarget) {\n      e.preventDefault();\n    }\n  };\n\n  return {\n    overlayProps: {\n      onKeyDown,\n      ...focusWithinProps\n    },\n    underlayProps: {\n      onPointerDown: onPointerDownUnderlay\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {DOMAttributes} from '@react-types/shared';\nimport {onCloseMap} from './useCloseOnScroll';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {RefObject, useEffect} from 'react';\nimport {useId} from '@react-aria/utils';\n\nexport interface OverlayTriggerProps {\n  /** Type of overlay that is opened by the trigger. */\n  type: 'dialog' | 'menu' | 'listbox' | 'tree' | 'grid'\n}\n\nexport interface OverlayTriggerAria {\n  /** Props for the trigger element. */\n  triggerProps: AriaButtonProps,\n\n  /** Props for the overlay container element. */\n  overlayProps: DOMAttributes\n}\n\n/**\n * Handles the behavior and accessibility for an overlay trigger, e.g. a button\n * that opens a popover, menu, or other overlay that is positioned relative to the trigger.\n */\nexport function useOverlayTrigger(props: OverlayTriggerProps, state: OverlayTriggerState, ref: RefObject<Element>): OverlayTriggerAria {\n  let {type} = props;\n  let {isOpen} = state;\n\n  // Backward compatibility. Share state close function with useOverlayPosition so it can close on scroll\n  // without forcing users to pass onClose.\n  useEffect(() => {\n    if (ref && ref.current) {\n      onCloseMap.set(ref.current, state.close);\n    }\n  });\n\n  // Aria 1.1 supports multiple values for aria-haspopup other than just menus.\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup\n  // However, we only add it for menus for now because screen readers often\n  // announce it as a menu even for other values.\n  let ariaHasPopup = undefined;\n  if (type === 'menu') {\n    ariaHasPopup = true;\n  } else if (type === 'listbox') {\n    ariaHasPopup = 'listbox';\n  }\n\n  let overlayId = useId();\n  return {\n    triggerProps: {\n      'aria-haspopup': ariaHasPopup,\n      'aria-expanded': isOpen,\n      'aria-controls': isOpen ? overlayId : null,\n      onPress: state.toggle\n    },\n    overlayProps: {\n      id: overlayId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain, getScrollParent, isIOS, useLayoutEffect} from '@react-aria/utils';\n\ninterface PreventScrollOptions {\n  /** Whether the scroll lock is disabled. */\n  isDisabled?: boolean\n}\n\n// @ts-ignore\nconst visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\n// HTML input types that do not cause the software keyboard to appear.\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\n/**\n * Prevents scrolling on the document body on mount, and\n * restores it on unmount. Also ensures that content does not\n * shift due to the scrollbars disappearing.\n */\nexport function usePreventScroll(options: PreventScrollOptions = {}) {\n  let {isDisabled} = options;\n\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (isIOS()) {\n      return preventScrollMobileSafari();\n    } else {\n      return preventScrollStandard();\n    }\n  }, [isDisabled]);\n}\n\n// For most browsers, all we need to do is set `overflow: hidden` on the root element, and\n// add some padding to prevent the page from shifting when the scrollbar is hidden.\nfunction preventScrollStandard() {\n  return chain(\n    setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`),\n    setStyle(document.documentElement, 'overflow', 'hidden')\n  );\n}\n\n// Mobile Safari is a whole different beast. Even with overflow: hidden,\n// it still scrolls the page in many situations:\n//\n// 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n// 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n//    it, so it becomes scrollable.\n// 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n//    This may cause even fixed position elements to scroll off the screen.\n// 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n//    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n//\n// In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n//\n// 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n//    on the window.\n// 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n//    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n// 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n// 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n//    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n//    into view ourselves, without scrolling the whole page.\n// 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n//    same visually, but makes the actual scroll position always zero. This is required to make all of the\n//    above work or Safari will still try to scroll the page when focusing an input.\n// 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n//    to navigate to an input with the next/previous buttons that's outside a modal.\nfunction preventScrollMobileSafari() {\n  let scrollable: Element;\n  let lastY = 0;\n  let onTouchStart = (e: TouchEvent) => {\n    // Store the nearest scrollable parent element from the element that the user touched.\n    scrollable = getScrollParent(e.target as Element);\n    if (scrollable === document.documentElement && scrollable === document.body) {\n      return;\n    }\n\n    lastY = e.changedTouches[0].pageY;\n  };\n\n  let onTouchMove = (e: TouchEvent) => {\n    // Prevent scrolling the window.\n    if (scrollable === document.documentElement || scrollable === document.body) {\n      e.preventDefault();\n      return;\n    }\n\n    // Prevent scrolling up when at the top and scrolling down when at the bottom\n    // of a nested scrollable area, otherwise mobile Safari will start scrolling\n    // the window instead. Unfortunately, this disables bounce scrolling when at\n    // the top but it's the best we can do.\n    let y = e.changedTouches[0].pageY;\n    let scrollTop = scrollable.scrollTop;\n    let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n\n    if ((scrollTop <= 0 && y > lastY) || (scrollTop >= bottom && y < lastY)) {\n      e.preventDefault();\n    }\n\n    lastY = y;\n  };\n\n  let onTouchEnd = (e: TouchEvent) => {\n    let target = e.target as HTMLElement;\n\n    // Apply this change if we're not already focused on the target element\n    if (willOpenKeyboard(target) && target !== document.activeElement) {\n      e.preventDefault();\n\n      // Apply a transform to trick Safari into thinking the input is at the top of the page\n      // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n      // be done before the \"focus\" event, so we have to focus the element ourselves.\n      target.style.transform = 'translateY(-2000px)';\n      target.focus();\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n      });\n    }\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    let target = e.target as HTMLElement;\n    if (willOpenKeyboard(target)) {\n      // Transform also needs to be applied in the focus event in cases where focus moves\n      // other than tapping on an input directly, e.g. the next/previous buttons in the\n      // software keyboard. In these cases, it seems applying the transform in the focus event\n      // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n      target.style.transform = 'translateY(-2000px)';\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n\n        // This will have prevented the browser from scrolling the focused element into view,\n        // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n        if (visualViewport) {\n          if (visualViewport.height < window.innerHeight) {\n            // If the keyboard is already visible, do this after one additional frame\n            // to wait for the transform to be removed.\n            requestAnimationFrame(() => {\n              scrollIntoView(target);\n            });\n          } else {\n            // Otherwise, wait for the visual viewport to resize before scrolling so we can\n            // measure the correct position to scroll to.\n            visualViewport.addEventListener('resize', () => scrollIntoView(target), {once: true});\n          }\n        }\n      });\n    }\n  };\n\n  let onWindowScroll = () => {\n    // Last resort. If the window scrolled, scroll it back to the top.\n    // It should always be at the top because the body will have a negative margin (see below).\n    window.scrollTo(0, 0);\n  };\n\n  // Record the original scroll position so we can restore it.\n  // Then apply a negative margin to the body to offset it by the scroll position. This will\n  // enable us to scroll the window to the top, which is required for the rest of this to work.\n  let scrollX = window.pageXOffset;\n  let scrollY = window.pageYOffset;\n  let restoreStyles = chain(\n    setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`),\n    setStyle(document.documentElement, 'overflow', 'hidden'),\n    setStyle(document.body, 'marginTop', `-${scrollY}px`)\n  );\n\n  // Scroll to the top. The negative margin on the body will make this appear the same.\n  window.scrollTo(0, 0);\n\n  let removeEvents = chain(\n    addEvent(document, 'touchstart', onTouchStart, {passive: false, capture: true}),\n    addEvent(document, 'touchmove', onTouchMove, {passive: false, capture: true}),\n    addEvent(document, 'touchend', onTouchEnd, {passive: false, capture: true}),\n    addEvent(document, 'focus', onFocus, true),\n    addEvent(window, 'scroll', onWindowScroll)\n  );\n\n  return () => {\n    // Restore styles and scroll the page back to where it was.\n    restoreStyles();\n    removeEvents();\n    window.scrollTo(scrollX, scrollY);\n  };\n}\n\n// Sets a CSS property on an element, and returns a function to revert it to the previous value.\nfunction setStyle(element: HTMLElement, style: string, value: string) {\n  let cur = element.style[style];\n  element.style[style] = value;\n  return () => {\n    element.style[style] = cur;\n  };\n}\n\n// Adds an event listener to an element, and returns a function to remove it.\nfunction addEvent<K extends keyof GlobalEventHandlersEventMap>(\n  target: EventTarget,\n  event: K,\n  handler: (this: Document, ev: GlobalEventHandlersEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  target.addEventListener(event, handler, options);\n  return () => {\n    target.removeEventListener(event, handler, options);\n  };\n}\n\nfunction scrollIntoView(target: Element) {\n  let root = document.scrollingElement || document.documentElement;\n  while (target && target !== root) {\n    // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n    let scrollable = getScrollParent(target);\n    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n      let scrollableTop = scrollable.getBoundingClientRect().top;\n      let targetTop = target.getBoundingClientRect().top;\n      if (targetTop > scrollableTop + target.clientHeight) {\n        scrollable.scrollTop += targetTop - scrollableTop;\n      }\n    }\n\n    target = scrollable.parentElement;\n  }\n}\n\nfunction willOpenKeyboard(target: Element) {\n  return (\n    (target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type)) ||\n    target instanceof HTMLTextAreaElement ||\n    (target instanceof HTMLElement && target.isContentEditable)\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport React, {AriaAttributes, ReactNode, useContext, useEffect, useMemo, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface ModalProviderProps extends DOMAttributes {\n  children: ReactNode\n}\n\ninterface ModalContext {\n  parent: ModalContext | null,\n  modalCount: number,\n  addModal: () => void,\n  removeModal: () => void\n}\n\nconst Context = React.createContext<ModalContext | null>(null);\n\n/**\n * Each ModalProvider tracks how many modals are open in its subtree. On mount, the modals\n * trigger `addModal` to increment the count, and trigger `removeModal` on unmount to decrement it.\n * This is done recursively so that all parent providers are incremented and decremented.\n * If the modal count is greater than zero, we add `aria-hidden` to this provider to hide its\n * subtree from screen readers. This is done using React context in order to account for things\n * like portals, which can cause the React tree and the DOM tree to differ significantly in structure.\n */\nexport function ModalProvider(props: ModalProviderProps) {\n  let {children} = props;\n  let parent = useContext(Context);\n  let [modalCount, setModalCount] = useState(0);\n  let context = useMemo(() => ({\n    parent,\n    modalCount,\n    addModal() {\n      setModalCount(count => count + 1);\n      if (parent) {\n        parent.addModal();\n      }\n    },\n    removeModal() {\n      setModalCount(count => count - 1);\n      if (parent) {\n        parent.removeModal();\n      }\n    }\n  }), [parent, modalCount]);\n\n  return (\n    <Context.Provider value={context}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport interface ModalProviderAria {\n  /**\n   * Props to be spread on the container element.\n   */\n  modalProviderProps: AriaAttributes\n}\n\n/**\n * Used to determine if the tree should be aria-hidden based on how many\n * modals are open.\n */\nexport function useModalProvider(): ModalProviderAria {\n  let context = useContext(Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : null\n    }\n  };\n}\n\n/**\n * Creates a root node that will be aria-hidden if there are other modals open.\n */\nfunction OverlayContainerDOM(props: ModalProviderProps) {\n  let {modalProviderProps} = useModalProvider();\n  return <div data-overlay-container {...props} {...modalProviderProps} />;\n}\n\n/**\n * An OverlayProvider acts as a container for the top-level application.\n * Any application that uses modal dialogs or other overlays should\n * be wrapped in a `<OverlayProvider>`. This is used to ensure that\n * the main content of the application is hidden from screen readers\n * if a modal or other overlay is opened. Only the top-most modal or\n * overlay should be accessible at once.\n */\nexport function OverlayProvider(props: ModalProviderProps) {\n  return (\n    <ModalProvider>\n      <OverlayContainerDOM {...props} />\n    </ModalProvider>\n  );\n}\n\nexport interface OverlayContainerProps extends ModalProviderProps {\n  /**\n   * The container element in which the overlay portal will be placed.\n   * @default document.body\n   */\n  portalContainer?: Element\n}\n\n/**\n * A container for overlays like modals and popovers. Renders the overlay\n * into a Portal which is placed at the end of the document body.\n * Also ensures that the overlay is hidden from screen readers if a\n * nested modal is opened. Only the top-most modal or overlay should\n * be accessible at once.\n */\nexport function OverlayContainer(props: OverlayContainerProps): React.ReactPortal {\n  let isSSR = useIsSSR();\n  let {portalContainer = isSSR ? null : document.body, ...rest} = props;\n\n  React.useEffect(() => {\n    if (portalContainer?.closest('[data-overlay-container]')) {\n      throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n    }\n  }, [portalContainer]);\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  let contents = <OverlayProvider {...rest} />;\n  return ReactDOM.createPortal(contents, portalContainer);\n}\n\ninterface ModalAriaProps extends DOMAttributes {\n  /** Data attribute marks the dom node as a modal for the aria-modal-polyfill. */\n  'data-ismodal': boolean\n}\n\nexport interface AriaModalOptions {\n  isDisabled?: boolean\n}\n\nexport interface ModalAria {\n  /** Props for the modal content element. */\n  modalProps: ModalAriaProps\n}\n\n/**\n * Hides content outside the current `<OverlayContainer>` from screen readers\n * on mount and restores it on unmount. Typically used by modal dialogs and\n * other types of overlays to ensure that only the top-most modal is\n * accessible at once.\n */\nexport function useModal(options?: AriaModalOptions): ModalAria {\n  // Add aria-hidden to all parent providers on mount, and restore on unmount.\n  let context = useContext(Context);\n  if (!context) {\n    throw new Error('Modal is not contained within a provider');\n  }\n\n  useEffect(() => {\n    if (options?.isDisabled || !context || !context.parent) {\n      return;\n    }\n\n    // The immediate context is from the provider containing this modal, so we only\n    // want to trigger aria-hidden on its parents not on the modal provider itself.\n    context.parent.addModal();\n    return () => {\n      if (context && context.parent) {\n        context.parent.removeModal();\n      }\n    };\n  }, [context, context.parent, options?.isDisabled]);\n\n  return {\n    modalProps: {\n      'data-ismodal': !options?.isDisabled\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport React from 'react';\nimport {useLabels} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {VisuallyHidden} from '@react-aria/visually-hidden';\n\nexport interface DismissButtonProps extends AriaLabelingProps, DOMProps {\n  /** Called when the dismiss button is activated. */\n  onDismiss?: () => void\n}\n\n/**\n * A visually hidden button that can be used to allow screen reader\n * users to dismiss a modal or popup when there is no visual\n * affordance to do so.\n */\nexport function DismissButton(props: DismissButtonProps) {\n  let {onDismiss, ...otherProps} = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  let labels = useLabels(otherProps, stringFormatter.format('dismiss'));\n\n  let onClick = () => {\n    if (onDismiss) {\n      onDismiss();\n    }\n  };\n\n  return (\n    <VisuallyHidden>\n      <button\n        {...labels}\n        tabIndex={-1}\n        onClick={onClick} />\n    </VisuallyHidden>\n  );\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"dismiss\": \"تجاهل\"\n}\n","{\n  \"dismiss\": \"Отхвърляне\"\n}\n","{\n  \"dismiss\": \"Odstranit\"\n}\n","{\n  \"dismiss\": \"Luk\"\n}\n","{\n  \"dismiss\": \"Schließen\"\n}\n","{\n  \"dismiss\": \"Απόρριψη\"\n}\n","{\n  \"dismiss\": \"Dismiss\"\n}\n","{\n  \"dismiss\": \"Descartar\"\n}\n","{\n  \"dismiss\": \"Lõpeta\"\n}\n","{\n  \"dismiss\": \"Hylkää\"\n}\n","{\n  \"dismiss\": \"Rejeter\"\n}\n","{\n  \"dismiss\": \"התעלם\"\n}\n","{\n  \"dismiss\": \"Odbaci\"\n}\n","{\n  \"dismiss\": \"Elutasítás\"\n}\n","{\n  \"dismiss\": \"Ignora\"\n}\n","{\n  \"dismiss\": \"閉じる\"\n}\n","{\n  \"dismiss\": \"무시\"\n}\n","{\n  \"dismiss\": \"Atmesti\"\n}\n","{\n  \"dismiss\": \"Nerādīt\"\n}\n","{\n  \"dismiss\": \"Lukk\"\n}\n","{\n  \"dismiss\": \"Negeren\"\n}\n","{\n  \"dismiss\": \"Zignoruj\"\n}\n","{\n  \"dismiss\": \"Descartar\"\n}\n","{\n  \"dismiss\": \"Dispensar\"\n}\n","{\n  \"dismiss\": \"Revocare\"\n}\n","{\n  \"dismiss\": \"Пропустить\"\n}\n","{\n  \"dismiss\": \"Zrušiť\"\n}\n","{\n  \"dismiss\": \"Opusti\"\n}\n","{\n  \"dismiss\": \"Odbaci\"\n}\n","{\n  \"dismiss\": \"Avvisa\"\n}\n","{\n  \"dismiss\": \"Kapat\"\n}\n","{\n  \"dismiss\": \"Скасувати\"\n}\n","{\n  \"dismiss\": \"取消\"\n}\n","{\n  \"dismiss\": \"關閉\"\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Keeps a ref count of all hidden elements. Added to when hiding an element, and\n// subtracted from when showing it again. When it reaches zero, aria-hidden is removed.\nlet refCountMap = new WeakMap<Element, number>();\n\n/**\n * Hides all elements in the DOM outside the given targets from screen readers using aria-hidden,\n * and returns a function to revert these changes. In addition, changes to the DOM are watched\n * and new elements outside the targets are automatically hidden.\n * @param targets - The elements that should remain visible.\n * @param root - Nothing will be hidden above this element.\n * @returns - A function to restore all hidden elements.\n */\nexport function ariaHideOutside(targets: Element[], root = document.body) {\n  let visibleNodes = new Set<Element>(targets);\n  let hiddenNodes = new Set<Element>();\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // If this node is a live announcer, add it to the set of nodes to keep visible.\n        if (((node instanceof HTMLElement || node instanceof SVGElement) && node.dataset.liveAnnouncer === 'true')) {\n          visibleNodes.add(node);\n        }\n\n        // Skip this node and its children if it is one of the target nodes, or a live announcer.\n        // Also skip children of already hidden nodes, as aria-hidden is recursive. An exception is\n        // made for elements with role=\"row\" since VoiceOver on iOS has issues hiding elements with role=\"row\".\n        // For that case we want to hide the cells inside as well (https://bugs.webkit.org/show_bug.cgi?id=222623).\n        if (\n          visibleNodes.has(node as Element) ||\n          (hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute('role') !== 'row')\n        ) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        // Skip this node but continue to children if one of the targets is inside the node.\n        if (targets.some(target => node.contains(target))) {\n          return NodeFilter.FILTER_SKIP;\n        }\n\n        return NodeFilter.FILTER_ACCEPT;\n      }\n    }\n  );\n\n  let hide = (node: Element) => {\n    let refCount = refCountMap.get(node) ?? 0;\n\n    // If already aria-hidden, and the ref count is zero, then this element\n    // was already hidden and there's nothing for us to do.\n    if (node.getAttribute('aria-hidden') === 'true' && refCount === 0) {\n      return;\n    }\n\n    if (refCount === 0) {\n      node.setAttribute('aria-hidden', 'true');\n    }\n\n    hiddenNodes.add(node);\n    refCountMap.set(node, refCount + 1);\n  };\n\n  let node = walker.nextNode() as Element;\n  while (node != null) {\n    hide(node);\n    node = walker.nextNode() as Element;\n  }\n\n  let observer = new MutationObserver(changes => {\n    for (let change of changes) {\n      if (change.type !== 'childList' || change.addedNodes.length === 0) {\n        continue;\n      }\n\n      // If the parent element of the added nodes is not within one of the targets,\n      // and not already inside a hidden node, hide all of the new children.\n      if (![...visibleNodes, ...hiddenNodes].some(node => node.contains(change.target))) {\n        for (let node of change.addedNodes) {\n          if (((node instanceof HTMLElement || node instanceof SVGElement) && node.dataset.liveAnnouncer === 'true')) {\n            visibleNodes.add(node);\n          } else if (node instanceof Element) {\n            hide(node);\n          }\n        }\n      }\n    }\n  });\n\n  observer.observe(root, {childList: true, subtree: true});\n\n  return () => {\n    observer.disconnect();\n\n    for (let node of hiddenNodes) {\n      let count = refCountMap.get(node);\n      if (count === 1) {\n        node.removeAttribute('aria-hidden');\n        refCountMap.delete(node);\n      } else {\n        refCountMap.set(node, count - 1);\n      }\n    }\n  };\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ariaHideOutside} from './ariaHideOutside';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {PositionProps} from '@react-types/overlays';\nimport {RefObject, useEffect} from 'react';\nimport {useOverlay} from './useOverlay';\nimport {useOverlayPosition} from './useOverlayPosition';\n\nexport interface AriaPopoverProps extends Omit<PositionProps, 'isOpen'> {\n  /**\n   * The ref for the element which the popover positions itself with respect to.\n   */\n  triggerRef: RefObject<Element>,\n  /**\n   * The ref for the popover element.\n   */\n  popoverRef: RefObject<Element>,\n  /**\n   * Whether the popover is non-modal, i.e. elements outside the popover may be\n   * interacted with by assistive technologies.\n   *\n   * Most popovers should not use this option as it may negatively impact the screen\n   * reader experience. Only use with components such as combobox, which are designed\n   * to handle this situation carefully.\n   */\n  isNonModal?: boolean\n}\n\nexport interface PopoverAria {\n  /** Props for the popover element. */\n  popoverProps: DOMAttributes,\n  /** Props for the popover tip arrow if any. */\n  arrowProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a popover component.\n * A popover is an overlay element positioned relative to a trigger.\n */\nexport function usePopover(props: AriaPopoverProps, state: OverlayTriggerState): PopoverAria {\n  let {\n    triggerRef,\n    popoverRef,\n    isNonModal,\n    ...otherProps\n  } = props;\n\n  let {overlayProps} = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur: true,\n      isDismissable: true\n    },\n    popoverRef\n  );\n\n  let {overlayProps: positionProps, arrowProps} = useOverlayPosition({\n    ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen\n  });\n\n  useEffect(() => {\n    if (state.isOpen && !isNonModal) {\n      return ariaHideOutside([popoverRef.current]);\n    }\n  }, [isNonModal, state.isOpen, popoverRef]);\n\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps\n  };\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ariaHideOutside} from './ariaHideOutside';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {RefObject, useEffect} from 'react';\nimport {useOverlay} from './useOverlay';\nimport {useOverlayFocusContain} from './Overlay';\nimport {usePreventScroll} from './usePreventScroll';\n\nexport interface AriaModalOverlayProps {\n  /**\n   * Whether to close the modal when the user interacts outside it.\n   * @default false\n   */\n  isDismissable?: boolean,\n  /**\n   * Whether pressing the escape key to close the modal should be disabled.\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean\n}\n\nexport interface ModalOverlayAria {\n  /** Props for the modal element. */\n  modalProps: DOMAttributes,\n  /** Props for the underlay element. */\n  underlayProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a modal component.\n * A modal is an overlay element which blocks interaction with elements outside it.\n */\nexport function useModalOverlay(props: AriaModalOverlayProps, state: OverlayTriggerState, ref: RefObject<HTMLElement>): ModalOverlayAria {\n  let {overlayProps, underlayProps} = useOverlay({\n    ...props,\n    isOpen: state.isOpen,\n    onClose: state.close\n  }, ref);\n\n  usePreventScroll({\n    isDisabled: !state.isOpen\n  });\n\n  useOverlayFocusContain();\n\n  useEffect(() => {\n    if (state.isOpen) {\n      return ariaHideOutside([ref.current]);\n    }\n  }, [state.isOpen, ref]);\n\n  return {\n    modalProps: mergeProps(overlayProps),\n    underlayProps\n  };\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusScope} from '@react-aria/focus';\nimport React, {ReactNode, useContext, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from '@react-aria/ssr';\nimport {useLayoutEffect} from '@react-aria/utils';\n\nexport interface OverlayProps {\n  /**\n   * The container element in which the overlay portal will be placed.\n   * @default document.body\n   */\n  portalContainer?: Element,\n  /** The overlay to render in the portal. */\n  children: ReactNode\n}\n\nconst OverlayContext = React.createContext(null);\n\n/**\n * A container which renders an overlay such as a popover or modal in a portal,\n * and provides a focus scope for the child elements.\n */\nexport function Overlay(props: OverlayProps) {\n  let isSSR = useIsSSR();\n  let {portalContainer = isSSR ? null : document.body} = props;\n  let [contain, setContain] = useState(false);\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  let contents = (\n    <OverlayContext.Provider value={setContain}>\n      <FocusScope restoreFocus contain={contain}>\n        {props.children}\n      </FocusScope>\n    </OverlayContext.Provider>\n  );\n\n  return ReactDOM.createPortal(contents, portalContainer);\n}\n\n/** @private */\nexport function useOverlayFocusContain() {\n  let setContain = useContext(OverlayContext);\n  useLayoutEffect(() => {\n    setContain?.(true);\n  }, [setContain]);\n}\n"]},"metadata":{},"sourceType":"module"}