{"ast":null,"code":"import $iFADg$react, { useContext as $iFADg$useContext, useState as $iFADg$useState, useEffect as $iFADg$useEffect, useMemo as $iFADg$useMemo, useRef as $iFADg$useRef } from \"react\";\nimport { useIsSSR as $iFADg$useIsSSR } from \"@react-aria/ssr\";\nimport { LocalizedStringDictionary as $iFADg$LocalizedStringDictionary, LocalizedStringFormatter as $iFADg$LocalizedStringFormatter } from \"@internationalized/string\";\nimport { DateFormatter as $iFADg$DateFormatter } from \"@internationalized/date\";\nimport { NumberFormatter as $iFADg$NumberFormatter } from \"@internationalized/number\";\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n// https://en.wikipedia.org/wiki/Right-to-left\n\nconst $148a7a147e38ea7f$var$RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst $148a7a147e38ea7f$var$RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\nfunction $148a7a147e38ea7f$export$702d680b21cbd764(locale) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);\n  } // If not, just guess by the language (first part of the locale)\n\n\n  let lang = locale.split('-')[0];\n  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);\n}\n\nfunction $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {\n  // @ts-ignore\n  let locale = typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage) || 'en-US';\n\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = 'en-US';\n  }\n\n  return {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\nlet $1e5a04cdaf7d1af8$var$listeners = new Set();\n\nfunction $1e5a04cdaf7d1af8$var$updateLocale() {\n  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\n\n  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);\n}\n\nfunction $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {\n  let isSSR = $iFADg$useIsSSR();\n  let [defaultLocale, setDefaultLocale] = $iFADg$useState($1e5a04cdaf7d1af8$var$currentLocale);\n  $iFADg$useEffect(() => {\n    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);\n    return () => {\n      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);\n      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    };\n  }, []); // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n\n  if (isSSR) return {\n    locale: 'en-US',\n    direction: 'ltr'\n  };\n  return defaultLocale;\n}\n\nconst $18f2051aff69b9bf$var$I18nContext = /*#__PURE__*/$iFADg$react.createContext(null);\n\nfunction $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {\n  let {\n    locale: locale,\n    children: children\n  } = props;\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let value = locale ? {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n  return /*#__PURE__*/$iFADg$react.createElement($18f2051aff69b9bf$var$I18nContext.Provider, {\n    value: value\n  }, children);\n}\n\nfunction $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let context = $iFADg$useContext($18f2051aff69b9bf$var$I18nContext);\n  return context || defaultLocale;\n}\n\nvar $2aa2084a6c2b6b4f$exports = {};\n\"use strict\";\n\nconst $fca6afa0e843324b$var$cache = new WeakMap();\n\nfunction $fca6afa0e843324b$var$getCachedDictionary(strings) {\n  let dictionary = $fca6afa0e843324b$var$cache.get(strings);\n\n  if (!dictionary) {\n    dictionary = new $iFADg$LocalizedStringDictionary(strings);\n    $fca6afa0e843324b$var$cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\nfunction $fca6afa0e843324b$export$f12b703ca79dfbb1(strings) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let dictionary = $iFADg$useMemo(() => $fca6afa0e843324b$var$getCachedDictionary(strings), [strings]);\n  return $iFADg$useMemo(() => new $iFADg$LocalizedStringFormatter(locale, dictionary), [locale, dictionary]);\n}\n\nfunction $33bf17300c498528$export$a2f47a3d2973640(options = {}) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7(); // @ts-ignore\n\n  return $iFADg$useMemo(() => new Intl.ListFormat(locale, options), [locale, options]);\n}\n\nfunction $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = $iFADg$useRef(null);\n  if (options && lastOptions.current && $896ba0a80a8f4d36$var$isEqual(options, lastOptions.current)) options = lastOptions.current;\n  lastOptions.current = options;\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$DateFormatter(locale, options), [locale, options]);\n}\n\nfunction $896ba0a80a8f4d36$var$isEqual(a, b) {\n  if (a === b) return true;\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) return false;\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) return false;\n  }\n\n  return true;\n}\n\nfunction $a916eb452884faea$export$b7a616150fdb9f44(options = {}) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$NumberFormatter(locale, options), [locale, options]);\n}\n\nlet $325a3faab7a68acd$var$cache = new Map();\n\nfunction $325a3faab7a68acd$export$a16aca283550c30d(options) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);\n  let formatter = new Intl.Collator(locale, options);\n  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);\n  return formatter;\n}\n\nfunction $bb77f239b46e8c72$export$3274cf84b703fff(options) {\n  let collator = $325a3faab7a68acd$export$a16aca283550c30d({\n    usage: 'search',\n    ...options\n  }); // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) return true; // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n\n    endsWith(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n\n    contains(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      let scan = 0;\n      let sliceLen = substring.length;\n\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) return true;\n      }\n\n      return false;\n    }\n\n  };\n}\n\nexport { $18f2051aff69b9bf$export$a54013f0d02a8f82 as I18nProvider, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 as useLocale, $fca6afa0e843324b$export$f12b703ca79dfbb1 as useLocalizedStringFormatter, $33bf17300c498528$export$a2f47a3d2973640 as useListFormatter, $896ba0a80a8f4d36$export$85fd5fdf27bacc79 as useDateFormatter, $a916eb452884faea$export$b7a616150fdb9f44 as useNumberFormatter, $325a3faab7a68acd$export$a16aca283550c30d as useCollator, $bb77f239b46e8c72$export$3274cf84b703fff as useFilter };","map":{"version":3,"sources":["packages/@react-aria/i18n/src/context.tsx","packages/@react-aria/i18n/src/utils.ts","packages/@react-aria/i18n/src/useDefaultLocale.ts","node_modules/@parcel/node-resolver-core/lib/_empty.js","packages/@react-aria/i18n/src/useLocalizedStringFormatter.ts","packages/@react-aria/i18n/src/useListFormatter.tsx","packages/@react-aria/i18n/src/useDateFormatter.ts","packages/@react-aria/i18n/src/useNumberFormatter.ts","packages/@react-aria/i18n/src/useCollator.ts","packages/@react-aria/i18n/src/useFilter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isRTL} from './utils';\nimport {Locale, useDefaultLocale} from './useDefaultLocale';\nimport React, {ReactNode, useContext} from 'react';\n\nexport interface I18nProviderProps {\n  /** Contents that should have the locale applied. */\n  children: ReactNode,\n  /** The locale to apply to the children. */\n  locale?: string\n}\n\nconst I18nContext = React.createContext<Locale>(null);\n\n/**\n * Provides the locale for the application to all child components.\n */\nexport function I18nProvider(props: I18nProviderProps) {\n  let {locale, children} = props;\n  let defaultLocale = useDefaultLocale();\n\n  let value: Locale = locale ? {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n\n  return (\n    <I18nContext.Provider value={value}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n\n/**\n * Returns the current locale and layout direction.\n */\nexport function useLocale(): Locale {\n  let defaultLocale = useDefaultLocale();\n  let context = useContext(I18nContext);\n  return context || defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(locale: string) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return RTL_SCRIPTS.has(script);\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {isRTL} from './utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface Locale {\n  /** The [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt) language code for the locale. */\n  locale: string,\n  /** The writing direction for the locale. */\n  direction: Direction\n}\n\n/**\n * Gets the locale setting of the browser.\n */\nexport function getDefaultLocale(): Locale {\n  // @ts-ignore\n  let locale = (typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage)) || 'en-US';\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = 'en-US';\n  }\n  return {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet currentLocale = getDefaultLocale();\nlet listeners = new Set<(locale: Locale) => void>();\n\nfunction updateLocale() {\n  currentLocale = getDefaultLocale();\n  for (let listener of listeners) {\n    listener(currentLocale);\n  }\n}\n\n/**\n * Returns the current browser/system language, and updates when it changes.\n */\nexport function useDefaultLocale(): Locale {\n  let isSSR = useIsSSR();\n  let [defaultLocale, setDefaultLocale] = useState(currentLocale);\n\n  useEffect(() => {\n    if (listeners.size === 0) {\n      window.addEventListener('languagechange', updateLocale);\n    }\n\n    listeners.add(setDefaultLocale);\n\n    return () => {\n      listeners.delete(setDefaultLocale);\n      if (listeners.size === 0) {\n        window.removeEventListener('languagechange', updateLocale);\n      }\n    };\n  }, []);\n\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) {\n    return {\n      locale: 'en-US',\n      direction: 'ltr'\n    };\n  }\n\n  return defaultLocale;\n}\n","\"use strict\";","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedString, LocalizedStringDictionary, LocalizedStringFormatter, LocalizedStrings} from '@internationalized/string';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\nconst cache = new WeakMap();\nfunction getCachedDictionary<K extends string, T extends LocalizedString>(strings: LocalizedStrings<K, T>): LocalizedStringDictionary<K, T> {\n  let dictionary = cache.get(strings);\n  if (!dictionary) {\n    dictionary = new LocalizedStringDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\n/**\n * Provides localized string formatting for the current locale. Supports interpolating variables,\n * selecting the correct pluralization, and formatting numbers. Automatically updates when the locale changes.\n * @param strings - A mapping of languages to localized strings by key.\n */\nexport function useLocalizedStringFormatter<K extends string = string, T extends LocalizedString = string>(strings: LocalizedStrings<K, T>): LocalizedStringFormatter<K, T> {\n  let {locale} = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  return useMemo(() => new LocalizedStringFormatter(locale, dictionary), [locale, dictionary]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized list formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the list formatter for performance.\n * @param options - Formatting options.\n */\n\n// Typescript version 4.7 supports Intl.ListFormat - TODO upgrade\n// @ts-ignore\nexport function useListFormatter(options: Intl.ListFormatOptions = {}): Intl.ListFormat {\n  let {locale} = useLocale();\n  // @ts-ignore\n  return useMemo(() => new Intl.ListFormat(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter} from '@internationalized/date';\nimport {useLocale} from './context';\nimport {useMemo, useRef} from 'react';\n\nexport interface DateFormatterOptions extends Intl.DateTimeFormatOptions {\n  calendar?: string\n}\n\n/**\n * Provides localized date formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the date formatter for performance.\n * @param options - Formatting options.\n */\nexport function useDateFormatter(options?: DateFormatterOptions): DateFormatter {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = useRef(null);\n  if (options && lastOptions.current && isEqual(options, lastOptions.current)) {\n    options = lastOptions.current;\n  }\n\n  lastOptions.current = options;\n\n  let {locale} = useLocale();\n  return useMemo(() => new DateFormatter(locale, options), [locale, options]);\n}\n\nfunction isEqual(a: DateFormatterOptions, b: DateFormatterOptions) {\n  if (a === b) {\n    return true;\n  }\n\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatOptions, NumberFormatter} from '@internationalized/number';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new NumberFormatter(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCollator} from './useCollator';\n\nexport interface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean,\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean,\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean\n}\n\n/**\n * Provides localized string search functionality that is useful for filtering or matching items\n * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.\n */\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  let collator = useCollator({\n    usage: 'search',\n    ...options\n  });\n\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n\n      let scan = 0;\n      let sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}