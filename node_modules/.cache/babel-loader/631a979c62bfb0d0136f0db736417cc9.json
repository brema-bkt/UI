{"ast":null,"code":"import { useGridRowGroup as $lJcFS$useGridRowGroup, useGrid as $lJcFS$useGrid, GridKeyboardDelegate as $lJcFS$GridKeyboardDelegate, useGridCell as $lJcFS$useGridCell, useGridRow as $lJcFS$useGridRow, useGridSelectionCheckbox as $lJcFS$useGridSelectionCheckbox } from \"@react-aria/grid\";\nimport { announce as $lJcFS$announce } from \"@react-aria/live-announcer\";\nimport { useId as $lJcFS$useId, useDescription as $lJcFS$useDescription, useUpdateEffect as $lJcFS$useUpdateEffect, mergeProps as $lJcFS$mergeProps, isAndroid as $lJcFS$isAndroid, focusWithoutScrolling as $lJcFS$focusWithoutScrolling } from \"@react-aria/utils\";\nimport { useMemo as $lJcFS$useMemo, useRef as $lJcFS$useRef, useCallback as $lJcFS$useCallback } from \"react\";\nimport { useCollator as $lJcFS$useCollator, useLocale as $lJcFS$useLocale, useLocalizedStringFormatter as $lJcFS$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useFocusable as $lJcFS$useFocusable, focusSafely as $lJcFS$focusSafely } from \"@react-aria/focus\";\nimport { usePress as $lJcFS$usePress, useKeyboard as $lJcFS$useKeyboard, useMove as $lJcFS$useMove } from \"@react-aria/interactions\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nconst $2140fb2337097f2d$export$552312adfd451dab = new WeakMap();\n\nfunction $2140fb2337097f2d$var$normalizeKey(key) {\n  if (typeof key === 'string') return key.replace(/\\s*/g, '');\n  return '' + key;\n}\n\nfunction $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\n\nfunction $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\n\nfunction $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(' ');\n}\n\nvar $ae7e9c471762b4d3$exports = {};\nvar $ce3de3ff2fd66848$exports = {};\n$ce3de3ff2fd66848$exports = {\n  \"ascending\": `تصاعدي`,\n  \"ascendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,\n  \"columnSize\": args => `${args.value} بالبكسل`,\n  \"descending\": `تنازلي`,\n  \"descendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,\n  \"select\": `تحديد`,\n  \"selectAll\": `تحديد الكل`,\n  \"sortable\": `عمود قابل للترتيب`\n};\nvar $cb80dcce530985b9$exports = {};\n$cb80dcce530985b9$exports = {\n  \"ascending\": `възходящ`,\n  \"ascendingSort\": args => `сортирано по колона ${args.columnName} във възходящ ред`,\n  \"columnSize\": args => `${args.value} пиксела`,\n  \"descending\": `низходящ`,\n  \"descendingSort\": args => `сортирано по колона ${args.columnName} в низходящ ред`,\n  \"select\": `Изберете`,\n  \"selectAll\": `Изберете всичко`,\n  \"sortable\": `сортираща колона`\n};\nvar $68ac86749db4c0fb$exports = {};\n$68ac86749db4c0fb$exports = {\n  \"ascending\": `vzestupně`,\n  \"ascendingSort\": args => `řazeno vzestupně podle sloupce ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixelů`,\n  \"descending\": `sestupně`,\n  \"descendingSort\": args => `řazeno sestupně podle sloupce ${args.columnName}`,\n  \"select\": `Vybrat`,\n  \"selectAll\": `Vybrat vše`,\n  \"sortable\": `sloupec s možností řazení`\n};\nvar $9a6cbac08487e661$exports = {};\n$9a6cbac08487e661$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `faldende`,\n  \"descendingSort\": args => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,\n  \"select\": `Vælg`,\n  \"selectAll\": `Vælg alle`,\n  \"sortable\": `sorterbar kolonne`\n};\nvar $c963661d89486e72$exports = {};\n$c963661d89486e72$exports = {\n  \"ascending\": `aufsteigend`,\n  \"ascendingSort\": args => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,\n  \"columnSize\": args => `${args.value} Pixel`,\n  \"descending\": `absteigend`,\n  \"descendingSort\": args => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,\n  \"select\": `Auswählen`,\n  \"selectAll\": `Alles auswählen`,\n  \"sortable\": `sortierbare Spalte`\n};\nvar $ac03861c6e8605f4$exports = {};\n$ac03861c6e8605f4$exports = {\n  \"ascending\": `αύξουσα`,\n  \"ascendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `φθίνουσα`,\n  \"descendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,\n  \"select\": `Επιλογή`,\n  \"selectAll\": `Επιλογή όλων`,\n  \"sortable\": `Στήλη διαλογής`\n};\nvar $09e6b82e0d6e466a$exports = {};\n$09e6b82e0d6e466a$exports = {\n  \"select\": `Select`,\n  \"selectAll\": `Select All`,\n  \"sortable\": `sortable column`,\n  \"ascending\": `ascending`,\n  \"descending\": `descending`,\n  \"ascendingSort\": args => `sorted by column ${args.columnName} in ascending order`,\n  \"descendingSort\": args => `sorted by column ${args.columnName} in descending order`,\n  \"columnSize\": args => `${args.value} pixels`\n};\nvar $8cc39eb66c2bf220$exports = {};\n$8cc39eb66c2bf220$exports = {\n  \"ascending\": `de subida`,\n  \"ascendingSort\": args => `ordenado por columna ${args.columnName} en orden de subida`,\n  \"columnSize\": args => `${args.value} píxeles`,\n  \"descending\": `de bajada`,\n  \"descendingSort\": args => `ordenado por columna ${args.columnName} en orden de bajada`,\n  \"select\": `Seleccionar`,\n  \"selectAll\": `Seleccionar todos`,\n  \"sortable\": `columna ordenable`\n};\nvar $4e11db3c25a38112$exports = {};\n$4e11db3c25a38112$exports = {\n  \"ascending\": `tõusev järjestus`,\n  \"ascendingSort\": args => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,\n  \"columnSize\": args => `${args.value} pikslit`,\n  \"descending\": `laskuv järjestus`,\n  \"descendingSort\": args => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,\n  \"select\": `Vali`,\n  \"selectAll\": `Vali kõik`,\n  \"sortable\": `sorditav veerg`\n};\nvar $da1e751a92575e02$exports = {};\n$da1e751a92575e02$exports = {\n  \"ascending\": `nouseva`,\n  \"ascendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,\n  \"columnSize\": args => `${args.value} pikseliä`,\n  \"descending\": `laskeva`,\n  \"descendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,\n  \"select\": `Valitse`,\n  \"selectAll\": `Valitse kaikki`,\n  \"sortable\": `lajiteltava sarake`\n};\nvar $1b5d6c6c47d55106$exports = {};\n$1b5d6c6c47d55106$exports = {\n  \"ascending\": `croissant`,\n  \"ascendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `décroissant`,\n  \"descendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,\n  \"select\": `Sélectionner`,\n  \"selectAll\": `Sélectionner tout`,\n  \"sortable\": `colonne triable`\n};\nvar $7c18ba27b86d3308$exports = {};\n$7c18ba27b86d3308$exports = {\n  \"ascending\": `עולה`,\n  \"ascendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר עולה`,\n  \"columnSize\": args => `${args.value} פיקסלים`,\n  \"descending\": `יורד`,\n  \"descendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר יורד`,\n  \"select\": `בחר`,\n  \"selectAll\": `בחר הכול`,\n  \"sortable\": `עמודה שניתן למיין`\n};\nvar $2cb40998e20e8a46$exports = {};\n$2cb40998e20e8a46$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,\n  \"columnSize\": args => `${args.value} piksela`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,\n  \"select\": `Odaberite`,\n  \"selectAll\": `Odaberite sve`,\n  \"sortable\": `stupac koji se može razvrstati`\n};\nvar $189e23eec1d6aa3a$exports = {};\n$189e23eec1d6aa3a$exports = {\n  \"ascending\": `növekvő`,\n  \"ascendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,\n  \"columnSize\": args => `${args.value} képpont`,\n  \"descending\": `csökkenő`,\n  \"descendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,\n  \"select\": `Kijelölés`,\n  \"selectAll\": `Összes kijelölése`,\n  \"sortable\": `rendezendő oszlop`\n};\nvar $3c5ec8e4f015dfd0$exports = {};\n$3c5ec8e4f015dfd0$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `in ordine crescente in base alla colonna ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `in ordine decrescente in base alla colonna ${args.columnName}`,\n  \"select\": `Seleziona`,\n  \"selectAll\": `Seleziona tutto`,\n  \"sortable\": `colonna ordinabile`\n};\nvar $d021d50e6b315ebb$exports = {};\n$d021d50e6b315ebb$exports = {\n  \"ascending\": `昇順`,\n  \"ascendingSort\": args => `列 ${args.columnName} を昇順で並べ替え`,\n  \"columnSize\": args => `${args.value} ピクセル`,\n  \"descending\": `降順`,\n  \"descendingSort\": args => `列 ${args.columnName} を降順で並べ替え`,\n  \"select\": `選択`,\n  \"selectAll\": `すべて選択`,\n  \"sortable\": `並べ替え可能な列`\n};\nvar $52535c35c24ec937$exports = {};\n$52535c35c24ec937$exports = {\n  \"ascending\": `오름차순`,\n  \"ascendingSort\": args => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,\n  \"columnSize\": args => `${args.value} 픽셀`,\n  \"descending\": `내림차순`,\n  \"descendingSort\": args => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,\n  \"select\": `선택`,\n  \"selectAll\": `모두 선택`,\n  \"sortable\": `정렬 가능한 열`\n};\nvar $b37ee03672edfd1d$exports = {};\n$b37ee03672edfd1d$exports = {\n  \"ascending\": `didėjančia tvarka`,\n  \"ascendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,\n  \"columnSize\": args => `${args.value} piks.`,\n  \"descending\": `mažėjančia tvarka`,\n  \"descendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,\n  \"select\": `Pasirinkti`,\n  \"selectAll\": `Pasirinkti viską`,\n  \"sortable\": `rikiuojamas stulpelis`\n};\nvar $c7df6686b4189d56$exports = {};\n$c7df6686b4189d56$exports = {\n  \"ascending\": `augošā secībā`,\n  \"ascendingSort\": args => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,\n  \"columnSize\": args => `${args.value} pikseļi`,\n  \"descending\": `dilstošā secībā`,\n  \"descendingSort\": args => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,\n  \"select\": `Atlasīt`,\n  \"selectAll\": `Atlasīt visu`,\n  \"sortable\": `kārtojamā kolonna`\n};\nvar $da07fe8ec87e6b68$exports = {};\n$da07fe8ec87e6b68$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,\n  \"columnSize\": args => `${args.value} piksler`,\n  \"descending\": `synkende`,\n  \"descendingSort\": args => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,\n  \"select\": `Velg`,\n  \"selectAll\": `Velg alle`,\n  \"sortable\": `kolonne som kan sorteres`\n};\nvar $64b7e390f5791490$exports = {};\n$64b7e390f5791490$exports = {\n  \"ascending\": `oplopend`,\n  \"ascendingSort\": args => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `aflopend`,\n  \"descendingSort\": args => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,\n  \"select\": `Selecteren`,\n  \"selectAll\": `Alles selecteren`,\n  \"sortable\": `sorteerbare kolom`\n};\nvar $2a03621e773f1678$exports = {};\n$2a03621e773f1678$exports = {\n  \"ascending\": `rosnąco`,\n  \"ascendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,\n  \"columnSize\": args => `Liczba pikseli: ${args.value}`,\n  \"descending\": `malejąco`,\n  \"descendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku malejącym`,\n  \"select\": `Zaznacz`,\n  \"selectAll\": `Zaznacz wszystko`,\n  \"sortable\": `kolumna z możliwością sortowania`\n};\nvar $0a79c0aba9e5ecc6$exports = {};\n$0a79c0aba9e5ecc6$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `classificado pela coluna ${args.columnName} em ordem crescente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `classificado pela coluna ${args.columnName} em ordem decrescente`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `coluna classificável`\n};\nvar $de7b4d0f7dc86fc8$exports = {};\n$de7b4d0f7dc86fc8$exports = {\n  \"ascending\": `ascendente`,\n  \"ascendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem ascendente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `descendente`,\n  \"descendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem descendente`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `Coluna ordenável`\n};\nvar $28ea7e849d77bd1c$exports = {};\n$28ea7e849d77bd1c$exports = {\n  \"ascending\": `crescătoare`,\n  \"ascendingSort\": args => `sortate după coloana ${args.columnName} în ordine crescătoare`,\n  \"columnSize\": args => `${args.value} pixeli`,\n  \"descending\": `descrescătoare`,\n  \"descendingSort\": args => `sortate după coloana ${args.columnName} în ordine descrescătoare`,\n  \"select\": `Selectare`,\n  \"selectAll\": `Selectare totală`,\n  \"sortable\": `coloană sortabilă`\n};\nvar $9a09321cf046b187$exports = {};\n$9a09321cf046b187$exports = {\n  \"ascending\": `возрастание`,\n  \"ascendingSort\": args => `сортировать столбец ${args.columnName} в порядке возрастания`,\n  \"columnSize\": args => `${args.value} пикс.`,\n  \"descending\": `убывание`,\n  \"descendingSort\": args => `сортировать столбец ${args.columnName} в порядке убывания`,\n  \"select\": `Выбрать`,\n  \"selectAll\": `Выбрать все`,\n  \"sortable\": `сортируемый столбец`\n};\nvar $5afe469a63fcac7b$exports = {};\n$5afe469a63fcac7b$exports = {\n  \"ascending\": `vzostupne`,\n  \"ascendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"columnSize\": args => `Počet pixelov: ${args.value}`,\n  \"descending\": `zostupne`,\n  \"descendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"select\": `Vybrať`,\n  \"selectAll\": `Vybrať všetko`,\n  \"sortable\": `zoraditeľný stĺpec`\n};\nvar $2956757ac31a7ce2$exports = {};\n$2956757ac31a7ce2$exports = {\n  \"ascending\": `naraščajoče`,\n  \"ascendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,\n  \"columnSize\": args => `${args.value} slikovnih pik`,\n  \"descending\": `padajoče`,\n  \"descendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,\n  \"select\": `Izberite`,\n  \"selectAll\": `Izberite vse`,\n  \"sortable\": `razvrstljivi stolpec`\n};\nvar $cedee0e66b175529$exports = {};\n$cedee0e66b175529$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `sortirano po kolonama ${args.columnName} rastućim redosledom`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `sortirano po kolonama ${args.columnName} padajućim redosledom`,\n  \"select\": `Izaberite`,\n  \"selectAll\": `Izaberite sve`,\n  \"sortable\": `kolona koja se može sortirati`\n};\nvar $6db19998ba4427da$exports = {};\n$6db19998ba4427da$exports = {\n  \"ascending\": `stigande`,\n  \"ascendingSort\": args => `sorterat på kolumn ${args.columnName} i stigande ordning`,\n  \"columnSize\": args => `${args.value} pixlar`,\n  \"descending\": `fallande`,\n  \"descendingSort\": args => `sorterat på kolumn ${args.columnName} i fallande ordning`,\n  \"select\": `Markera`,\n  \"selectAll\": `Markera allt`,\n  \"sortable\": `sorterbar kolumn`\n};\nvar $166b7c9cc1adb1a1$exports = {};\n$166b7c9cc1adb1a1$exports = {\n  \"ascending\": `artan sırada`,\n  \"ascendingSort\": args => `${args.columnName} sütuna göre artan düzende sırala`,\n  \"columnSize\": args => `${args.value} piksel`,\n  \"descending\": `azalan sırada`,\n  \"descendingSort\": args => `${args.columnName} sütuna göre azalan düzende sırala`,\n  \"select\": `Seç`,\n  \"selectAll\": `Tümünü Seç`,\n  \"sortable\": `Sıralanabilir sütun`\n};\nvar $c7ab180b401e49ff$exports = {};\n$c7ab180b401e49ff$exports = {\n  \"ascending\": `висхідний`,\n  \"ascendingSort\": args => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,\n  \"columnSize\": args => `${args.value} пікс.`,\n  \"descending\": `низхідний`,\n  \"descendingSort\": args => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,\n  \"select\": `Вибрати`,\n  \"selectAll\": `Вибрати все`,\n  \"sortable\": `сортувальний стовпець`\n};\nvar $1648ec00941567f3$exports = {};\n$1648ec00941567f3$exports = {\n  \"ascending\": `升序`,\n  \"ascendingSort\": args => `按列 ${args.columnName} 升序排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `降序`,\n  \"descendingSort\": args => `按列 ${args.columnName} 降序排序`,\n  \"select\": `选择`,\n  \"selectAll\": `全选`,\n  \"sortable\": `可排序的列`\n};\nvar $b26f22384b3c1526$exports = {};\n$b26f22384b3c1526$exports = {\n  \"ascending\": `遞增`,\n  \"ascendingSort\": args => `已依據「${args.columnName}」欄遞增排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `遞減`,\n  \"descendingSort\": args => `已依據「${args.columnName}」欄遞減排序`,\n  \"select\": `選取`,\n  \"selectAll\": `全選`,\n  \"sortable\": `可排序的欄`\n};\n$ae7e9c471762b4d3$exports = {\n  \"ar-AE\": $ce3de3ff2fd66848$exports,\n  \"bg-BG\": $cb80dcce530985b9$exports,\n  \"cs-CZ\": $68ac86749db4c0fb$exports,\n  \"da-DK\": $9a6cbac08487e661$exports,\n  \"de-DE\": $c963661d89486e72$exports,\n  \"el-GR\": $ac03861c6e8605f4$exports,\n  \"en-US\": $09e6b82e0d6e466a$exports,\n  \"es-ES\": $8cc39eb66c2bf220$exports,\n  \"et-EE\": $4e11db3c25a38112$exports,\n  \"fi-FI\": $da1e751a92575e02$exports,\n  \"fr-FR\": $1b5d6c6c47d55106$exports,\n  \"he-IL\": $7c18ba27b86d3308$exports,\n  \"hr-HR\": $2cb40998e20e8a46$exports,\n  \"hu-HU\": $189e23eec1d6aa3a$exports,\n  \"it-IT\": $3c5ec8e4f015dfd0$exports,\n  \"ja-JP\": $d021d50e6b315ebb$exports,\n  \"ko-KR\": $52535c35c24ec937$exports,\n  \"lt-LT\": $b37ee03672edfd1d$exports,\n  \"lv-LV\": $c7df6686b4189d56$exports,\n  \"nb-NO\": $da07fe8ec87e6b68$exports,\n  \"nl-NL\": $64b7e390f5791490$exports,\n  \"pl-PL\": $2a03621e773f1678$exports,\n  \"pt-BR\": $0a79c0aba9e5ecc6$exports,\n  \"pt-PT\": $de7b4d0f7dc86fc8$exports,\n  \"ro-RO\": $28ea7e849d77bd1c$exports,\n  \"ru-RU\": $9a09321cf046b187$exports,\n  \"sk-SK\": $5afe469a63fcac7b$exports,\n  \"sl-SI\": $2956757ac31a7ce2$exports,\n  \"sr-SP\": $cedee0e66b175529$exports,\n  \"sv-SE\": $6db19998ba4427da$exports,\n  \"tr-TR\": $166b7c9cc1adb1a1$exports,\n  \"uk-UA\": $c7ab180b401e49ff$exports,\n  \"zh-CN\": $1648ec00941567f3$exports,\n  \"zh-TW\": $b26f22384b3c1526$exports\n};\n\nclass $0ba3c81c7f1caedd$export$da43f8f5cb04028d extends $lJcFS$GridKeyboardDelegate {\n  isCell(node) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) return child.key;\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) return;\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a column, focus the parent column if any\n\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') return parent.key;\n      return;\n    } // only return above row key if not header row\n\n\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') return superKey; // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n\n    if (this.isCell(startItem)) return this.collection.columns[startItem.index].key; // If focus was on a row, then focus the first column header.\n\n    return this.collection.columns[0].key;\n  }\n\n  findNextColumnKey(column) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) return key; // Wrap around to the first column\n\n    let row = this.collection.headerRows[column.level];\n\n    for (let item1 of row.childNodes) {\n      if (item1.type === 'column') return item1.key;\n    }\n  }\n\n  findPreviousColumnKey(column) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) return key; // Wrap around to the last column\n\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') return item.key;\n    }\n  }\n\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus was on a column, then focus the next column\n\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus was on a column, then focus the previous column\n\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    if (key == null) return null; // If the starting key is a cell, search from its parent row.\n\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n\n    while (key != null) {\n      let item = collection.getItem(key); // Check each of the row header cells in this row for a match\n\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell' ? cell.key : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key); // Wrap around when reaching the end of the collection\n\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n\n}\n\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref1) {\n  let {\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized,\n    layout: layout\n  } = props; // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n\n  let collator = $lJcFS$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let delegate = $lJcFS$useMemo(() => keyboardDelegate || new $0ba3c81c7f1caedd$export$da43f8f5cb04028d({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref1,\n    direction: direction,\n    collator: collator,\n    layout: layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref1, direction, collator, layout]);\n  let id = $lJcFS$useId(props.id);\n  $2140fb2337097f2d$export$552312adfd451dab.set(state, id);\n  let {\n    gridProps: gridProps\n  } = $lJcFS$useGrid({ ...props,\n    id: id,\n    keyboardDelegate: delegate,\n\n    getRowText(key) {\n      let added = state.collection.getItem(key);\n      if (!added) return ''; // If the row has a textValue, use that.\n\n      if (added.textValue != null) return added.textValue; // Otherwise combine the text of each of the row header columns.\n\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n\n      if (rowHeaderColumnKeys) {\n        let text = [];\n\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);\n          if (text.length === rowHeaderColumnKeys.size) break;\n        }\n\n        return text.join(' ');\n      }\n\n      return '';\n    }\n\n  }, state, ref1); // Override to include header rows\n\n  if (isVirtualized) gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  let {\n    column: column1,\n    direction: sortDirection\n  } = state.sortDescriptor || {};\n  let stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription = $lJcFS$useMemo(() => {\n    var ref;\n    let columnName = (ref = state.collection.columns.find(c => c.key === column1)) === null || ref === void 0 ? void 0 : ref.textValue;\n    return sortDirection && column1 ? stringFormatter.format(`${sortDirection}Sort`, {\n      columnName: columnName\n    }) : undefined;\n  }, [sortDirection, column1, state.collection.columns]);\n  let descriptionProps = $lJcFS$useDescription(sortDescription); // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n\n  $lJcFS$useUpdateEffect(() => {\n    $lJcFS$announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n  return {\n    gridProps: $lJcFS$mergeProps(gridProps, descriptionProps, // If table is empty, make sure the table is tabbable\n    state.collection.size === 0 && {\n      tabIndex: 0\n    }, {\n      // merge sort description with long press information\n      'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n    })\n  };\n}\n\nfunction $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {\n  var ref1, ref2;\n  let {\n    node: node\n  } = props;\n  let allowsSorting = node.props.allowsSorting; // the selection cell column header needs to focus the checkbox within it but the other columns should focus the cell so that focus doesn't land on the resizer\n\n  let {\n    gridCellProps: gridCellProps\n  } = $lJcFS$useGridCell({ ...props,\n    focusMode: node.props.isSelectionCell || props.hasMenu || node.props.allowsSorting ? 'child' : 'cell'\n  }, state, ref);\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n\n    onPress() {\n      state.sort(node.key);\n    },\n\n    ref: ref\n  }); // Needed to pick up the focusable context, enabling things like Tooltips for example\n\n  let {\n    focusableProps: focusableProps\n  } = $lJcFS$useFocusable({}, ref);\n  if (props.hasMenu) pressProps = {};\n  let ariaSort = null;\n  let isSortedColumn = ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.column) === node.key;\n  let sortDirection = (ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.direction; // aria-sort not supported in Android Talkback\n\n  if (node.props.allowsSorting && !$lJcFS$isAndroid()) ariaSort = isSortedColumn ? sortDirection : 'none';\n  let stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription;\n\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`; // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n\n    if (isSortedColumn && sortDirection && $lJcFS$isAndroid()) sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n  }\n\n  let descriptionProps = $lJcFS$useDescription(sortDescription);\n  return {\n    columnHeaderProps: { ...$lJcFS$mergeProps(gridCellProps, pressProps, focusableProps, descriptionProps, // If the table is empty, make all column headers untabbable or programatically focusable\n      state.collection.size === 0 && {\n        tabIndex: null\n      }),\n      role: 'columnheader',\n      id: $2140fb2337097f2d$export$37cd4213f2ad742e(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n\nfunction $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {\n  let {\n    node: node\n  } = props;\n  let {\n    rowProps: rowProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridRow(props, state, ref);\n  return {\n    rowProps: { ...rowProps,\n      'aria-labelledby': $2140fb2337097f2d$export$85069b70317f543(state, node.key)\n    },\n    isPressed: isPressed\n  };\n}\n\nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let rowProps = {\n    role: 'row'\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n\n  return {\n    rowProps: rowProps\n  };\n}\n\nfunction $7713593715703b24$export$49571c903d73624c(props, state, ref) {\n  let {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridCell(props, state, ref);\n  let columnKey = props.node.column.key;\n\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = $2140fb2337097f2d$export$19baff3266315d44(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n  let {\n    key: key\n  } = props;\n  const {\n    checkboxProps: checkboxProps\n  } = $lJcFS$useGridSelectionCheckbox(props, state);\n  return {\n    checkboxProps: { ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${$2140fb2337097f2d$export$85069b70317f543(state, key)}`\n    }\n  };\n}\n\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n  let {\n    isEmpty: isEmpty,\n    isSelectAll: isSelectAll,\n    selectionMode: selectionMode\n  } = state.selectionManager;\n  const stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n\nfunction $e91ef4e5004e3774$export$52994e973806c219(props, state, columnState, ref) {\n  let {\n    column: item,\n    triggerRef: triggerRef,\n    isDisabled: isDisabled\n  } = props;\n  const stateRef = $lJcFS$useRef(null);\n  stateRef.current = columnState;\n  const stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let id = $lJcFS$useId();\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let {\n    keyboardProps: keyboardProps\n  } = $lJcFS$useKeyboard({\n    onKeyDown: e => {\n      if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ' || e.key === 'Tab') {\n        e.preventDefault(); // switch focus back to the column header on anything that ends edit mode\n\n        $lJcFS$focusSafely(triggerRef.current);\n      }\n    }\n  });\n  const columnResizeWidthRef = $lJcFS$useRef(0);\n  const {\n    moveProps: moveProps\n  } = $lJcFS$useMove({\n    onMoveStart() {\n      columnResizeWidthRef.current = stateRef.current.getColumnWidth(item.key);\n      stateRef.current.onColumnResizeStart(item);\n    },\n\n    onMove(e) {\n      let {\n        deltaX: deltaX,\n        deltaY: deltaY,\n        pointerType: pointerType\n      } = e;\n      if (direction === 'rtl') deltaX *= -1;\n\n      if (pointerType === 'keyboard') {\n        if (deltaY !== 0 && deltaX === 0) deltaX = deltaY * -1;\n        deltaX *= 10;\n      } // if moving up/down only, no need to resize\n\n\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        stateRef.current.onColumnResize(item, columnResizeWidthRef.current);\n        props.onMove(e);\n      }\n    },\n\n    onMoveEnd(e) {\n      let {\n        pointerType: pointerType\n      } = e;\n      columnResizeWidthRef.current = 0;\n      props.onMoveEnd(e);\n      if (pointerType === 'mouse') stateRef.current.onColumnResizeEnd(item);\n    }\n\n  });\n  let min = Math.floor(stateRef.current.getColumnMinWidth(item.key));\n  let max = Math.floor(stateRef.current.getColumnMaxWidth(item.key));\n  if (max === Infinity) max = Number.MAX_SAFE_INTEGER;\n  let value = Math.floor(stateRef.current.getColumnWidth(item.key));\n  let ariaProps = {\n    'aria-label': props.label,\n    'aria-orientation': 'horizontal',\n    'aria-labelledby': `${id} ${$2140fb2337097f2d$export$37cd4213f2ad742e(state, item.key)}`,\n    'aria-valuetext': stringFormatter.format('columnSize', {\n      value: value\n    }),\n    min: min,\n    max: max,\n    value: value\n  };\n  const focusInput = $lJcFS$useCallback(() => {\n    if (ref.current) $lJcFS$focusWithoutScrolling(ref.current);\n  }, [ref]);\n\n  let onChange = e => {\n    let currentWidth = stateRef.current.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n    if (nextValue > currentWidth) nextValue = currentWidth + 10;else nextValue = currentWidth - 10;\n    stateRef.current.onColumnResize(item, nextValue);\n  };\n\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    onPressStart: e => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === 'keyboard') return;\n\n      if (e.pointerType === 'virtual' && columnState.currentlyResizingColumn != null) {\n        stateRef.current.onColumnResizeEnd(item);\n        $lJcFS$focusSafely(triggerRef.current);\n        return;\n      }\n\n      focusInput();\n    },\n    onPress: e => {\n      if (e.pointerType === 'touch') focusInput();else if (e.pointerType !== 'virtual') $lJcFS$focusSafely(triggerRef.current);\n    }\n  });\n  return {\n    resizerProps: $lJcFS$mergeProps(keyboardProps, moveProps, pressProps),\n    inputProps: $lJcFS$mergeProps({\n      id: id,\n      onFocus: () => {\n        // useMove calls onMoveStart for every keypress, but we want resize start to only be called when we start resize mode\n        // call instead during focus and blur\n        stateRef.current.onColumnResizeStart(item);\n        state.setKeyboardNavigationDisabled(true);\n      },\n      onBlur: () => {\n        stateRef.current.onColumnResizeEnd(item);\n        state.setKeyboardNavigationDisabled(false);\n      },\n      onChange: onChange,\n      disabled: isDisabled\n    }, ariaProps)\n  };\n}\n\nfunction $0047e6c294ea075f$export$6fb1613bd7b28198() {\n  return $lJcFS$useGridRowGroup();\n}\n\nexport { $0047e6c294ea075f$export$6fb1613bd7b28198 as useTableRowGroup, $6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable, $f329116d8ad0aba0$export$9514819a8c81e960 as useTableColumnHeader, $b2db214c022798eb$export$7f2f6ae19e707aa5 as useTableRow, $f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow, $7713593715703b24$export$49571c903d73624c as useTableCell, $2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox, $e91ef4e5004e3774$export$52994e973806c219 as useTableColumnResize };","map":{"version":3,"sources":["packages/@react-aria/table/src/index.ts","packages/@react-aria/table/src/useTable.ts","packages/@react-aria/table/src/utils.ts","packages/@react-aria/table/intl/*.js","packages/@react-aria/table/intl/ar-AE.json","packages/@react-aria/table/intl/bg-BG.json","packages/@react-aria/table/intl/cs-CZ.json","packages/@react-aria/table/intl/da-DK.json","packages/@react-aria/table/intl/de-DE.json","packages/@react-aria/table/intl/el-GR.json","packages/@react-aria/table/intl/en-US.json","packages/@react-aria/table/intl/es-ES.json","packages/@react-aria/table/intl/et-EE.json","packages/@react-aria/table/intl/fi-FI.json","packages/@react-aria/table/intl/fr-FR.json","packages/@react-aria/table/intl/he-IL.json","packages/@react-aria/table/intl/hr-HR.json","packages/@react-aria/table/intl/hu-HU.json","packages/@react-aria/table/intl/it-IT.json","packages/@react-aria/table/intl/ja-JP.json","packages/@react-aria/table/intl/ko-KR.json","packages/@react-aria/table/intl/lt-LT.json","packages/@react-aria/table/intl/lv-LV.json","packages/@react-aria/table/intl/nb-NO.json","packages/@react-aria/table/intl/nl-NL.json","packages/@react-aria/table/intl/pl-PL.json","packages/@react-aria/table/intl/pt-BR.json","packages/@react-aria/table/intl/pt-PT.json","packages/@react-aria/table/intl/ro-RO.json","packages/@react-aria/table/intl/ru-RU.json","packages/@react-aria/table/intl/sk-SK.json","packages/@react-aria/table/intl/sl-SI.json","packages/@react-aria/table/intl/sr-SP.json","packages/@react-aria/table/intl/sv-SE.json","packages/@react-aria/table/intl/tr-TR.json","packages/@react-aria/table/intl/uk-UA.json","packages/@react-aria/table/intl/zh-CN.json","packages/@react-aria/table/intl/zh-TW.json","packages/@react-aria/table/src/TableKeyboardDelegate.ts","packages/@react-aria/table/src/useTableColumnHeader.ts","packages/@react-aria/table/src/useTableRow.ts","packages/@react-aria/table/src/useTableHeaderRow.ts","packages/@react-aria/table/src/useTableCell.ts","packages/@react-aria/table/src/useTableSelectionCheckbox.ts","packages/@react-aria/table/src/useTableColumnResize.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useTable} from './useTable';\nexport {useTableColumnHeader} from './useTableColumnHeader';\nexport {useTableRow} from './useTableRow';\nexport {useTableHeaderRow} from './useTableHeaderRow';\nexport {useTableCell} from './useTableCell';\nexport {useTableSelectionCheckbox, useTableSelectAllCheckbox} from './useTableSelectionCheckbox';\nexport {useTableColumnResize} from './useTableColumnResize';\n\n// Workaround for a Parcel bug where re-exports don't work in the CommonJS output format...\n// export {useGridRowGroup as useTableRowGroup} from '@react-aria/grid';\nimport {GridRowGroupAria, useGridRowGroup} from '@react-aria/grid';\nexport function useTableRowGroup(): GridRowGroupAria {\n  return useGridRowGroup();\n}\n\nexport type {AriaTableProps} from './useTable';\nexport type {GridAria, GridRowAria, GridRowProps} from '@react-aria/grid';\nexport type {AriaTableColumnHeaderProps, TableColumnHeaderAria} from './useTableColumnHeader';\nexport type {AriaTableCellProps, TableCellAria} from './useTableCell';\nexport type {TableHeaderRowAria} from './useTableHeaderRow';\nexport type {AriaTableSelectionCheckboxProps, TableSelectionCheckboxAria, TableSelectAllCheckboxAria} from './useTableSelectionCheckbox';\nexport type {AriaTableColumnResizeProps, TableColumnResizeAria} from './useTableColumnResize';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {GridAria, GridProps, useGrid} from '@react-aria/grid';\nimport {gridIds} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Layout} from '@react-stately/virtualizer';\nimport {mergeProps, useDescription, useId, useUpdateEffect} from '@react-aria/utils';\nimport {Node} from '@react-types/shared';\nimport {RefObject, useMemo} from 'react';\nimport {TableKeyboardDelegate} from './TableKeyboardDelegate';\nimport {TableState} from '@react-stately/table';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableProps<T> extends GridProps {\n  /** The layout object for the table. Computes what content is visible and how to position and style them. */\n  layout?: Layout<Node<T>>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a table component.\n * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,\n * and optionally supports row selection and sorting.\n * @param props - Props for the table.\n * @param state - State for the table, as returned by `useTableState`.\n * @param ref - The ref attached to the table element.\n */\nexport function useTable<T>(props: AriaTableProps<T>, state: TableState<T>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    keyboardDelegate,\n    isVirtualized,\n    layout\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new TableKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, layout]);\n  let id = useId(props.id);\n  gridIds.set(state, id);\n\n  let {gridProps} = useGrid({\n    ...props,\n    id,\n    keyboardDelegate: delegate,\n    getRowText(key): string {\n      let added = state.collection.getItem(key);\n      if (!added) {\n        return '';\n      }\n\n      // If the row has a textValue, use that.\n      if (added.textValue != null) {\n        return added.textValue;\n      }\n\n      // Otherwise combine the text of each of the row header columns.\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n      if (rowHeaderColumnKeys) {\n        let text = [];\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n            text.push(cell.textValue);\n          }\n\n          if (text.length === rowHeaderColumnKeys.size) {\n            break;\n          }\n        }\n\n        return text.join(' ');\n      }\n\n      return '';\n    }\n  }, state, ref);\n\n  // Override to include header rows\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  }\n\n  let {column, direction: sortDirection} = state.sortDescriptor || {};\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let sortDescription = useMemo(() => {\n    let columnName = state.collection.columns.find(c => c.key === column)?.textValue;\n    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {columnName}) : undefined;\n  }, [sortDirection, column, state.collection.columns]);\n\n  let descriptionProps = useDescription(sortDescription);\n\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  useUpdateEffect(() => {\n    announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n\n  return {\n    gridProps: mergeProps(\n      gridProps,\n      descriptionProps,\n      // If table is empty, make sure the table is tabbable\n      state.collection.size === 0 && {tabIndex: 0},\n      {\n        // merge sort description with long press information\n        'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n      }\n    )\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport const gridIds = new WeakMap<TableState<unknown>, string>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getColumnHeaderId<T>(state: TableState<T>, columnKey: Key): string {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(columnKey)}`;\n}\n\nexport function getCellId<T>(state: TableState<T>, rowKey: Key, columnKey: Key) {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(rowKey)}-${normalizeKey(columnKey)}`;\n}\n\nexport function getRowLabelledBy<T>(state: TableState<T>, rowKey: Key): string {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey =>\n    getCellId(state, rowKey, columnKey)\n  ).join(' ');\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"ascending\": \"تصاعدي\",\n  \"ascendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تصاعدي\",\n  \"columnSize\": \"{value} بالبكسل\",\n  \"descending\": \"تنازلي\",\n  \"descendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تنازلي\",\n  \"select\": \"تحديد\",\n  \"selectAll\": \"تحديد الكل\",\n  \"sortable\": \"عمود قابل للترتيب\"\n}\n","{\n  \"ascending\": \"възходящ\",\n  \"ascendingSort\": \"сортирано по колона {columnName} във възходящ ред\",\n  \"columnSize\": \"{value} пиксела\",\n  \"descending\": \"низходящ\",\n  \"descendingSort\": \"сортирано по колона {columnName} в низходящ ред\",\n  \"select\": \"Изберете\",\n  \"selectAll\": \"Изберете всичко\",\n  \"sortable\": \"сортираща колона\"\n}\n","{\n  \"ascending\": \"vzestupně\",\n  \"ascendingSort\": \"řazeno vzestupně podle sloupce {columnName}\",\n  \"columnSize\": \"{value} pixelů\",\n  \"descending\": \"sestupně\",\n  \"descendingSort\": \"řazeno sestupně podle sloupce {columnName}\",\n  \"select\": \"Vybrat\",\n  \"selectAll\": \"Vybrat vše\",\n  \"sortable\": \"sloupec s možností řazení\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sorteret efter kolonne {columnName} i stigende rækkefølge\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"faldende\",\n  \"descendingSort\": \"sorteret efter kolonne {columnName} i faldende rækkefølge\",\n  \"select\": \"Vælg\",\n  \"selectAll\": \"Vælg alle\",\n  \"sortable\": \"sorterbar kolonne\"\n}\n","{\n  \"ascending\": \"aufsteigend\",\n  \"ascendingSort\": \"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\",\n  \"columnSize\": \"{value} Pixel\",\n  \"descending\": \"absteigend\",\n  \"descendingSort\": \"sortiert nach Spalte {columnName} in absteigender Reihenfolge\",\n  \"select\": \"Auswählen\",\n  \"selectAll\": \"Alles auswählen\",\n  \"sortable\": \"sortierbare Spalte\"\n}\n","{\n  \"ascending\": \"αύξουσα\",\n  \"ascendingSort\": \"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"φθίνουσα\",\n  \"descendingSort\": \"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\",\n  \"select\": \"Επιλογή\",\n  \"selectAll\": \"Επιλογή όλων\",\n  \"sortable\": \"Στήλη διαλογής\"\n}\n","{\n  \"select\": \"Select\",\n  \"selectAll\": \"Select All\",\n  \"sortable\": \"sortable column\",\n  \"ascending\": \"ascending\",\n  \"descending\": \"descending\",\n  \"ascendingSort\": \"sorted by column {columnName} in ascending order\",\n  \"descendingSort\": \"sorted by column {columnName} in descending order\",\n  \"columnSize\": \"{value} pixels\"\n}\n","{\n  \"ascending\": \"de subida\",\n  \"ascendingSort\": \"ordenado por columna {columnName} en orden de subida\",\n  \"columnSize\": \"{value} píxeles\",\n  \"descending\": \"de bajada\",\n  \"descendingSort\": \"ordenado por columna {columnName} en orden de bajada\",\n  \"select\": \"Seleccionar\",\n  \"selectAll\": \"Seleccionar todos\",\n  \"sortable\": \"columna ordenable\"\n}\n","{\n  \"ascending\": \"tõusev järjestus\",\n  \"ascendingSort\": \"sorditud veeru järgi {columnName} tõusvas järjestuses\",\n  \"columnSize\": \"{value} pikslit\",\n  \"descending\": \"laskuv järjestus\",\n  \"descendingSort\": \"sorditud veeru järgi {columnName} laskuvas järjestuses\",\n  \"select\": \"Vali\",\n  \"selectAll\": \"Vali kõik\",\n  \"sortable\": \"sorditav veerg\"\n}\n","{\n  \"ascending\": \"nouseva\",\n  \"ascendingSort\": \"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\",\n  \"columnSize\": \"{value} pikseliä\",\n  \"descending\": \"laskeva\",\n  \"descendingSort\": \"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\",\n  \"select\": \"Valitse\",\n  \"selectAll\": \"Valitse kaikki\",\n  \"sortable\": \"lajiteltava sarake\"\n}\n","{\n  \"ascending\": \"croissant\",\n  \"ascendingSort\": \"trié en fonction de la colonne {columnName} par ordre croissant\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"décroissant\",\n  \"descendingSort\": \"trié en fonction de la colonne {columnName} par ordre décroissant\",\n  \"select\": \"Sélectionner\",\n  \"selectAll\": \"Sélectionner tout\",\n  \"sortable\": \"colonne triable\"\n}\n","{\n  \"ascending\": \"עולה\",\n  \"ascendingSort\": \"מוין לפי עמודה {columnName} בסדר עולה\",\n  \"columnSize\": \"{value} פיקסלים\",\n  \"descending\": \"יורד\",\n  \"descendingSort\": \"מוין לפי עמודה {columnName} בסדר יורד\",\n  \"select\": \"בחר\",\n  \"selectAll\": \"בחר הכול\",\n  \"sortable\": \"עמודה שניתן למיין\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"razvrstano po stupcima {columnName} rastućem redoslijedom\",\n  \"columnSize\": \"{value} piksela\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"razvrstano po stupcima {columnName} padajućim redoslijedom\",\n  \"select\": \"Odaberite\",\n  \"selectAll\": \"Odaberite sve\",\n  \"sortable\": \"stupac koji se može razvrstati\"\n}\n","{\n  \"ascending\": \"növekvő\",\n  \"ascendingSort\": \"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\",\n  \"columnSize\": \"{value} képpont\",\n  \"descending\": \"csökkenő\",\n  \"descendingSort\": \"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\",\n  \"select\": \"Kijelölés\",\n  \"selectAll\": \"Összes kijelölése\",\n  \"sortable\": \"rendezendő oszlop\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"in ordine crescente in base alla colonna {columnName}\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"in ordine decrescente in base alla colonna {columnName}\",\n  \"select\": \"Seleziona\",\n  \"selectAll\": \"Seleziona tutto\",\n  \"sortable\": \"colonna ordinabile\"\n}\n","{\n  \"ascending\": \"昇順\",\n  \"ascendingSort\": \"列 {columnName} を昇順で並べ替え\",\n  \"columnSize\": \"{value} ピクセル\",\n  \"descending\": \"降順\",\n  \"descendingSort\": \"列 {columnName} を降順で並べ替え\",\n  \"select\": \"選択\",\n  \"selectAll\": \"すべて選択\",\n  \"sortable\": \"並べ替え可能な列\"\n}\n","{\n  \"ascending\": \"오름차순\",\n  \"ascendingSort\": \"{columnName} 열을 기준으로 오름차순으로 정렬됨\",\n  \"columnSize\": \"{value} 픽셀\",\n  \"descending\": \"내림차순\",\n  \"descendingSort\": \"{columnName} 열을 기준으로 내림차순으로 정렬됨\",\n  \"select\": \"선택\",\n  \"selectAll\": \"모두 선택\",\n  \"sortable\": \"정렬 가능한 열\"\n}\n","{\n  \"ascending\": \"didėjančia tvarka\",\n  \"ascendingSort\": \"surikiuota pagal stulpelį {columnName} didėjančia tvarka\",\n  \"columnSize\": \"{value} piks.\",\n  \"descending\": \"mažėjančia tvarka\",\n  \"descendingSort\": \"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\",\n  \"select\": \"Pasirinkti\",\n  \"selectAll\": \"Pasirinkti viską\",\n  \"sortable\": \"rikiuojamas stulpelis\"\n}\n","{\n  \"ascending\": \"augošā secībā\",\n  \"ascendingSort\": \"kārtots pēc kolonnas {columnName} augošā secībā\",\n  \"columnSize\": \"{value} pikseļi\",\n  \"descending\": \"dilstošā secībā\",\n  \"descendingSort\": \"kārtots pēc kolonnas {columnName} dilstošā secībā\",\n  \"select\": \"Atlasīt\",\n  \"selectAll\": \"Atlasīt visu\",\n  \"sortable\": \"kārtojamā kolonna\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sortert etter kolonne {columnName} i stigende rekkefølge\",\n  \"columnSize\": \"{value} piksler\",\n  \"descending\": \"synkende\",\n  \"descendingSort\": \"sortert etter kolonne {columnName} i synkende rekkefølge\",\n  \"select\": \"Velg\",\n  \"selectAll\": \"Velg alle\",\n  \"sortable\": \"kolonne som kan sorteres\"\n}\n","{\n  \"ascending\": \"oplopend\",\n  \"ascendingSort\": \"gesorteerd in oplopende volgorde in kolom {columnName}\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"aflopend\",\n  \"descendingSort\": \"gesorteerd in aflopende volgorde in kolom {columnName}\",\n  \"select\": \"Selecteren\",\n  \"selectAll\": \"Alles selecteren\",\n  \"sortable\": \"sorteerbare kolom\"\n}\n","{\n  \"ascending\": \"rosnąco\",\n  \"ascendingSort\": \"posortowano według kolumny {columnName} w porządku rosnącym\",\n  \"columnSize\": \"Liczba pikseli: {value}\",\n  \"descending\": \"malejąco\",\n  \"descendingSort\": \"posortowano według kolumny {columnName} w porządku malejącym\",\n  \"select\": \"Zaznacz\",\n  \"selectAll\": \"Zaznacz wszystko\",\n  \"sortable\": \"kolumna z możliwością sortowania\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"classificado pela coluna {columnName} em ordem crescente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"classificado pela coluna {columnName} em ordem decrescente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"coluna classificável\"\n}\n","{\n  \"ascending\": \"ascendente\",\n  \"ascendingSort\": \"Ordenar por coluna {columnName} em ordem ascendente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"descendente\",\n  \"descendingSort\": \"Ordenar por coluna {columnName} em ordem descendente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"Coluna ordenável\"\n}\n","{\n  \"ascending\": \"crescătoare\",\n  \"ascendingSort\": \"sortate după coloana {columnName} în ordine crescătoare\",\n  \"columnSize\": \"{value} pixeli\",\n  \"descending\": \"descrescătoare\",\n  \"descendingSort\": \"sortate după coloana {columnName} în ordine descrescătoare\",\n  \"select\": \"Selectare\",\n  \"selectAll\": \"Selectare totală\",\n  \"sortable\": \"coloană sortabilă\"\n}\n","{\n  \"ascending\": \"возрастание\",\n  \"ascendingSort\": \"сортировать столбец {columnName} в порядке возрастания\",\n  \"columnSize\": \"{value} пикс.\",\n  \"descending\": \"убывание\",\n  \"descendingSort\": \"сортировать столбец {columnName} в порядке убывания\",\n  \"select\": \"Выбрать\",\n  \"selectAll\": \"Выбрать все\",\n  \"sortable\": \"сортируемый столбец\"\n}\n","{\n  \"ascending\": \"vzostupne\",\n  \"ascendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"columnSize\": \"Počet pixelov: {value}\",\n  \"descending\": \"zostupne\",\n  \"descendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"select\": \"Vybrať\",\n  \"selectAll\": \"Vybrať všetko\",\n  \"sortable\": \"zoraditeľný stĺpec\"\n}\n","{\n  \"ascending\": \"naraščajoče\",\n  \"ascendingSort\": \"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\",\n  \"columnSize\": \"{value} slikovnih pik\",\n  \"descending\": \"padajoče\",\n  \"descendingSort\": \"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\",\n  \"select\": \"Izberite\",\n  \"selectAll\": \"Izberite vse\",\n  \"sortable\": \"razvrstljivi stolpec\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"sortirano po kolonama {columnName} rastućim redosledom\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"sortirano po kolonama {columnName} padajućim redosledom\",\n  \"select\": \"Izaberite\",\n  \"selectAll\": \"Izaberite sve\",\n  \"sortable\": \"kolona koja se može sortirati\"\n}\n","{\n  \"ascending\": \"stigande\",\n  \"ascendingSort\": \"sorterat på kolumn {columnName} i stigande ordning\",\n  \"columnSize\": \"{value} pixlar\",\n  \"descending\": \"fallande\",\n  \"descendingSort\": \"sorterat på kolumn {columnName} i fallande ordning\",\n  \"select\": \"Markera\",\n  \"selectAll\": \"Markera allt\",\n  \"sortable\": \"sorterbar kolumn\"\n}\n","{\n  \"ascending\": \"artan sırada\",\n  \"ascendingSort\": \"{columnName} sütuna göre artan düzende sırala\",\n  \"columnSize\": \"{value} piksel\",\n  \"descending\": \"azalan sırada\",\n  \"descendingSort\": \"{columnName} sütuna göre azalan düzende sırala\",\n  \"select\": \"Seç\",\n  \"selectAll\": \"Tümünü Seç\",\n  \"sortable\": \"Sıralanabilir sütun\"\n}\n","{\n  \"ascending\": \"висхідний\",\n  \"ascendingSort\": \"відсортовано за стовпцем {columnName} у висхідному порядку\",\n  \"columnSize\": \"{value} пікс.\",\n  \"descending\": \"низхідний\",\n  \"descendingSort\": \"відсортовано за стовпцем {columnName} у низхідному порядку\",\n  \"select\": \"Вибрати\",\n  \"selectAll\": \"Вибрати все\",\n  \"sortable\": \"сортувальний стовпець\"\n}\n","{\n  \"ascending\": \"升序\",\n  \"ascendingSort\": \"按列 {columnName} 升序排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"降序\",\n  \"descendingSort\": \"按列 {columnName} 降序排序\",\n  \"select\": \"选择\",\n  \"selectAll\": \"全选\",\n  \"sortable\": \"可排序的列\"\n}\n","{\n  \"ascending\": \"遞增\",\n  \"ascendingSort\": \"已依據「{columnName}」欄遞增排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"遞減\",\n  \"descendingSort\": \"已依據「{columnName}」欄遞減排序\",\n  \"select\": \"選取\",\n  \"selectAll\": \"全選\",\n  \"sortable\": \"可排序的欄\"\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridKeyboardDelegate} from '@react-aria/grid';\nimport {Key} from 'react';\nimport {Node} from '@react-types/shared';\nimport {TableCollection} from '@react-types/table';\n\nexport class TableKeyboardDelegate<T> extends GridKeyboardDelegate<T, TableCollection<T>> {\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) {\n        return child.key;\n      }\n\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) {\n        return;\n      }\n\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') {\n        return parent.key;\n      }\n\n      return;\n    }\n\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') {\n      return superKey;\n    }\n\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) {\n      return this.collection.columns[startItem.index].key;\n    }\n\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n\n  private findNextColumnKey(column: Node<T>) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item of row.childNodes) {\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  private findPreviousColumnKey(column: Node<T>) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findPreviousColumnKey(item)\n        : this.findNextColumnKey(item);\n    }\n\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findNextColumnKey(item)\n        : this.findPreviousColumnKey(item);\n    }\n\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n    if (key == null) {\n      return null;\n    }\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // Check each of the row header cells in this row for a match\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell'\n              ? cell.key\n              : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {isAndroid, mergeProps, useDescription} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useFocusable} from '@react-aria/focus';\nimport {useGridCell} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface AriaTableColumnHeaderProps {\n  /** An object representing the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader). Contains all the relevant information that makes up the column header. */\n  node: GridNode<unknown>,\n  /** Whether the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the column has a menu in the header, this changes interactions with the header.\n   * @private\n  */\n  hasMenu?: boolean\n}\n\nexport interface TableColumnHeaderAria {\n  /** Props for the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) element. */\n  columnHeaderProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a column header in a table.\n * @param props - Props for the column header.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the column header element.\n */\nexport function useTableColumnHeader<T>(props: AriaTableColumnHeaderProps, state: TableState<T>, ref: RefObject<FocusableElement>): TableColumnHeaderAria {\n  let {node} = props;\n  let allowsSorting = node.props.allowsSorting;\n  // the selection cell column header needs to focus the checkbox within it but the other columns should focus the cell so that focus doesn't land on the resizer\n  let {gridCellProps} = useGridCell({...props, focusMode: node.props.isSelectionCell || props.hasMenu || node.props.allowsSorting ? 'child' : 'cell'}, state, ref);\n\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n\n  let {pressProps} = usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    },\n    ref\n  });\n\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {focusableProps} = useFocusable({}, ref);\n\n  if (props.hasMenu) {\n    pressProps = {};\n  }\n\n  let ariaSort: DOMAttributes['aria-sort'] = null;\n  let isSortedColumn = state.sortDescriptor?.column === node.key;\n  let sortDirection = state.sortDescriptor?.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !isAndroid()) {\n    ariaSort = isSortedColumn ? sortDirection : 'none';\n  }\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && isAndroid()) {\n      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n    }\n  }\n\n  let descriptionProps = useDescription(sortDescription);\n\n  return {\n    columnHeaderProps: {\n      ...mergeProps(\n        gridCellProps,\n        pressProps,\n        focusableProps,\n        descriptionProps,\n        // If the table is empty, make all column headers untabbable or programatically focusable\n        state.collection.size === 0 && {tabIndex: null}\n      ),\n      role: 'columnheader',\n      id: getColumnHeaderId(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {getRowLabelledBy} from './utils';\nimport {GridRowAria, GridRowProps, useGridRow} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {TableCollection} from '@react-types/table';\nimport {TableState} from '@react-stately/table';\n\n/**\n * Provides the behavior and accessibility implementation for a row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<FocusableElement>): GridRowAria {\n  let {node} = props;\n  let {rowProps, isPressed} = useGridRow<T, TableCollection<T>, TableState<T>>(props, state, ref);\n  return {\n    rowProps: {\n      ...rowProps,\n      'aria-labelledby': getRowLabelledBy(state, node.key)\n    },\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {GridRowProps} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport interface TableHeaderRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a header row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useTableHeaderRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<Element>): TableHeaderRowAria {\n  let {node, isVirtualized} = props;\n  let rowProps = {\n    role: 'row'\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getCellId} from './utils';\nimport {GridNode} from '@react-types/grid';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridCell} from '@react-aria/grid';\n\nexport interface AriaTableCellProps {\n  /** An object representing the table cell. Contains all the relevant information that makes up the row header. */\n  node: GridNode<unknown>,\n  /** Whether the cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface TableCellAria {\n  /** Props for the table cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a table.\n * @param props - Props for the cell.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the cell element.\n */\nexport function useTableCell<T>(props: AriaTableCellProps, state: TableState<T>, ref: RefObject<FocusableElement>): TableCellAria {\n  let {gridCellProps, isPressed} = useGridCell(props, state, ref);\n\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = getCellId(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {getRowLabelledBy} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridSelectionCheckbox} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface TableSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\nexport interface TableSelectAllCheckboxAria {\n  /** Props for the select all checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a table.\n * @param props - Props for the selection checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectionCheckbox<T>(props: AriaTableSelectionCheckboxProps, state: TableState<T>): TableSelectionCheckboxAria {\n  let {key} = props;\n  const {checkboxProps} = useGridSelectionCheckbox(props, state);\n\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${getRowLabelledBy(state, key)}`\n    }\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for the select all checkbox in a table.\n * @param props - Props for the select all checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectAllCheckbox<T>(state: TableState<T>): TableSelectAllCheckboxAria {\n  let {isEmpty, isSelectAll, selectionMode} = state.selectionManager;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ChangeEvent, RefObject, useCallback, useRef} from 'react';\nimport {DOMAttributes, MoveEndEvent, MoveMoveEvent} from '@react-types/shared';\nimport {focusSafely} from '@react-aria/focus';\nimport {focusWithoutScrolling, mergeProps, useId} from '@react-aria/utils';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {TableColumnResizeState, TableState} from '@react-stately/table';\nimport {useKeyboard, useMove, usePress} from '@react-aria/interactions';\nimport {useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface TableColumnResizeAria {\n  inputProps: DOMAttributes,\n  resizerProps: DOMAttributes\n}\n\nexport interface AriaTableColumnResizeProps<T> {\n  column: GridNode<T>,\n  label: string,\n  triggerRef: RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  onMove: (e: MoveMoveEvent) => void,\n  onMoveEnd: (e: MoveEndEvent) => void\n}\n\nexport function useTableColumnResize<T>(props: AriaTableColumnResizeProps<T>, state: TableState<T>, columnState: TableColumnResizeState<T>, ref: RefObject<HTMLInputElement>): TableColumnResizeAria {\n  let {column: item, triggerRef, isDisabled} = props;\n  const stateRef = useRef<TableColumnResizeState<T>>(null);\n  stateRef.current = columnState;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let id = useId();\n\n  let {direction} = useLocale();\n  let {keyboardProps} = useKeyboard({\n    onKeyDown: (e) => {\n      if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ' || e.key === 'Tab') {\n        e.preventDefault();\n        // switch focus back to the column header on anything that ends edit mode\n        focusSafely(triggerRef.current);\n      }\n    }\n  });\n\n  const columnResizeWidthRef = useRef<number>(0);\n  const {moveProps} = useMove({\n    onMoveStart() {\n      columnResizeWidthRef.current = stateRef.current.getColumnWidth(item.key);\n      stateRef.current.onColumnResizeStart(item);\n    },\n    onMove(e) {\n      let {deltaX, deltaY, pointerType} = e;\n      if (direction === 'rtl') {\n        deltaX *= -1;\n      }\n      if (pointerType === 'keyboard') {\n        if (deltaY !== 0 && deltaX === 0) {\n          deltaX = deltaY * -1;\n        }\n        deltaX *= 10;\n      }\n      // if moving up/down only, no need to resize\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        stateRef.current.onColumnResize(item, columnResizeWidthRef.current);\n        props.onMove(e);\n      }\n    },\n    onMoveEnd(e) {\n      let {pointerType} = e;\n      columnResizeWidthRef.current = 0;\n      props.onMoveEnd(e);\n      if (pointerType === 'mouse') {\n        stateRef.current.onColumnResizeEnd(item);\n      }\n    }\n  });\n  let min = Math.floor(stateRef.current.getColumnMinWidth(item.key));\n  let max = Math.floor(stateRef.current.getColumnMaxWidth(item.key));\n  if (max === Infinity) {\n    max = Number.MAX_SAFE_INTEGER;\n  }\n  let value = Math.floor(stateRef.current.getColumnWidth(item.key));\n\n  let ariaProps = {\n    'aria-label': props.label,\n    'aria-orientation': 'horizontal' as 'horizontal',\n    'aria-labelledby': `${id} ${getColumnHeaderId(state, item.key)}`,\n    'aria-valuetext': stringFormatter.format('columnSize', {value}),\n    min,\n    max,\n    value\n  };\n\n  const focusInput = useCallback(() => {\n    if (ref.current) {\n      focusWithoutScrolling(ref.current);\n    }\n  }, [ref]);\n\n  let onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    let currentWidth = stateRef.current.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n\n    if (nextValue > currentWidth) {\n      nextValue = currentWidth + 10;\n    } else {\n      nextValue = currentWidth - 10;\n    }\n    stateRef.current.onColumnResize(item, nextValue);\n  };\n\n  let {pressProps} = usePress({\n    onPressStart: (e) => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === 'keyboard') {\n        return;\n      }\n      if (e.pointerType === 'virtual' && columnState.currentlyResizingColumn != null) {\n        stateRef.current.onColumnResizeEnd(item);\n        focusSafely(triggerRef.current);\n        return;\n      }\n      focusInput();\n    },\n    onPress: (e) => {\n      if (e.pointerType === 'touch') {\n        focusInput();\n      } else if (e.pointerType !== 'virtual') {\n        focusSafely(triggerRef.current);\n      }\n    }\n  });\n\n  return {\n    resizerProps: mergeProps(\n      keyboardProps,\n      moveProps,\n      pressProps\n    ),\n    inputProps: mergeProps(\n      {\n        id,\n        onFocus: () => {\n          // useMove calls onMoveStart for every keypress, but we want resize start to only be called when we start resize mode\n          // call instead during focus and blur\n          stateRef.current.onColumnResizeStart(item);\n          state.setKeyboardNavigationDisabled(true);\n        },\n        onBlur: () => {\n          stateRef.current.onColumnResizeEnd(item);\n          state.setKeyboardNavigationDisabled(false);\n        },\n        onChange,\n        disabled: isDisabled\n      },\n      ariaProps\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}