{"ast":null,"code":"import { useState as $6imuh$useState, useRef as $6imuh$useRef, useCallback as $6imuh$useCallback } from \"react\";\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\nfunction $458b0a5536c1a7cf$export$40bfa8c7b0832715(value, defaultValue, onChange) {\n  let [stateValue, setStateValue] = (0, $6imuh$useState)(value || defaultValue);\n  let ref = (0, $6imuh$useRef)(value !== undefined);\n  let wasControlled = ref.current;\n  let isControlled = value !== undefined; // Internal state reference for useCallback\n\n  let stateRef = (0, $6imuh$useRef)(stateValue);\n  if (wasControlled !== isControlled) console.warn(`WARN: A component changed from ${wasControlled ? \"controlled\" : \"uncontrolled\"} to ${isControlled ? \"controlled\" : \"uncontrolled\"}.`);\n  ref.current = isControlled;\n  let setValue = (0, $6imuh$useCallback)((value, ...args) => {\n    let onChangeCaller = (value, ...onChangeArgs) => {\n      if (onChange) {\n        if (!Object.is(stateRef.current, value)) onChange(value, ...onChangeArgs);\n      }\n\n      if (!isControlled) stateRef.current = value;\n    };\n\n    if (typeof value === \"function\") {\n      console.warn(\"We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320\"); // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n      // when someone using useControlledState calls setControlledState(myFunc)\n      // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n      // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n      // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n\n      let updateFunction = (oldValue, ...functionArgs) => {\n        let interceptedValue = value(isControlled ? stateRef.current : oldValue, ...functionArgs);\n        onChangeCaller(interceptedValue, ...args);\n        if (!isControlled) return interceptedValue;\n        return oldValue;\n      };\n\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) setStateValue(value);\n      onChangeCaller(value, ...args);\n    }\n  }, [isControlled, onChange]); // If a controlled component's value prop changes, we need to update stateRef\n\n  if (isControlled) stateRef.current = value;else value = stateValue;\n  return [value, setValue];\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n* Takes a value and forces it to the closest min/max if it's outside. Also forces it to the closest valid step.\n*/\n\n\nfunction $9446cca9a3875146$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {\n  let newValue = Math.min(Math.max(value, min), max);\n  return newValue;\n}\n\nfunction $9446cca9a3875146$export$cb6e0bb50bc19463(value, min, max, step) {\n  let remainder = (value - (isNaN(min) ? 0 : min)) % step;\n  let snappedValue = Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder;\n\n  if (!isNaN(min)) {\n    if (snappedValue < min) snappedValue = min;else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor((max - min) / step) * step;\n  } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor(max / step) * step; // correct floating point behavior by rounding to step precision\n\n\n  let string = step.toString();\n  let index = string.indexOf(\".\");\n  let precision = index >= 0 ? string.length - index : 0;\n\n  if (precision > 0) {\n    let pow = Math.pow(10, precision);\n    snappedValue = Math.round(snappedValue * pow) / pow;\n  }\n\n  return snappedValue;\n}\n\nfunction $9446cca9a3875146$export$b6268554fba451f(value, digits, base = 10) {\n  const pow = Math.pow(base, digits);\n  return Math.round(value * pow) / pow;\n}\n\nexport { $458b0a5536c1a7cf$export$40bfa8c7b0832715 as useControlledState, $9446cca9a3875146$export$7d15b64cf5a3a4c4 as clamp, $9446cca9a3875146$export$cb6e0bb50bc19463 as snapValueToStep, $9446cca9a3875146$export$b6268554fba451f as toFixedNumber };","map":{"version":3,"sources":["packages/@react-stately/utils/src/index.ts","packages/@react-stately/utils/src/useControlledState.ts","packages/@react-stately/utils/src/number.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useControlledState} from './useControlledState';\nexport {clamp, snapValueToStep, toFixedNumber} from './number';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useRef, useState} from 'react';\n\nexport function useControlledState<T>(\n  value: T,\n  defaultValue: T,\n  onChange: (value: T, ...args: any[]) => void\n): [T, (value: T, ...args: any[]) => void]  {\n  let [stateValue, setStateValue] = useState(value || defaultValue);\n  let ref = useRef(value !== undefined);\n  let wasControlled = ref.current;\n  let isControlled = value !== undefined;\n  // Internal state reference for useCallback\n  let stateRef = useRef(stateValue);\n  if (wasControlled !== isControlled) {\n    console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n  }\n\n  ref.current = isControlled;\n\n  let setValue = useCallback((value, ...args) => {\n    let onChangeCaller = (value, ...onChangeArgs) => {\n      if (onChange) {\n        if (!Object.is(stateRef.current, value)) {\n          onChange(value, ...onChangeArgs);\n        }\n      }\n      if (!isControlled) {\n        stateRef.current = value;\n      }\n    };\n\n    if (typeof value === 'function') {\n      console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n      // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n      // when someone using useControlledState calls setControlledState(myFunc)\n      // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n      // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n      // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n      let updateFunction = (oldValue, ...functionArgs) => {\n        let interceptedValue = value(isControlled ? stateRef.current : oldValue, ...functionArgs);\n        onChangeCaller(interceptedValue, ...args);\n        if (!isControlled) {\n          return interceptedValue;\n        }\n        return oldValue;\n      };\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) {\n        setStateValue(value);\n      }\n      onChangeCaller(value, ...args);\n    }\n  }, [isControlled, onChange]);\n\n  // If a controlled component's value prop changes, we need to update stateRef\n  if (isControlled) {\n    stateRef.current = value;\n  } else {\n    value = stateValue;\n  }\n\n  return [value, setValue];\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Takes a value and forces it to the closest min/max if it's outside. Also forces it to the closest valid step.\n */\nexport function clamp(value: number, min: number = -Infinity, max: number = Infinity): number {\n  let newValue = Math.min(Math.max(value, min), max);\n  return newValue;\n}\n\nexport function snapValueToStep(value: number, min: number, max: number, step: number): number {\n  let remainder = ((value - (isNaN(min) ? 0 : min)) % step);\n  let snappedValue = Math.abs(remainder) * 2 >= step\n    ? value + Math.sign(remainder) * (step - Math.abs(remainder))\n    : value - remainder;\n\n  if (!isNaN(min)) {\n    if (snappedValue < min) {\n      snappedValue = min;\n    } else if (!isNaN(max) && snappedValue > max) {\n      snappedValue = min + Math.floor((max - min) / step) * step;\n    }\n  } else if (!isNaN(max) && snappedValue > max) {\n    snappedValue = Math.floor(max / step) * step;\n  }\n\n  // correct floating point behavior by rounding to step precision\n  let string = step.toString();\n  let index = string.indexOf('.');\n  let precision = index >= 0 ? string.length - index : 0;\n\n  if (precision > 0) {\n    let pow = Math.pow(10, precision);\n    snappedValue = Math.round(snappedValue * pow) / pow;\n  }\n\n  return snappedValue;\n}\n\n/* Takes a value and rounds off to the number of digits. */\nexport function toFixedNumber(value: number, digits: number, base: number = 10): number {\n  const pow = Math.pow(base, digits);\n\n  return Math.round(value * pow) / pow;\n}\n"]},"metadata":{},"sourceType":"module"}