{"ast":null,"code":"import { Rect as $cVkRF$Rect } from \"@react-stately/virtualizer\";\nimport { useId as $cVkRF$useId, filterDOMProps as $cVkRF$filterDOMProps, mergeProps as $cVkRF$mergeProps, useUpdateEffect as $cVkRF$useUpdateEffect, useDescription as $cVkRF$useDescription } from \"@react-aria/utils\";\nimport { useMemo as $cVkRF$useMemo, useRef as $cVkRF$useRef } from \"react\";\nimport { useCollator as $cVkRF$useCollator, useLocale as $cVkRF$useLocale, useLocalizedStringFormatter as $cVkRF$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useSelectableCollection as $cVkRF$useSelectableCollection, useSelectableItem as $cVkRF$useSelectableItem } from \"@react-aria/selection\";\nimport { announce as $cVkRF$announce } from \"@react-aria/live-announcer\";\nimport { useInteractionModality as $cVkRF$useInteractionModality, isFocusVisible as $cVkRF$isFocusVisible } from \"@react-aria/interactions\";\nimport { getFocusableTreeWalker as $cVkRF$getFocusableTreeWalker, focusSafely as $cVkRF$focusSafely } from \"@react-aria/focus\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\n\nclass $d1c300d9c497e402$export$de9feff04fda126e {\n  isCell(node) {\n    return node.type === \"cell\";\n  }\n\n  isRow(node) {\n    return node.type === \"row\" || node.type === \"item\";\n  }\n\n  findPreviousKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  findNextKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a cell, start searching from the parent row\n\n    if (this.isCell(startItem)) key = startItem.parentKey; // Find the next item\n\n    key = this.findNextKey(key);\n\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      } // Otherwise, focus the next row\n\n\n      if (this.focusMode === \"row\") return key;\n    }\n  }\n\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus is on a cell, start searching from the parent row\n\n    if (this.isCell(startItem)) key = startItem.parentKey; // Find the previous item\n\n    key = this.findPreviousKey(key);\n\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      } // Otherwise, focus the previous row\n\n\n      if (this.focusMode === \"row\") return key;\n    }\n  }\n\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus is on a row, focus the first child cell.\n\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === \"rtl\" ? children[children.length - 1].key : children[0].key;\n    } // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n\n\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children1 = [...parent.childNodes];\n      let next = this.direction === \"rtl\" ? children1[item.index - 1] : children1[item.index + 1];\n      if (next) return next.key; // focus row only if focusMode is set to row\n\n      if (this.focusMode === \"row\") return item.parentKey;\n      return this.direction === \"rtl\" ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus is on a row, focus the last child cell.\n\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === \"rtl\" ? children[0].key : children[children.length - 1].key;\n    } // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n\n\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children1 = [...parent.childNodes];\n      let prev = this.direction === \"rtl\" ? children1[item.index + 1] : children1[item.index - 1];\n      if (prev) return prev.key; // focus row only if focusMode is set to row\n\n      if (this.focusMode === \"row\") return item.parentKey;\n      return this.direction === \"rtl\" ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key, global) {\n    let item;\n\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return; // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    } // Find the first row\n\n\n    key = this.findNextKey(); // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n\n    if (key != null && item && this.isCell(item) && global || this.focusMode === \"cell\") {\n      let item1 = this.collection.getItem(key);\n      key = [...item1.childNodes][0].key;\n    } // Otherwise, focus the row itself.\n\n\n    return key;\n  }\n\n  getLastKey(key, global) {\n    let item;\n\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return; // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    } // Find the last row\n\n\n    key = this.findPreviousKey(); // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n\n    if (key != null && item && this.isCell(item) && global || this.focusMode === \"cell\") {\n      let item1 = this.collection.getItem(key);\n      let children1 = [...item1.childNodes];\n      key = children1[children1.length - 1].key;\n    } // Otherwise, focus the row itself.\n\n\n    return key;\n  }\n\n  getItem(key) {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  getItemRect(key) {\n    var _this_layout_getLayoutInfo;\n\n    if (this.layout) return (_this_layout_getLayoutInfo = this.layout.getLayoutInfo(key)) === null || _this_layout_getLayoutInfo === void 0 ? void 0 : _this_layout_getLayoutInfo.rect;\n    let item = this.getItem(key);\n    if (item) return new (0, $cVkRF$Rect)(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n  }\n\n  getPageHeight() {\n    var _this_layout_virtualizer, _this_ref, _this_ref_current;\n\n    if (this.layout) return (_this_layout_virtualizer = this.layout.virtualizer) === null || _this_layout_virtualizer === void 0 ? void 0 : _this_layout_virtualizer.visibleRect.height;\n    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.offsetHeight;\n  }\n\n  getContentHeight() {\n    var _this_ref, _this_ref_current;\n\n    if (this.layout) return this.layout.getContentSize().height;\n    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.scrollHeight;\n  }\n\n  getKeyPageAbove(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey); // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n\n      if (nextKey != null) key = nextKey;\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey(); // If the starting key is a cell, search from its parent row.\n\n    let startItem = collection.getItem(key);\n    if (startItem.type === \"cell\") key = startItem.parentKey;\n    let hasWrapped = false;\n\n    while (key != null) {\n      let item = collection.getItem(key); // check row text value for match\n\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === \"cell\") return [...item.childNodes][0].key;\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key); // Wrap around when reaching the end of the collection\n\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n\n  constructor(options) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || \"row\";\n  }\n\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n\nconst $1af922eb41e03c8f$export$e6235c0d09b995d0 = new WeakMap();\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nvar $1dbe5ffd32adb38c$exports = {};\nvar $682989befd4f478d$exports = {};\n$682989befd4f478d$exports = {\n  \"deselectedItem\": args => `${args.item} غير المحدد`,\n  \"longPressToSelect\": `اضغط مطولًا للدخول إلى وضع التحديد.`,\n  \"select\": `تحديد`,\n  \"selectedAll\": `جميع العناصر المحددة.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `لم يتم تحديد عناصر`,\n    one: () => `${formatter.number(args.count)} عنصر محدد`,\n    other: () => `${formatter.number(args.count)} عنصر محدد`\n  })}.`,\n  \"selectedItem\": args => `${args.item} المحدد`\n};\nvar $f7fca02019afd941$exports = {};\n$f7fca02019afd941$exports = {\n  \"deselectedItem\": args => `${args.item} не е избран.`,\n  \"longPressToSelect\": `Натиснете и задръжте за да влезете в избирателен режим.`,\n  \"select\": `Изберете`,\n  \"selectedAll\": `Всички елементи са избрани.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Няма избрани елементи`,\n    one: () => `${formatter.number(args.count)} избран елемент`,\n    other: () => `${formatter.number(args.count)} избрани елементи`\n  })}.`,\n  \"selectedItem\": args => `${args.item} избран.`\n};\nvar $8f86f40be75387f1$exports = {};\n$8f86f40be75387f1$exports = {\n  \"deselectedItem\": args => `Položka ${args.item} není vybrána.`,\n  \"longPressToSelect\": `Dlouhým stisknutím přejdete do režimu výběru.`,\n  \"select\": `Vybrat`,\n  \"selectedAll\": `Vybrány všechny položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nevybrány žádné položky`,\n    one: () => `Vybrána ${formatter.number(args.count)} položka`,\n    other: () => `Vybráno ${formatter.number(args.count)} položek`\n  })}.`,\n  \"selectedItem\": args => `Vybrána položka ${args.item}.`\n};\nvar $db24ba43c8d652ee$exports = {};\n$db24ba43c8d652ee$exports = {\n  \"deselectedItem\": args => `${args.item} ikke valgt.`,\n  \"longPressToSelect\": `Lav et langt tryk for at aktivere valgtilstand.`,\n  \"select\": `Vælg`,\n  \"selectedAll\": `Alle elementer valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer valgt`,\n    one: () => `${formatter.number(args.count)} element valgt`,\n    other: () => `${formatter.number(args.count)} elementer valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valgt.`\n};\nvar $f8f1e72c8b5447d6$exports = {};\n$f8f1e72c8b5447d6$exports = {\n  \"deselectedItem\": args => `${args.item} nicht ausgewählt.`,\n  \"longPressToSelect\": `Gedrückt halten, um Auswahlmodus zu öffnen.`,\n  \"select\": `Auswählen`,\n  \"selectedAll\": `Alle Elemente ausgewählt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Keine Elemente ausgewählt`,\n    one: () => `${formatter.number(args.count)} Element ausgewählt`,\n    other: () => `${formatter.number(args.count)} Elemente ausgewählt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} ausgewählt.`\n};\nvar $9a73ed2983c3ab0b$exports = {};\n$9a73ed2983c3ab0b$exports = {\n  \"deselectedItem\": args => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,\n  \"longPressToSelect\": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,\n  \"select\": `Επιλογή`,\n  \"selectedAll\": `Επιλέχθηκαν όλα τα στοιχεία.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Δεν επιλέχθηκαν στοιχεία`,\n    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,\n    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`\n  })}.`,\n  \"selectedItem\": args => `Επιλέχθηκε το στοιχείο ${args.item}.`\n};\nvar $583de0b3587601b9$exports = {};\n$583de0b3587601b9$exports = {\n  \"deselectedItem\": args => `${args.item} not selected.`,\n  \"select\": `Select`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `No items selected`,\n    one: () => `${formatter.number(args.count)} item selected`,\n    other: () => `${formatter.number(args.count)} items selected`\n  })}.`,\n  \"selectedAll\": `All items selected.`,\n  \"selectedItem\": args => `${args.item} selected.`,\n  \"longPressToSelect\": `Long press to enter selection mode.`\n};\nvar $147159c978043442$exports = {};\n$147159c978043442$exports = {\n  \"deselectedItem\": args => `${args.item} no seleccionado.`,\n  \"longPressToSelect\": `Mantenga pulsado para abrir el modo de selección.`,\n  \"select\": `Seleccionar`,\n  \"selectedAll\": `Todos los elementos seleccionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ningún elemento seleccionado`,\n    one: () => `${formatter.number(args.count)} elemento seleccionado`,\n    other: () => `${formatter.number(args.count)} elementos seleccionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seleccionado.`\n};\nvar $5cbb62c8a19173ac$exports = {};\n$5cbb62c8a19173ac$exports = {\n  \"deselectedItem\": args => `${args.item} pole valitud.`,\n  \"longPressToSelect\": `Valikurežiimi sisenemiseks vajutage pikalt.`,\n  \"select\": `Vali`,\n  \"selectedAll\": `Kõik üksused valitud.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Üksusi pole valitud`,\n    one: () => `${formatter.number(args.count)} üksus valitud`,\n    other: () => `${formatter.number(args.count)} üksust valitud`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valitud.`\n};\nvar $a33d71dc804cc59e$exports = {};\n$a33d71dc804cc59e$exports = {\n  \"deselectedItem\": args => `Kohdetta ${args.item} ei valittu.`,\n  \"longPressToSelect\": `Siirry valintatilaan painamalla pitkään.`,\n  \"select\": `Valitse`,\n  \"selectedAll\": `Kaikki kohteet valittu.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ei yhtään kohdetta valittu`,\n    one: () => `${formatter.number(args.count)} kohde valittu`,\n    other: () => `${formatter.number(args.count)} kohdetta valittu`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valittu.`\n};\nvar $92d800447793d084$exports = {};\n$92d800447793d084$exports = {\n  \"deselectedItem\": args => `${args.item} non sélectionné.`,\n  \"longPressToSelect\": `Appuyez de manière prolongée pour passer en mode de sélection.`,\n  \"select\": `Sélectionner`,\n  \"selectedAll\": `Tous les éléments sélectionnés.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Aucun élément sélectionné`,\n    one: () => `${formatter.number(args.count)} élément sélectionné`,\n    other: () => `${formatter.number(args.count)} éléments sélectionnés`\n  })}.`,\n  \"selectedItem\": args => `${args.item} sélectionné.`\n};\nvar $fe732cdb32124ea8$exports = {};\n$fe732cdb32124ea8$exports = {\n  \"deselectedItem\": args => `${args.item} לא נבחר.`,\n  \"longPressToSelect\": `הקשה ארוכה לכניסה למצב בחירה.`,\n  \"select\": `בחר`,\n  \"selectedAll\": `כל הפריטים נבחרו.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `לא נבחרו פריטים`,\n    one: () => `פריט ${formatter.number(args.count)} נבחר`,\n    other: () => `${formatter.number(args.count)} פריטים נבחרו`\n  })}.`,\n  \"selectedItem\": args => `${args.item} נבחר.`\n};\nvar $e41234e934efb4f5$exports = {};\n$e41234e934efb4f5$exports = {\n  \"deselectedItem\": args => `Stavka ${args.item} nije odabrana.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u način odabira.`,\n  \"select\": `Odaberite`,\n  \"selectedAll\": `Odabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije odabrana nijedna stavka`,\n    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Odabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `Stavka ${args.item} je odabrana.`\n};\nvar $1b0393182473bf9e$exports = {};\n$1b0393182473bf9e$exports = {\n  \"deselectedItem\": args => `${args.item} nincs kijelölve.`,\n  \"longPressToSelect\": `Nyomja hosszan a kijelöléshez.`,\n  \"select\": `Kijelölés`,\n  \"selectedAll\": `Az összes elem kijelölve.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Egy elem sincs kijelölve`,\n    one: () => `${formatter.number(args.count)} elem kijelölve`,\n    other: () => `${formatter.number(args.count)} elem kijelölve`\n  })}.`,\n  \"selectedItem\": args => `${args.item} kijelölve.`\n};\nvar $2eed782c1c110ce7$exports = {};\n$2eed782c1c110ce7$exports = {\n  \"deselectedItem\": args => `${args.item} non selezionato.`,\n  \"longPressToSelect\": `Premi a lungo per passare alla modalità di selezione.`,\n  \"select\": `Seleziona`,\n  \"selectedAll\": `Tutti gli elementi selezionati.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nessun elemento selezionato`,\n    one: () => `${formatter.number(args.count)} elemento selezionato`,\n    other: () => `${formatter.number(args.count)} elementi selezionati`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selezionato.`\n};\nvar $8b5d459f86e9b23c$exports = {};\n$8b5d459f86e9b23c$exports = {\n  \"deselectedItem\": args => `${args.item} が選択されていません。`,\n  \"longPressToSelect\": `長押しして選択モードを開きます。`,\n  \"select\": `選択`,\n  \"selectedAll\": `すべての項目を選択しました。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `項目が選択されていません`,\n    one: () => `${formatter.number(args.count)} 項目を選択しました`,\n    other: () => `${formatter.number(args.count)} 項目を選択しました`\n  })}。`,\n  \"selectedItem\": args => `${args.item} を選択しました。`\n};\nvar $1949c3ad17295fd4$exports = {};\n$1949c3ad17295fd4$exports = {\n  \"deselectedItem\": args => `${args.item}이(가) 선택되지 않았습니다.`,\n  \"longPressToSelect\": `선택 모드로 들어가려면 길게 누르십시오.`,\n  \"select\": `선택`,\n  \"selectedAll\": `모든 항목이 선택되었습니다.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `선택된 항목이 없습니다`,\n    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,\n    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`\n  })}.`,\n  \"selectedItem\": args => `${args.item}이(가) 선택되었습니다.`\n};\nvar $f5e3df4dc8aa7b54$exports = {};\n$f5e3df4dc8aa7b54$exports = {\n  \"deselectedItem\": args => `${args.item} nepasirinkta.`,\n  \"longPressToSelect\": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,\n  \"select\": `Pasirinkti`,\n  \"selectedAll\": `Pasirinkti visi elementai.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nepasirinktas nė vienas elementas`,\n    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,\n    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Pasirinkta: ${args.item}.`\n};\nvar $9dd86690a5c2b2c5$exports = {};\n$9dd86690a5c2b2c5$exports = {\n  \"deselectedItem\": args => `Vienums ${args.item} nav atlasīts.`,\n  \"longPressToSelect\": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,\n  \"select\": `Atlasīt`,\n  \"selectedAll\": `Atlasīti visi vienumi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nav atlasīts neviens vienums`,\n    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,\n    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Atlasīts vienums ${args.item}.`\n};\nvar $843964c3bf9a7d24$exports = {};\n$843964c3bf9a7d24$exports = {\n  \"deselectedItem\": args => `${args.item} er ikke valgt.`,\n  \"longPressToSelect\": `Bruk et langt trykk for å gå inn i valgmodus.`,\n  \"select\": `Velg`,\n  \"selectedAll\": `Alle elementer er valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer er valgt`,\n    one: () => `${formatter.number(args.count)} element er valgt`,\n    other: () => `${formatter.number(args.count)} elementer er valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} er valgt.`\n};\nvar $73f50e845f9ef3b4$exports = {};\n$73f50e845f9ef3b4$exports = {\n  \"deselectedItem\": args => `${args.item} niet geselecteerd.`,\n  \"longPressToSelect\": `Druk lang om de selectiemodus te openen.`,\n  \"select\": `Selecteren`,\n  \"selectedAll\": `Alle items geselecteerd.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Geen items geselecteerd`,\n    one: () => `${formatter.number(args.count)} item geselecteerd`,\n    other: () => `${formatter.number(args.count)} items geselecteerd`\n  })}.`,\n  \"selectedItem\": args => `${args.item} geselecteerd.`\n};\nvar $87f92a7e077514b2$exports = {};\n$87f92a7e077514b2$exports = {\n  \"deselectedItem\": args => `Nie zaznaczono ${args.item}.`,\n  \"longPressToSelect\": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,\n  \"select\": `Zaznacz`,\n  \"selectedAll\": `Wszystkie zaznaczone elementy.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nie zaznaczono żadnych elementów`,\n    one: () => `${formatter.number(args.count)} zaznaczony element`,\n    other: () => `${formatter.number(args.count)} zaznaczonych elementów`\n  })}.`,\n  \"selectedItem\": args => `Zaznaczono ${args.item}.`\n};\nvar $c28c98d58ee9ff6f$exports = {};\n$c28c98d58ee9ff6f$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Mantenha pressionado para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $b6b1503b17b2254d$exports = {};\n$b6b1503b17b2254d$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Prima continuamente para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $8bdaeb71e50c3e1a$exports = {};\n$8bdaeb71e50c3e1a$exports = {\n  \"deselectedItem\": args => `${args.item} neselectat.`,\n  \"longPressToSelect\": `Apăsați lung pentru a intra în modul de selectare.`,\n  \"select\": `Selectare`,\n  \"selectedAll\": `Toate elementele selectate.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Niciun element selectat`,\n    one: () => `${formatter.number(args.count)} element selectat`,\n    other: () => `${formatter.number(args.count)} elemente selectate`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selectat.`\n};\nvar $ec2b852dd7c3d1f2$exports = {};\n$ec2b852dd7c3d1f2$exports = {\n  \"deselectedItem\": args => `${args.item} не выбрано.`,\n  \"longPressToSelect\": `Нажмите и удерживайте для входа в режим выбора.`,\n  \"select\": `Выбрать`,\n  \"selectedAll\": `Выбраны все элементы.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Нет выбранных элементов`,\n    one: () => `${formatter.number(args.count)} элемент выбран`,\n    other: () => `${formatter.number(args.count)} элементов выбрано`\n  })}.`,\n  \"selectedItem\": args => `${args.item} выбрано.`\n};\nvar $79e6d900d6a4f82d$exports = {};\n$79e6d900d6a4f82d$exports = {\n  \"deselectedItem\": args => `Nevybraté položky: ${args.item}.`,\n  \"longPressToSelect\": `Dlhším stlačením prejdite do režimu výberu.`,\n  \"select\": `Vybrať`,\n  \"selectedAll\": `Všetky vybraté položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Žiadne vybraté položky`,\n    one: () => `${formatter.number(args.count)} vybratá položka`,\n    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Vybraté položky: ${args.item}.`\n};\nvar $f4c1f0d5d4d03d80$exports = {};\n$f4c1f0d5d4d03d80$exports = {\n  \"deselectedItem\": args => `Element ${args.item} ni izbran.`,\n  \"longPressToSelect\": `Za izbirni način pritisnite in dlje časa držite.`,\n  \"select\": `Izberite`,\n  \"selectedAll\": `Vsi elementi so izbrani.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Noben element ni izbran`,\n    one: () => `${formatter.number(args.count)} element je izbran`,\n    other: () => `${formatter.number(args.count)} elementov je izbranih`\n  })}.`,\n  \"selectedItem\": args => `Element ${args.item} je izbran.`\n};\nvar $46252cd87269b10b$exports = {};\n$46252cd87269b10b$exports = {\n  \"deselectedItem\": args => `${args.item} nije izabrano.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u režim biranja.`,\n  \"select\": `Izaberite`,\n  \"selectedAll\": `Izabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije izabrana nijedna stavka`,\n    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Izabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `${args.item} je izabrano.`\n};\nvar $d4d5d8dab362555c$exports = {};\n$d4d5d8dab362555c$exports = {\n  \"deselectedItem\": args => `${args.item} ej markerat.`,\n  \"longPressToSelect\": `Tryck länge när du vill öppna väljarläge.`,\n  \"select\": `Markera`,\n  \"selectedAll\": `Alla markerade objekt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Inga markerade objekt`,\n    one: () => `${formatter.number(args.count)} markerat objekt`,\n    other: () => `${formatter.number(args.count)} markerade objekt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} markerat.`\n};\nvar $3d55d1f97c377e83$exports = {};\n$3d55d1f97c377e83$exports = {\n  \"deselectedItem\": args => `${args.item} seçilmedi.`,\n  \"longPressToSelect\": `Seçim moduna girmek için uzun basın.`,\n  \"select\": `Seç`,\n  \"selectedAll\": `Tüm ögeler seçildi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Hiçbir öge seçilmedi`,\n    one: () => `${formatter.number(args.count)} öge seçildi`,\n    other: () => `${formatter.number(args.count)} öge seçildi`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seçildi.`\n};\nvar $5368512f1c703a3f$exports = {};\n$5368512f1c703a3f$exports = {\n  \"deselectedItem\": args => `${args.item} не вибрано.`,\n  \"longPressToSelect\": `Виконайте довге натиснення, щоб перейти в режим вибору.`,\n  \"select\": `Вибрати`,\n  \"selectedAll\": `Усі елементи вибрано.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Жодних елементів не вибрано`,\n    one: () => `${formatter.number(args.count)} елемент вибрано`,\n    other: () => `Вибрано елементів: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `${args.item} вибрано.`\n};\nvar $f1316b1074463583$exports = {};\n$f1316b1074463583$exports = {\n  \"deselectedItem\": args => `未选择 ${args.item}。`,\n  \"longPressToSelect\": `长按以进入选择模式。`,\n  \"select\": `选择`,\n  \"selectedAll\": `已选择所有项目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未选择项目`,\n    one: () => `已选择 ${formatter.number(args.count)} 个项目`,\n    other: () => `已选择 ${formatter.number(args.count)} 个项目`\n  })}。`,\n  \"selectedItem\": args => `已选择 ${args.item}。`\n};\nvar $7e60654723031b6f$exports = {};\n$7e60654723031b6f$exports = {\n  \"deselectedItem\": args => `未選取「${args.item}」。`,\n  \"longPressToSelect\": `長按以進入選擇模式。`,\n  \"select\": `選取`,\n  \"selectedAll\": `已選取所有項目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未選取任何項目`,\n    one: () => `已選取 ${formatter.number(args.count)} 個項目`,\n    other: () => `已選取 ${formatter.number(args.count)} 個項目`\n  })}。`,\n  \"selectedItem\": args => `已選取「${args.item}」。`\n};\n$1dbe5ffd32adb38c$exports = {\n  \"ar-AE\": $682989befd4f478d$exports,\n  \"bg-BG\": $f7fca02019afd941$exports,\n  \"cs-CZ\": $8f86f40be75387f1$exports,\n  \"da-DK\": $db24ba43c8d652ee$exports,\n  \"de-DE\": $f8f1e72c8b5447d6$exports,\n  \"el-GR\": $9a73ed2983c3ab0b$exports,\n  \"en-US\": $583de0b3587601b9$exports,\n  \"es-ES\": $147159c978043442$exports,\n  \"et-EE\": $5cbb62c8a19173ac$exports,\n  \"fi-FI\": $a33d71dc804cc59e$exports,\n  \"fr-FR\": $92d800447793d084$exports,\n  \"he-IL\": $fe732cdb32124ea8$exports,\n  \"hr-HR\": $e41234e934efb4f5$exports,\n  \"hu-HU\": $1b0393182473bf9e$exports,\n  \"it-IT\": $2eed782c1c110ce7$exports,\n  \"ja-JP\": $8b5d459f86e9b23c$exports,\n  \"ko-KR\": $1949c3ad17295fd4$exports,\n  \"lt-LT\": $f5e3df4dc8aa7b54$exports,\n  \"lv-LV\": $9dd86690a5c2b2c5$exports,\n  \"nb-NO\": $843964c3bf9a7d24$exports,\n  \"nl-NL\": $73f50e845f9ef3b4$exports,\n  \"pl-PL\": $87f92a7e077514b2$exports,\n  \"pt-BR\": $c28c98d58ee9ff6f$exports,\n  \"pt-PT\": $b6b1503b17b2254d$exports,\n  \"ro-RO\": $8bdaeb71e50c3e1a$exports,\n  \"ru-RU\": $ec2b852dd7c3d1f2$exports,\n  \"sk-SK\": $79e6d900d6a4f82d$exports,\n  \"sl-SI\": $f4c1f0d5d4d03d80$exports,\n  \"sr-SP\": $46252cd87269b10b$exports,\n  \"sv-SE\": $d4d5d8dab362555c$exports,\n  \"tr-TR\": $3d55d1f97c377e83$exports,\n  \"uk-UA\": $5368512f1c703a3f$exports,\n  \"zh-CN\": $f1316b1074463583$exports,\n  \"zh-TW\": $7e60654723031b6f$exports\n};\n\nfunction $92599c3fd427b763$export$137e594ef3218a10(props, state) {\n  let {\n    getRowText = key => {\n      var _state_collection_getItem;\n\n      return (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;\n    }\n  } = props;\n  let stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports))); // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = (0, $cVkRF$useRef)(selection);\n  (0, $cVkRF$useUpdateEffect)(() => {\n    var _lastSelection_current;\n\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n\n    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);\n    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection); // If adding or removing a single row from the selection, announce the name of that item.\n\n    let isReplace = state.selectionManager.selectionBehavior === \"replace\";\n    let messages = [];\n\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(stringFormatter.format(\"selectedItem\", {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(stringFormatter.format(\"selectedItem\", {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(stringFormatter.format(\"deselectedItem\", {\n          item: removedText\n        }));\n      }\n    } // Announce how many items are selected, except when selecting the first item.\n\n\n    if (state.selectionManager.selectionMode === \"multiple\") {\n      if (messages.length === 0 || selection === \"all\" || selection.size > 1 || lastSelection.current === \"all\" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1) messages.push(selection === \"all\" ? stringFormatter.format(\"selectedAll\") : stringFormatter.format(\"selectedCount\", {\n        count: selection.size\n      }));\n    }\n\n    if (messages.length > 0) (0, $cVkRF$announce)(messages.join(\" \"));\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction $92599c3fd427b763$var$diffSelection(a, b) {\n  let res = new Set();\n  if (a === \"all\" || b === \"all\") return res;\n\n  for (let key of a.keys()) if (!b.has(key)) res.add(key);\n\n  return res;\n}\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n\nfunction $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {\n  let stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports)));\n  let modality = (0, $cVkRF$useInteractionModality)(); // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n\n  let shouldLongPress = (modality === \"pointer\" || modality === \"virtual\" || modality == null) && typeof window !== \"undefined\" && \"ontouchstart\" in window;\n  let interactionDescription = (0, $cVkRF$useMemo)(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n    let message = undefined;\n    if (shouldLongPress) message = stringFormatter.format(\"longPressToSelect\");\n    return selectionBehavior === \"replace\" && selectionMode !== \"none\" && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n  let descriptionProps = (0, $cVkRF$useDescription)(interactionDescription);\n  return descriptionProps;\n}\n\nfunction $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {\n  let {\n    isVirtualized: isVirtualized,\n    keyboardDelegate: keyboardDelegate,\n    focusMode: focusMode,\n    scrollRef: scrollRef,\n    getRowText: getRowText,\n    onRowAction: onRowAction,\n    onCellAction: onCellAction\n  } = props;\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) console.warn(\"An aria-label or aria-labelledby prop is required for accessibility.\"); // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n\n  let collator = (0, $cVkRF$useCollator)({\n    usage: \"search\",\n    sensitivity: \"base\"\n  });\n  let {\n    direction: direction\n  } = (0, $cVkRF$useLocale)();\n  let delegate = (0, $cVkRF$useMemo)(() => keyboardDelegate || new (0, $d1c300d9c497e402$export$de9feff04fda126e)({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref,\n    direction: direction,\n    collator: collator,\n    focusMode: focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n  let {\n    collectionProps: collectionProps\n  } = (0, $cVkRF$useSelectableCollection)({\n    ref: ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized: isVirtualized,\n    scrollRef: scrollRef\n  });\n  let id = (0, $cVkRF$useId)(props.id);\n  (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).set(state, {\n    keyboardDelegate: delegate,\n    actions: {\n      onRowAction: onRowAction,\n      onCellAction: onCellAction\n    }\n  });\n  let descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n  let domProps = (0, $cVkRF$filterDOMProps)(props, {\n    labelable: true\n  });\n  let gridProps = (0, $cVkRF$mergeProps)(domProps, {\n    role: \"grid\",\n    id: id,\n    \"aria-multiselectable\": state.selectionManager.selectionMode === \"multiple\" ? \"true\" : undefined\n  }, state.isKeyboardNavigationDisabled ? {} : collectionProps, descriptionProps);\n\n  if (isVirtualized) {\n    gridProps[\"aria-rowcount\"] = state.collection.size;\n    gridProps[\"aria-colcount\"] = state.collection.columnCount;\n  }\n\n  (0, $92599c3fd427b763$export$137e594ef3218a10)({\n    getRowText: getRowText\n  }, state);\n  return {\n    gridProps: gridProps\n  };\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n\nfunction $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {\n  return {\n    rowGroupProps: {\n      role: \"rowgroup\"\n    }\n  };\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    actions: {\n      onRowAction: onRowAction\n    }\n  } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = (0, $cVkRF$useSelectableItem)({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n  let isSelected = state.selectionManager.isSelected(node.key);\n  let rowProps = {\n    role: \"row\",\n    \"aria-selected\": state.selectionManager.selectionMode !== \"none\" ? isSelected : undefined,\n    ...itemProps\n  };\n  if (isVirtualized) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n\n  return {\n    rowProps: rowProps,\n    isPressed: isPressed\n  };\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n\nfunction $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    focusMode = \"child\",\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    direction: direction\n  } = (0, $cVkRF$useLocale)();\n  let {\n    keyboardDelegate: keyboardDelegate,\n    actions: {\n      onCellAction: onCellAction\n    }\n  } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state); // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n\n  let focus = () => {\n    let treeWalker = (0, $cVkRF$getFocusableTreeWalker)(ref.current);\n\n    if (focusMode === \"child\") {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) return;\n      let focusable = state.selectionManager.childFocusStrategy === \"last\" ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();\n\n      if (focusable) {\n        (0, $cVkRF$focusSafely)(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) (0, $cVkRF$focusSafely)(ref.current);\n  };\n\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = (0, $cVkRF$useSelectableItem)({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    focus: focus,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let onKeyDownCapture = e => {\n    if (!e.currentTarget.contains(e.target) || state.isKeyboardNavigationDisabled) return;\n    let walker = (0, $cVkRF$getFocusableTreeWalker)(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case \"ArrowLeft\":\n        {\n          // Find the next focusable element within the cell.\n          let focusable = direction === \"rtl\" ? walker.nextNode() : walker.previousNode(); // Don't focus the cell itself if focusMode is \"child\"\n\n          if (focusMode === \"child\" && focusable === ref.current) focusable = null;\n\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            (0, $cVkRF$focusSafely)(focusable);\n          } else {\n            // If there is no next focusable child, then move to the next cell to the left of this one.\n            // This will be handled by useSelectableCollection. However, if there is no cell to the left\n            // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n            // same as this one. In that case we need to handle focusing either the cell or the first/last\n            // child, depending on the focus mode.\n            let prev = keyboardDelegate.getKeyLeftOf(node.key);\n            if (prev !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === \"cell\" && direction === \"rtl\") (0, $cVkRF$focusSafely)(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === \"rtl\" ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);\n              if (focusable) (0, $cVkRF$focusSafely)(focusable);\n            }\n          }\n\n          break;\n        }\n\n      case \"ArrowRight\":\n        {\n          let focusable1 = direction === \"rtl\" ? walker.previousNode() : walker.nextNode();\n          if (focusMode === \"child\" && focusable1 === ref.current) focusable1 = null;\n\n          if (focusable1) {\n            e.preventDefault();\n            e.stopPropagation();\n            (0, $cVkRF$focusSafely)(focusable1);\n          } else {\n            let next = keyboardDelegate.getKeyRightOf(node.key);\n            if (next !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === \"cell\" && direction === \"ltr\") (0, $cVkRF$focusSafely)(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable1 = direction === \"rtl\" ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();\n              if (focusable1) (0, $cVkRF$focusSafely)(focusable1);\n            }\n          }\n\n          break;\n        }\n\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));\n        }\n\n        break;\n    }\n  }; // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n\n\n  let onFocus = e => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!(0, $cVkRF$isFocusVisible)()) state.selectionManager.setFocusedKey(node.key);\n      return;\n    } // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n\n\n    requestAnimationFrame(() => {\n      if (focusMode === \"child\" && document.activeElement === ref.current) focus();\n    });\n  };\n\n  let gridCellProps = (0, $cVkRF$mergeProps)(itemProps, {\n    role: \"gridcell\",\n    onKeyDownCapture: onKeyDownCapture,\n    onFocus: onFocus\n  });\n\n  var _node_colIndex;\n\n  if (isVirtualized) gridCellProps[\"aria-colindex\"] = ((_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index) + 1; // aria-colindex is 1-based\n\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\nfunction $ab90dcbc1b5466d0$var$last(walker) {\n  let next;\n  let last;\n\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n\n  return next;\n}\n\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  let {\n    key: key\n  } = props;\n  let manager = state.selectionManager;\n  let checkboxId = (0, $cVkRF$useId)();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports)));\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      \"aria-label\": stringFormatter.format(\"select\"),\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      onChange: onChange\n    }\n  };\n}\n\nexport { $d1c300d9c497e402$export$de9feff04fda126e as GridKeyboardDelegate, $83c6e2eafa584c67$export$f6b86a04e5d66d90 as useGrid, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf as useGridRowGroup, $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c as useGridCell, $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2 as useHighlightSelectionDescription, $92599c3fd427b763$export$137e594ef3218a10 as useGridSelectionAnnouncement };","map":{"version":3,"sources":["packages/@react-aria/grid/src/index.ts","packages/@react-aria/grid/src/GridKeyboardDelegate.ts","packages/@react-aria/grid/src/useGrid.ts","packages/@react-aria/grid/src/utils.ts","packages/@react-aria/grid/src/useGridSelectionAnnouncement.ts","packages/@react-aria/grid/intl/*.js","packages/@react-aria/grid/intl/ar-AE.json","packages/@react-aria/grid/intl/bg-BG.json","packages/@react-aria/grid/intl/cs-CZ.json","packages/@react-aria/grid/intl/da-DK.json","packages/@react-aria/grid/intl/de-DE.json","packages/@react-aria/grid/intl/el-GR.json","packages/@react-aria/grid/intl/en-US.json","packages/@react-aria/grid/intl/es-ES.json","packages/@react-aria/grid/intl/et-EE.json","packages/@react-aria/grid/intl/fi-FI.json","packages/@react-aria/grid/intl/fr-FR.json","packages/@react-aria/grid/intl/he-IL.json","packages/@react-aria/grid/intl/hr-HR.json","packages/@react-aria/grid/intl/hu-HU.json","packages/@react-aria/grid/intl/it-IT.json","packages/@react-aria/grid/intl/ja-JP.json","packages/@react-aria/grid/intl/ko-KR.json","packages/@react-aria/grid/intl/lt-LT.json","packages/@react-aria/grid/intl/lv-LV.json","packages/@react-aria/grid/intl/nb-NO.json","packages/@react-aria/grid/intl/nl-NL.json","packages/@react-aria/grid/intl/pl-PL.json","packages/@react-aria/grid/intl/pt-BR.json","packages/@react-aria/grid/intl/pt-PT.json","packages/@react-aria/grid/intl/ro-RO.json","packages/@react-aria/grid/intl/ru-RU.json","packages/@react-aria/grid/intl/sk-SK.json","packages/@react-aria/grid/intl/sl-SI.json","packages/@react-aria/grid/intl/sr-SP.json","packages/@react-aria/grid/intl/sv-SE.json","packages/@react-aria/grid/intl/tr-TR.json","packages/@react-aria/grid/intl/uk-UA.json","packages/@react-aria/grid/intl/zh-CN.json","packages/@react-aria/grid/intl/zh-TW.json","packages/@react-aria/grid/src/useHighlightSelectionDescription.ts","packages/@react-aria/grid/src/useGridRowGroup.ts","packages/@react-aria/grid/src/useGridRow.ts","packages/@react-aria/grid/src/useGridCell.ts","packages/@react-aria/grid/src/useGridSelectionCheckbox.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;ACAA;;AAAA;;;;;;;;;;AAUC;;;AAiBM,MAAM,yCAAN,CAAM;AAmBD,EAAA,MAAA,CAAO,IAAP,EAAsB;AAC9B,WAAO,IAAA,CAAK,IAAL,KAAc,MAArB;AACF;;AAEU,EAAA,KAAA,CAAM,IAAN,EAAqB;AAC7B,WAAO,IAAA,CAAK,IAAL,KAAc,KAAd,IAAuB,IAAA,CAAK,IAAL,KAAc,MAA5C;AACF;;AAEU,EAAA,eAAA,CAAgB,OAAhB,EAA+B,IAA/B,EAAkE;AAC1E,QAAI,GAAA,GAAM,OAAA,IAAW,IAAX,GACN,KAAK,UAAL,CAAgB,YAAhB,CAA6B,OAA7B,CADM,GAEN,KAAK,UAAL,CAAgB,UAAhB,EAFJ;;AAIA,WAAO,GAAA,IAAO,IAAd,EAAoB;AAClB,UAAI,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,UAAI,CAAC,IAAD,IAAS,IAAA,CAAK,IAAL,CAAb,EACE,OAAO,GAAP;AAGF,MAAA,GAAA,GAAM,KAAK,UAAL,CAAgB,YAAhB,CAA6B,GAA7B,CAAN;AACF;AACF;;AAEU,EAAA,WAAA,CAAY,OAAZ,EAA2B,IAA3B,EAA8D;AACtE,QAAI,GAAA,GAAM,OAAA,IAAW,IAAX,GACN,KAAK,UAAL,CAAgB,WAAhB,CAA4B,OAA5B,CADM,GAEN,KAAK,UAAL,CAAgB,WAAhB,EAFJ;;AAIA,WAAO,GAAA,IAAO,IAAd,EAAoB;AAClB,UAAI,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,UAAI,CAAC,IAAD,IAAS,IAAA,CAAK,IAAL,CAAb,EACE,OAAO,GAAP;AAGF,MAAA,GAAA,GAAM,KAAK,UAAL,CAAgB,WAAhB,CAA4B,GAA5B,CAAN;AACF;AACF;;AAEA,EAAA,WAAA,CAAY,GAAZ,EAAsB;AACpB,QAAI,SAAA,GAAY,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAhB;AACA,QAAI,CAAC,SAAL,EACE,OAHkB,CAMpB;;AACA,QAAI,KAAK,MAAL,CAAY,SAAZ,CAAJ,EACE,GAAA,GAAM,SAAA,CAAU,SAAhB,CARkB,CAWpB;;AACA,IAAA,GAAA,GAAM,KAAK,WAAL,CAAiB,GAAjB,CAAN;;AACA,QAAI,GAAA,IAAO,IAAX,EAAiB;AACf;AACA,UAAI,KAAK,MAAL,CAAY,SAAZ,CAAJ,EAA4B;AAC1B,YAAI,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,eAAO,C,GAAI,IAAA,CAAK,UAAT,EAAqB,SAAA,CAAU,KAA/B,EAAsC,GAA7C;AACD,OALc,CAOf;;;AACA,UAAI,KAAK,SAAL,KAAmB,KAAvB,EACE,OAAO,GAAP;AAEH;AACH;;AAEA,EAAA,WAAA,CAAY,GAAZ,EAAsB;AACpB,QAAI,SAAA,GAAY,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAhB;AACA,QAAI,CAAC,SAAL,EACE,OAHkB,CAMpB;;AACA,QAAI,KAAK,MAAL,CAAY,SAAZ,CAAJ,EACE,GAAA,GAAM,SAAA,CAAU,SAAhB,CARkB,CAWpB;;AACA,IAAA,GAAA,GAAM,KAAK,eAAL,CAAqB,GAArB,CAAN;;AACA,QAAI,GAAA,IAAO,IAAX,EAAiB;AACf;AACA,UAAI,KAAK,MAAL,CAAY,SAAZ,CAAJ,EAA4B;AAC1B,YAAI,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,eAAO,C,GAAI,IAAA,CAAK,UAAT,EAAqB,SAAA,CAAU,KAA/B,EAAsC,GAA7C;AACD,OALc,CAOf;;;AACA,UAAI,KAAK,SAAL,KAAmB,KAAvB,EACE,OAAO,GAAP;AAEH;AACH;;AAEA,EAAA,aAAA,CAAc,GAAd,EAAwB;AACtB,QAAI,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,QAAI,CAAC,IAAL,EACE,OAHoB,CAMtB;;AACA,QAAI,KAAK,KAAL,CAAW,IAAX,CAAJ,EAAsB;AACpB,UAAI,QAAA,GAAW,C,GAAI,IAAA,CAAK,UAAT,CAAf;AACA,aAAO,KAAK,SAAL,KAAmB,KAAnB,GACH,QAAQ,CAAC,QAAA,CAAS,MAAT,GAAkB,CAAnB,CAAR,CAA8B,GAD3B,GAEH,QAAQ,CAAC,CAAD,CAAR,CAAY,GAFhB;AAGD,KAZqB,CActB;AACA;;;AACA,QAAI,KAAK,MAAL,CAAY,IAAZ,CAAJ,EAAuB;AACrB,UAAI,MAAA,GAAS,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAA,CAAK,SAA7B,CAAb;AACA,UAAI,SAAA,GAAW,C,GAAI,MAAA,CAAO,UAAX,CAAf;AACA,UAAI,IAAA,GAAO,KAAK,SAAL,KAAmB,KAAnB,GACP,SAAQ,CAAC,IAAA,CAAK,KAAL,GAAa,CAAd,CADD,GAEP,SAAQ,CAAC,IAAA,CAAK,KAAL,GAAa,CAAd,CAFZ;AAIA,UAAI,IAAJ,EACE,OAAO,IAAA,CAAK,GAAZ,CARmB,CAWrB;;AACA,UAAI,KAAK,SAAL,KAAmB,KAAvB,EACE,OAAO,IAAA,CAAK,SAAZ;AAGF,aAAO,KAAK,SAAL,KAAmB,KAAnB,GAA2B,KAAK,WAAL,CAAiB,GAAjB,CAA3B,GAAmD,KAAK,UAAL,CAAgB,GAAhB,CAA1D;AACD;AACH;;AAEA,EAAA,YAAA,CAAa,GAAb,EAAuB;AACrB,QAAI,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,QAAI,CAAC,IAAL,EACE,OAHmB,CAMrB;;AACA,QAAI,KAAK,KAAL,CAAW,IAAX,CAAJ,EAAsB;AACpB,UAAI,QAAA,GAAW,C,GAAI,IAAA,CAAK,UAAT,CAAf;AACA,aAAO,KAAK,SAAL,KAAmB,KAAnB,GACH,QAAQ,CAAC,CAAD,CAAR,CAAY,GADT,GAEH,QAAQ,CAAC,QAAA,CAAS,MAAT,GAAkB,CAAnB,CAAR,CAA8B,GAFlC;AAGD,KAZoB,CAcrB;AACA;;;AACA,QAAI,KAAK,MAAL,CAAY,IAAZ,CAAJ,EAAuB;AACrB,UAAI,MAAA,GAAS,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAA,CAAK,SAA7B,CAAb;AACA,UAAI,SAAA,GAAW,C,GAAI,MAAA,CAAO,UAAX,CAAf;AACA,UAAI,IAAA,GAAO,KAAK,SAAL,KAAmB,KAAnB,GACP,SAAQ,CAAC,IAAA,CAAK,KAAL,GAAa,CAAd,CADD,GAEP,SAAQ,CAAC,IAAA,CAAK,KAAL,GAAa,CAAd,CAFZ;AAIA,UAAI,IAAJ,EACE,OAAO,IAAA,CAAK,GAAZ,CARmB,CAWrB;;AACA,UAAI,KAAK,SAAL,KAAmB,KAAvB,EACE,OAAO,IAAA,CAAK,SAAZ;AAGF,aAAO,KAAK,SAAL,KAAmB,KAAnB,GAA2B,KAAK,UAAL,CAAgB,GAAhB,CAA3B,GAAkD,KAAK,WAAL,CAAiB,GAAjB,CAAzD;AACD;AACH;;AAEA,EAAA,WAAA,CAAY,GAAZ,EAAuB,MAAvB,EAAyC;AACvC,QAAI,IAAJ;;AACA,QAAI,GAAA,IAAO,IAAX,EAAiB;AACf,MAAA,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAP;AACA,UAAI,CAAC,IAAL,EACE,OAHa,CAMf;AACA;;AACA,UAAI,KAAK,MAAL,CAAY,IAAZ,KAAqB,CAAC,MAA1B,EAAkC;AAChC,YAAI,MAAA,GAAS,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAA,CAAK,SAA7B,CAAb;AACA,eAAO,C,GAAI,MAAA,CAAO,UAAX,EAAuB,CAAvB,EAA0B,GAAjC;AACD;AACF,KAdsC,CAgBvC;;;AACA,IAAA,GAAA,GAAM,KAAK,WAAL,EAAN,CAjBuC,CAmBvC;;AACA,QAAK,GAAA,IAAO,IAAP,IAAe,IAAf,IAAuB,KAAK,MAAL,CAAY,IAAZ,CAAvB,IAA4C,MAA5C,IAAuD,KAAK,SAAL,KAAmB,MAA/E,EAAuF;AACrF,UAAI,KAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,MAAA,GAAA,GAAM,C,GAAI,KAAA,CAAK,UAAT,EAAqB,CAArB,EAAwB,GAA9B;AACD,KAvBsC,CAyBvC;;;AACA,WAAO,GAAP;AACF;;AAEA,EAAA,UAAA,CAAW,GAAX,EAAsB,MAAtB,EAAwC;AACtC,QAAI,IAAJ;;AACA,QAAI,GAAA,IAAO,IAAX,EAAiB;AACf,MAAA,IAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAP;AACA,UAAI,CAAC,IAAL,EACE,OAHa,CAMf;AACA;;AACA,UAAI,KAAK,MAAL,CAAY,IAAZ,KAAqB,CAAC,MAA1B,EAAkC;AAChC,YAAI,MAAA,GAAS,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAA,CAAK,SAA7B,CAAb;AACA,YAAI,QAAA,GAAW,C,GAAI,MAAA,CAAO,UAAX,CAAf;AACA,eAAO,QAAQ,CAAC,QAAA,CAAS,MAAT,GAAkB,CAAnB,CAAR,CAA8B,GAArC;AACD;AACF,KAfqC,CAiBtC;;;AACA,IAAA,GAAA,GAAM,KAAK,eAAL,EAAN,CAlBsC,CAoBtC;;AACA,QAAK,GAAA,IAAO,IAAP,IAAe,IAAf,IAAuB,KAAK,MAAL,CAAY,IAAZ,CAAvB,IAA4C,MAA5C,IAAuD,KAAK,SAAL,KAAmB,MAA/E,EAAuF;AACrF,UAAI,KAAA,GAAO,KAAK,UAAL,CAAgB,OAAhB,CAAwB,GAAxB,CAAX;AACA,UAAI,SAAA,GAAW,C,GAAI,KAAA,CAAK,UAAT,CAAf;AACA,MAAA,GAAA,GAAM,SAAQ,CAAC,SAAA,CAAS,MAAT,GAAkB,CAAnB,CAAR,CAA8B,GAApC;AACD,KAzBqC,CA2BtC;;;AACA,WAAO,GAAP;AACF;;AAEQ,EAAA,OAAA,CAAQ,GAAR,EAA+B;AACrC,WAAO,KAAK,GAAL,CAAS,OAAT,CAAiB,aAAjB,CAAgC,cAAa,GAAI,IAAjD,CAAP;AACF;;AAEQ,EAAA,WAAA,CAAY,GAAZ,EAA4B;QAEzB,0B;;AADT,QAAI,KAAK,MAAT,EACE,OAAO,CAAA,0BAAA,GAAA,KAAK,MAAL,CAAY,aAAZ,CAA0B,GAA1B,CAAA,MAA0B,IAA1B,IAAA,0BAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,0BAAA,CAAgC,IAAvC;AAGF,QAAI,IAAA,GAAO,KAAK,OAAL,CAAa,GAAb,CAAX;AACA,QAAI,IAAJ,EACE,OAAO,KAAI,GAAA,WAAJ,EAAS,IAAA,CAAK,UAAd,EAA0B,IAAA,CAAK,SAA/B,EAA0C,IAAA,CAAK,WAA/C,EAA4D,IAAA,CAAK,YAAjE,CAAP;AAEJ;;AAEQ,EAAA,aAAA,GAAwB;QAErB,wB,EAGF,S,EAAA,iB;;AAJP,QAAI,KAAK,MAAT,EACE,OAAO,CAAA,wBAAA,GAAA,KAAK,MAAL,CAAY,WAAZ,MAAuB,IAAvB,IAAA,wBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,wBAAA,CAAyB,WAAzB,CAAqC,MAA5C;AAGF,WAAO,CAAA,SAAA,GAAA,KAAK,GAAL,MAAQ,IAAR,IAAA,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,GAAA,SAAA,CAAU,OAAV,MAAU,IAAV,IAAU,iBAAA,KAAA,KAAA,CAAV,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAiB,YAAxB;AACF;;AAEQ,EAAA,gBAAA,GAA2B;QAK1B,S,EAAA,iB;;AAJP,QAAI,KAAK,MAAT,EACE,OAAO,KAAK,MAAL,CAAY,cAAZ,GAA6B,MAApC;AAGF,WAAO,CAAA,SAAA,GAAA,KAAK,GAAL,MAAQ,IAAR,IAAA,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,GAAA,SAAA,CAAU,OAAV,MAAU,IAAV,IAAU,iBAAA,KAAA,KAAA,CAAV,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAiB,YAAxB;AACF;;AAEA,EAAA,eAAA,CAAgB,GAAhB,EAA0B;AACxB,QAAI,QAAA,GAAW,KAAK,WAAL,CAAiB,GAAjB,CAAf;AACA,QAAI,CAAC,QAAL,EACE,OAAO,IAAP;AAGF,QAAI,KAAA,GAAQ,IAAA,CAAK,GAAL,CAAS,CAAT,EAAY,QAAA,CAAS,IAAT,GAAgB,KAAK,aAAL,EAA5B,CAAZ;;AAEA,WAAO,QAAA,IAAY,QAAA,CAAS,CAAT,GAAa,KAAhC,EAAuC;AACrC,MAAA,GAAA,GAAM,KAAK,WAAL,CAAiB,GAAjB,CAAN;AACA,MAAA,QAAA,GAAW,KAAK,WAAL,CAAiB,GAAjB,CAAX;AACF;;AAEA,WAAO,GAAP;AACF;;AAEA,EAAA,eAAA,CAAgB,GAAhB,EAA0B;AACxB,QAAI,QAAA,GAAW,KAAK,WAAL,CAAiB,GAAjB,CAAf;AAEA,QAAI,CAAC,QAAL,EACE,OAAO,IAAP;AAGF,QAAI,UAAA,GAAa,KAAK,aAAL,EAAjB;AACA,QAAI,KAAA,GAAQ,IAAA,CAAK,GAAL,CAAS,KAAK,gBAAL,EAAT,EAAkC,QAAA,CAAS,CAAT,GAAa,UAA/C,CAAZ;;AAEA,WAAO,QAAA,IAAY,QAAA,CAAS,IAAT,GAAgB,KAAnC,EAA0C;AACxC,UAAI,OAAA,GAAU,KAAK,WAAL,CAAiB,GAAjB,CAAd;AACA,MAAA,QAAA,GAAW,KAAK,WAAL,CAAiB,OAAjB,CAAX,CAFwC,CAIxC;AACA;;AACA,UAAI,OAAA,IAAW,IAAf,EACE,GAAA,GAAM,OAAN;AAEJ;;AAEA,WAAO,GAAP;AACF;;AAEA,EAAA,eAAA,CAAgB,MAAhB,EAAgC,OAAhC,EAA+C;AAC7C,QAAI,CAAC,KAAK,QAAV,EACE,OAAO,IAAP;AAGF,QAAI,UAAA,GAAa,KAAK,UAAtB;AACA,QAAI,GAAA,GAAM,OAAA,KAAA,IAAA,IAAA,OAAA,KAAA,KAAA,CAAA,GAAA,OAAA,GAAW,KAAK,WAAL,EAArB,CAN6C,CAQ7C;;AACA,QAAI,SAAA,GAAY,UAAA,CAAW,OAAX,CAAmB,GAAnB,CAAhB;AACA,QAAI,SAAA,CAAU,IAAV,KAAmB,MAAvB,EACE,GAAA,GAAM,SAAA,CAAU,SAAhB;AAGF,QAAI,UAAA,GAAa,KAAjB;;AACA,WAAO,GAAA,IAAO,IAAd,EAAoB;AAClB,UAAI,IAAA,GAAO,UAAA,CAAW,OAAX,CAAmB,GAAnB,CAAX,CADkB,CAGlB;;AACA,UAAI,IAAA,CAAK,SAAT,EAAoB;AAClB,YAAI,SAAA,GAAY,IAAA,CAAK,SAAL,CAAe,KAAf,CAAqB,CAArB,EAAwB,MAAA,CAAO,MAA/B,CAAhB;;AACA,YAAI,KAAK,QAAL,CAAc,OAAd,CAAsB,SAAtB,EAAiC,MAAjC,MAA6C,CAAjD,EAAoD;AAClD,cAAI,KAAK,KAAL,CAAW,IAAX,KAAoB,KAAK,SAAL,KAAmB,MAA3C,EACE,OAAO,C,GAAI,IAAA,CAAK,UAAT,EAAqB,CAArB,EAAwB,GAA/B;AAGF,iBAAO,IAAA,CAAK,GAAZ;AACD;AACF;;AAED,MAAA,GAAA,GAAM,KAAK,WAAL,CAAiB,GAAjB,CAAN,CAfkB,CAiBlB;;AACA,UAAI,GAAA,IAAO,IAAP,IAAe,CAAC,UAApB,EAAgC;AAC9B,QAAA,GAAA,GAAM,KAAK,WAAL,EAAN;AACA,QAAA,UAAA,GAAa,IAAb;AACD;AACH;;AAEA,WAAO,IAAP;AACF;;AAzVA,EAAA,WAAA,CAAY,OAAZ,EAAwD;AACtD,SAAK,UAAL,GAAkB,OAAA,CAAQ,UAA1B;AACA,SAAK,YAAL,GAAoB,OAAA,CAAQ,YAA5B;AACA,SAAK,GAAL,GAAW,OAAA,CAAQ,GAAnB;AACA,SAAK,SAAL,GAAiB,OAAA,CAAQ,SAAzB;AACA,SAAK,QAAL,GAAgB,OAAA,CAAQ,QAAxB;AACA,SAAK,MAAL,GAAc,OAAA,CAAQ,MAAtB;AACA,SAAK,SAAL,GAAiB,OAAA,CAAQ,SAAR,IAAqB,KAAtC;AACF;;AAjBW;AC3Bb;;;;;;;;;;AAUC;;ACVD;;;;;;;;;;AAUC;;;AAkBM,MAAM,yCAAA,GAAU,IAAI,OAAJ,EAAhB;AC5BP;;;;;;;;;;AAUC;;;;AEVD,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,aAA5C;AACf,uBAAsB,qCADP;AAEf,YAAW,OAFI;AAGf,iBAAgB,uBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,oBAAR;AAA6B,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,YAAxE;AAAqF,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAlI,GAA7B,CAA6K,GAJvM;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,eAA5C;AACf,uBAAsB,yDADP;AAEf,YAAW,UAFI;AAGf,iBAAgB,6BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,uBAAR;AAAgC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,iBAA3E;AAA6F,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA1I,GAA7B,CAA4L,GAJtN;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,WAAU,IAAA,CAAK,IAAK,gBAApD;AACf,uBAAsB,+CADP;AAEf,YAAW,QAFI;AAGf,iBAAgB,0BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,yBAAR;AAAkC,IAAA,GAAA,EAAK,MAAO,WAAU,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,UAArF;AAAgG,IAAA,KAAA,EAAO,MAAO,WAAU,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAArJ,GAA7B,CAA8L,GAJxN;AAKf,kBAAiB,IAAD,IAAW,mBAAkB,IAAA,CAAK,IAAK;AALxC,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,cAA5C;AACf,uBAAsB,iDADP;AAEf,YAAW,MAFI;AAGf,iBAAgB,uBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,uBAAR;AAAgC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,gBAA3E;AAA4F,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAzI,GAA7B,CAA0L,GAJpN;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,oBAA5C;AACf,uBAAsB,6CADP;AAEf,YAAW,WAFI;AAGf,iBAAgB,2BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,2BAAR;AAAoC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,qBAA/E;AAAqG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAlJ,GAA7B,CAAuM,GAJjO;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,8BAA6B,IAAA,CAAK,IAAK,GAAvE;AACf,uBAAsB,4DADP;AAEf,YAAW,SAFI;AAGf,iBAAgB,8BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,0BAAR;AAAmC,IAAA,GAAA,EAAK,MAAO,cAAa,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,WAAzF;AAAqG,IAAA,KAAA,EAAO,MAAO,eAAc,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA9J,GAA7B,CAAwM,GAJlO;AAKf,kBAAiB,IAAD,IAAW,0BAAyB,IAAA,CAAK,IAAK;AAL/C,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,gBAA5C;AACf,YAAW,QADI;AAEf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,mBAAR;AAA4B,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,gBAAvE;AAAwF,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAArI,GAA7B,CAAqL,GAF/M;AAGf,iBAAgB,qBAHD;AAIf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,YAJxB;AAKf,uBAAsB;AALP,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,mBAA5C;AACf,uBAAsB,mDADP;AAEf,YAAW,aAFI;AAGf,iBAAgB,oCAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,8BAAR;AAAuC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,wBAAlF;AAA2G,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAxJ,GAA7B,CAAiN,GAJ3O;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,gBAA5C;AACf,uBAAsB,6CADP;AAEf,YAAW,MAFI;AAGf,iBAAgB,uBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,qBAAR;AAA8B,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,gBAAzE;AAA0F,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAvI,GAA7B,CAAuL,GAJjN;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,YAAW,IAAA,CAAK,IAAK,cAArD;AACf,uBAAsB,0CADP;AAEf,YAAW,SAFI;AAGf,iBAAgB,yBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,4BAAR;AAAqC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,gBAAhF;AAAiG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA9I,GAA7B,CAAgM,GAJ1N;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,mBAA5C;AACf,uBAAsB,gEADP;AAEf,YAAW,cAFI;AAGf,iBAAgB,iCAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,2BAAR;AAAoC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,sBAA/E;AAAsG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAnJ,GAA7B,CAA0M,GAJpO;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,WAA5C;AACf,uBAAsB,+BADP;AAEf,YAAW,KAFI;AAGf,iBAAgB,mBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,iBAAR;AAA0B,IAAA,GAAA,EAAK,MAAO,QAAO,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,OAA1E;AAAkF,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA/H,GAA7B,CAA6K,GAJvM;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,UAAS,IAAA,CAAK,IAAK,iBAAnD;AACf,uBAAsB,4CADP;AAEf,YAAW,WAFI;AAGf,iBAAgB,yBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,8BAAR;AAAuC,IAAA,GAAA,EAAK,MAAO,eAAc,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,SAA9F;AAAwG,IAAA,KAAA,EAAO,MAAO,eAAc,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAjK,GAA7B,CAAyM,GAJnO;AAKf,kBAAiB,IAAD,IAAW,UAAS,IAAA,CAAK,IAAK;AAL/B,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,mBAA5C;AACf,uBAAsB,gCADP;AAEf,YAAW,WAFI;AAGf,iBAAgB,2BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,0BAAR;AAAmC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,iBAA9E;AAAgG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA7I,GAA7B,CAA6L,GAJvN;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,mBAA5C;AACf,uBAAsB,uDADP;AAEf,YAAW,WAFI;AAGf,iBAAgB,iCAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,6BAAR;AAAsC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,uBAAjF;AAAyG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAtJ,GAA7B,CAA4M,GAJtO;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,cAA5C;AACf,uBAAsB,kBADP;AAEf,YAAW,IAFI;AAGf,iBAAgB,gBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,cAAR;AAAuB,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,YAAlE;AAA+E,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA5H,GAA7B,CAAuK,GAJjM;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,kBAA5C;AACf,uBAAsB,wBADP;AAEf,YAAW,IAFI;AAGf,iBAAgB,iBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,cAAR;AAAuB,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,eAAlE;AAAkF,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA/H,GAA7B,CAA6K,GAJvM;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,gBAA5C;AACf,uBAAsB,kEADP;AAEf,YAAW,YAFI;AAGf,iBAAgB,4BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,mCAAR;AAA4C,IAAA,GAAA,EAAK,MAAO,eAAc,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,YAAnG;AAAgH,IAAA,KAAA,EAAO,MAAO,wBAAuB,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAlL,GAA7B,CAAmN,GAJ7O;AAKf,kBAAiB,IAAD,IAAW,eAAc,IAAA,CAAK,IAAK;AALpC,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,WAAU,IAAA,CAAK,IAAK,gBAApD;AACf,uBAAsB,qDADP;AAEf,YAAW,SAFI;AAGf,iBAAgB,wBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,8BAAR;AAAuC,IAAA,GAAA,EAAK,MAAO,4BAA2B,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,EAA3G;AAA8G,IAAA,KAAA,EAAO,MAAO,4BAA2B,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAApL,GAA7B,CAAqN,GAJ/O;AAKf,kBAAiB,IAAD,IAAW,oBAAmB,IAAA,CAAK,IAAK;AALzC,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,iBAA5C;AACf,uBAAsB,+CADP;AAEf,YAAW,MAFI;AAGf,iBAAgB,0BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,0BAAR;AAAmC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,mBAA9E;AAAkG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA/I,GAA7B,CAAmM,GAJ7N;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,qBAA5C;AACf,uBAAsB,0CADP;AAEf,YAAW,YAFI;AAGf,iBAAgB,0BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,yBAAR;AAAkC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,oBAA7E;AAAkG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA/I,GAA7B,CAAmM,GAJ7N;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,kBAAiB,IAAA,CAAK,IAAK,GAA3D;AACf,uBAAsB,oDADP;AAEf,YAAW,SAFI;AAGf,iBAAgB,gCAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,kCAAR;AAA2C,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,qBAAtF;AAA4G,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAzJ,GAA7B,CAAiN,GAJ3O;AAKf,kBAAiB,IAAD,IAAW,cAAa,IAAA,CAAK,IAAK;AALnC,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,mBAA5C;AACf,uBAAsB,sDADP;AAEf,YAAW,YAFI;AAGf,iBAAgB,8BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,yBAAR;AAAkC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,mBAA7E;AAAiG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA9I,GAA7B,CAAkM,GAJ5N;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,mBAA5C;AACf,uBAAsB,qDADP;AAEf,YAAW,YAFI;AAGf,iBAAgB,8BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,yBAAR;AAAkC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,mBAA7E;AAAiG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA9I,GAA7B,CAAkM,GAJ5N;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,cAA5C;AACf,uBAAsB,oDADP;AAEf,YAAW,WAFI;AAGf,iBAAgB,6BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,yBAAR;AAAkC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,mBAA7E;AAAiG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA9I,GAA7B,CAAkM,GAJ5N;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,cAA5C;AACf,uBAAsB,iDADP;AAEf,YAAW,SAFI;AAGf,iBAAgB,uBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,yBAAR;AAAkC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,iBAA7E;AAA+F,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA5I,GAA7B,CAA+L,GAJzN;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,sBAAqB,IAAA,CAAK,IAAK,GAA/D;AACf,uBAAsB,6CADP;AAEf,YAAW,QAFI;AAGf,iBAAgB,yBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,wBAAR;AAAiC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,kBAA5E;AAA+F,IAAA,KAAA,EAAO,MAAO,4BAA2B,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAArK,GAA7B,CAAsM,GAJhO;AAKf,kBAAiB,IAAD,IAAW,oBAAmB,IAAA,CAAK,IAAK;AALzC,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,WAAU,IAAA,CAAK,IAAK,aAApD;AACf,uBAAsB,kDADP;AAEf,YAAW,UAFI;AAGf,iBAAgB,0BAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,yBAAR;AAAkC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,oBAA7E;AAAkG,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA/I,GAA7B,CAAsM,GAJhO;AAKf,kBAAiB,IAAD,IAAW,WAAU,IAAA,CAAK,IAAK;AALhC,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,iBAA5C;AACf,uBAAsB,4CADP;AAEf,YAAW,WAFI;AAGf,iBAAgB,yBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,8BAAR;AAAuC,IAAA,GAAA,EAAK,MAAO,eAAc,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,SAA9F;AAAwG,IAAA,KAAA,EAAO,MAAO,eAAc,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAjK,GAA7B,CAAyM,GAJnO;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,eAA5C;AACf,uBAAsB,2CADP;AAEf,YAAW,SAFI;AAGf,iBAAgB,wBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,uBAAR;AAAgC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,kBAA3E;AAA8F,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAA3I,GAA7B,CAA6L,GAJvN;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,aAA5C;AACf,uBAAsB,sCADP;AAEf,YAAW,KAFI;AAGf,iBAAgB,qBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,sBAAR;AAA+B,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,cAA1E;AAAyF,IAAA,KAAA,EAAO,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAtI,GAA7B,CAAmL,GAJ7M;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK,cAA5C;AACf,uBAAsB,yDADP;AAEf,YAAW,SAFI;AAGf,iBAAgB,uBAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,6BAAR;AAAsC,IAAA,GAAA,EAAK,MAAO,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,kBAAjF;AAAoG,IAAA,KAAA,EAAO,MAAO,sBAAqB,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAApK,GAA7B,CAAqM,GAJ/N;AAKf,kBAAiB,IAAD,IAAW,GAAE,IAAA,CAAK,IAAK;AALxB,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,OAAM,IAAA,CAAK,IAAK,GAAhD;AACf,uBAAsB,YADP;AAEf,YAAW,IAFI;AAGf,iBAAgB,UAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,OAAR;AAAgB,IAAA,GAAA,EAAK,MAAO,OAAM,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,MAA/D;AAAsE,IAAA,KAAA,EAAO,MAAO,OAAM,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAvH,GAA7B,CAA4J,GAJtL;AAKf,kBAAiB,IAAD,IAAW,OAAM,IAAA,CAAK,IAAK;AAL5B,CAAjB;;ACAA,yBAAA,GAAiB;AAAG,oBAAmB,IAAD,IAAW,OAAM,IAAA,CAAK,IAAK,IAAhD;AACf,uBAAsB,YADP;AAEf,YAAW,IAFI;AAGf,iBAAgB,UAHD;AAIf,mBAAiB,CAAC,IAAD,EAAO,SAAP,KAAsB,GAAE,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,EAA6B;AAAC,UAAO,SAAR;AAAkB,IAAA,GAAA,EAAK,MAAO,OAAM,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B,MAAjE;AAAwE,IAAA,KAAA,EAAO,MAAO,OAAM,SAAA,CAAU,MAAV,CAAiB,IAAA,CAAK,KAAtB,CAA6B;AAAzH,GAA7B,CAA8J,GAJxL;AAKf,kBAAiB,IAAD,IAAW,OAAM,IAAA,CAAK,IAAK;AAL5B,CAAjB;AlCkCA,yBAAA,GAAiB;AACf,WAAS,yBADM;AAEf,WAAS,yBAFM;AAGf,WAAS,yBAHM;AAIf,WAAS,yBAJM;AAKf,WAAS,yBALM;AAMf,WAAS,yBANM;AAOf,WAAS,yBAPM;AAQf,WAAS,yBARM;AASf,WAAS,yBATM;AAUf,WAAS,yBAVM;AAWf,WAAS,yBAXM;AAYf,WAAS,yBAZM;AAaf,WAAS,yBAbM;AAcf,WAAS,yBAdM;AAef,WAAS,yBAfM;AAgBf,WAAS,yBAhBM;AAiBf,WAAS,yBAjBM;AAkBf,WAAS,yBAlBM;AAmBf,WAAS,yBAnBM;AAoBf,WAAS,yBApBM;AAqBf,WAAS,yBArBM;AAsBf,WAAS,yBAtBM;AAuBf,WAAS,yBAvBM;AAwBf,WAAS,yBAxBM;AAyBf,WAAS,yBAzBM;AA0Bf,WAAS,yBA1BM;AA2Bf,WAAS,yBA3BM;AA4Bf,WAAS,yBA5BM;AA6Bf,WAAS,yBA7BM;AA8Bf,WAAS,yBA9BM;AA+Bf,WAAS,yBA/BM;AAgCf,WAAS,yBAhCM;AAiCf,WAAS,yBAjCM;AAkCf,WAAS;AAlCM,CAAjB;;ADIO,SAAS,yCAAT,CAAyC,KAAzC,EAAgF,KAAhF,EAA8G;AACnH,MAAI;AACF,IAAA,UAAA,GAAc,GAAD,IAAC;UAAQ,yB;;AAAA,aAAA,CAAA,yBAAA,GAAA,KAAA,CAAM,UAAN,CAAiB,OAAjB,CAAyB,GAAzB,CAAA,MAAyB,IAAzB,IAAA,yBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,yBAAA,CAA+B,SAA/B;AACvB;AAFG,MAEA,KAFJ;AAGA,MAAI,eAAA,GAAkB,CAAA,GAAA,kCAAA,GAA4B,GAAA,aAAA,sBAAA,CAAA,yBAAA,CAA5B,EAAtB,CAJmH,CAMnH;AACA;;AACA,MAAI,SAAA,GAAY,KAAA,CAAM,gBAAN,CAAuB,YAAvC;AACA,MAAI,aAAA,GAAgB,CAAA,GAAA,aAAA,EAAO,SAAP,CAApB;AACA,GAAA,GAAA,sBAAA,EAAgB,MAAM;QAqC2F,sB;;AApC/G,QAAI,CAAC,KAAA,CAAM,gBAAN,CAAuB,SAA5B,EAAuC;AACrC,MAAA,aAAA,CAAc,OAAd,GAAwB,SAAxB;AAEA;AACD;;AAED,QAAI,SAAA,GAAY,mCAAA,CAAc,SAAd,EAAyB,aAAA,CAAc,OAAvC,CAAhB;AACA,QAAI,WAAA,GAAc,mCAAA,CAAc,aAAA,CAAc,OAA5B,EAAqC,SAArC,CAAlB,CARoB,CAUpB;;AACA,QAAI,SAAA,GAAY,KAAA,CAAM,gBAAN,CAAuB,iBAAvB,KAA6C,SAA7D;AACA,QAAI,QAAA,GAAW,EAAf;;AAEA,QAAK,KAAA,CAAM,gBAAN,CAAuB,YAAvB,CAAoC,IAApC,KAA6C,CAA7C,IAAkD,SAAvD,EACE;AAAA,UAAI,KAAA,CAAM,UAAN,CAAiB,OAAjB,CAAyB,KAAA,CAAM,gBAAN,CAAuB,YAAvB,CAAoC,IAApC,GAA2C,IAA3C,GAAkD,KAA3E,CAAJ,EAAuF;AACrF,YAAI,oBAAA,GAAuB,UAAA,CAAW,KAAA,CAAM,gBAAN,CAAuB,YAAvB,CAAoC,IAApC,GAA2C,IAA3C,GAAkD,KAA7D,CAA3B;AACA,YAAI,oBAAJ,EACE,QAAA,CAAS,IAAT,CAAc,eAAA,CAAgB,MAAhB,CAAuB,cAAvB,EAAuC;AAAC,UAAA,IAAA,EAAM;AAAP,SAAvC,CAAd;AAEH;AAAD,KANF,MAOO,IAAI,SAAA,CAAU,IAAV,KAAmB,CAAnB,IAAwB,WAAA,CAAY,IAAZ,KAAqB,CAAjD,EAAoD;AACzD,UAAI,SAAA,GAAY,UAAA,CAAW,SAAA,CAAU,IAAV,GAAiB,IAAjB,GAAwB,KAAnC,CAAhB;AACA,UAAI,SAAJ,EACE,QAAA,CAAS,IAAT,CAAc,eAAA,CAAgB,MAAhB,CAAuB,cAAvB,EAAuC;AAAC,QAAA,IAAA,EAAM;AAAP,OAAvC,CAAd;AAEJ,KALO,MAKA,IAAI,WAAA,CAAY,IAAZ,KAAqB,CAArB,IAA0B,SAAA,CAAU,IAAV,KAAmB,CAAjD,EACL;AAAA,UAAI,KAAA,CAAM,UAAN,CAAiB,OAAjB,CAAyB,WAAA,CAAY,IAAZ,GAAmB,IAAnB,GAA0B,KAAnD,CAAJ,EAA+D;AAC7D,YAAI,WAAA,GAAc,UAAA,CAAW,WAAA,CAAY,IAAZ,GAAmB,IAAnB,GAA0B,KAArC,CAAlB;AACA,YAAI,WAAJ,EACE,QAAA,CAAS,IAAT,CAAc,eAAA,CAAgB,MAAhB,CAAuB,gBAAvB,EAAyC;AAAC,UAAA,IAAA,EAAM;AAAP,SAAzC,CAAd;AAEH;AACF,KAjCmB,CAmCpB;;;AACA,QAAI,KAAA,CAAM,gBAAN,CAAuB,aAAvB,KAAyC,UAA7C,EACE;AAAA,UAAI,QAAA,CAAS,MAAT,KAAoB,CAApB,IAAyB,SAAA,KAAc,KAAvC,IAAgD,SAAA,CAAU,IAAV,GAAiB,CAAjE,IAAsE,aAAA,CAAc,OAAd,KAA0B,KAAhG,IAAyG,CAAA,CAAA,sBAAA,GAAA,aAAA,CAAc,OAAd,MAAqB,IAArB,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAuB,IAAvB,IAA8B,CAA3I,EACE,QAAA,CAAS,IAAT,CAAc,SAAA,KAAc,KAAd,GACV,eAAA,CAAgB,MAAhB,CAAuB,aAAvB,CADU,GAEV,eAAA,CAAgB,MAAhB,CAAuB,eAAvB,EAAwC;AAAC,QAAA,KAAA,EAAO,SAAA,CAAU;AAAlB,OAAxC,CAFJ;AAKH;;AAED,QAAI,QAAA,CAAS,MAAT,GAAkB,CAAtB,EACE,CAAA,GAAA,eAAA,EAAS,QAAA,CAAS,IAAT,CAAc,GAAd,CAAT;AAGF,IAAA,aAAA,CAAc,OAAd,GAAwB,SAAxB;AACF,GAlDA,EAkDG,CAAC,SAAD,CAlDH;AAmDF;;AAEA,SAAS,mCAAT,CAAuB,CAAvB,EAAqC,CAArC,EAA6D;AAC3D,MAAI,GAAA,GAAM,IAAI,GAAJ,EAAV;AACA,MAAI,CAAA,KAAM,KAAN,IAAe,CAAA,KAAM,KAAzB,EACE,OAAO,GAAP;;AAGF,OAAK,IAAI,GAAT,IAAgB,CAAA,CAAE,IAAF,EAAhB,EACE,IAAI,CAAC,CAAA,CAAE,GAAF,CAAM,GAAN,CAAL,EACE,GAAA,CAAI,GAAJ,CAAQ,GAAR;;AAIJ,SAAO,GAAP;AACF;AoClHA;;;;;;;;;;AAUC;;;AAoBM,SAAS,yCAAT,CAA0C,KAA1C,EAAwG;AAC7G,MAAI,eAAA,GAAkB,CAAA,GAAA,kCAAA,GAA4B,GAAA,aAAA,sBAAA,CAAA,yBAAA,CAA5B,EAAtB;AACA,MAAI,QAAA,GAAW,CAAA,GAAA,6BAAA,GAAf,CAF6G,CAG7G;;AACA,MAAI,eAAA,GAAmB,CAAA,QAAA,KAAa,SAAb,IAA0B,QAAA,KAAa,SAAvC,IAAoD,QAAA,IAAY,IAAhE,KAClB,OAAO,MAAP,KAAkB,WADA,IACe,kBAAkB,MADxD;AAGA,MAAI,sBAAA,GAAyB,CAAA,GAAA,cAAA,EAAQ,MAAM;AACzC,QAAI,aAAA,GAAgB,KAAA,CAAM,gBAAN,CAAuB,aAA3C;AACA,QAAI,iBAAA,GAAoB,KAAA,CAAM,gBAAN,CAAuB,iBAA/C;AAEA,QAAI,OAAA,GAAU,SAAd;AACA,QAAI,eAAJ,EACE,OAAA,GAAU,eAAA,CAAgB,MAAhB,CAAuB,mBAAvB,CAAV;AAGF,WAAO,iBAAA,KAAsB,SAAtB,IAAmC,aAAA,KAAkB,MAArD,IAA+D,KAAA,CAAM,cAArE,GAAsF,OAAtF,GAAgG,SAAvG;AACF,GAV6B,EAU1B,CAAC,KAAA,CAAM,gBAAN,CAAuB,aAAxB,EAAuC,KAAA,CAAM,gBAAN,CAAuB,iBAA9D,EAAiF,KAAA,CAAM,cAAvF,EAAuG,eAAvG,EAAwH,eAAxH,CAV0B,CAA7B;AAYA,MAAI,gBAAA,GAAmB,CAAA,GAAA,qBAAA,EAAe,sBAAf,CAAvB;AACA,SAAO,gBAAP;AACF;;AtCaO,SAAS,yCAAT,CAAoB,KAApB,EAAsC,KAAtC,EAA8E,GAA9E,EAAqH;AAC1H,MAAI;AAAA,IAAA,aAAA,EACF,aADE;AACW,IAAA,gBAAA,EACb,gBAFE;AAEc,IAAA,SAAA,EAChB,SAHE;AAGO,IAAA,SAAA,EACT,SAJE;AAIO,IAAA,UAAA,EACT,UALE;AAKQ,IAAA,WAAA,EACV,WANE;AAMS,IAAA,YAAA,EACX;AAPE,MAQA,KARJ;AAUA,MAAI,CAAC,KAAK,CAAC,YAAD,CAAN,IAAwB,CAAC,KAAK,CAAC,iBAAD,CAAlC,EACE,OAAA,CAAQ,IAAR,CAAa,sEAAb,EAZwH,CAe1H;AACA;;AACA,MAAI,QAAA,GAAW,CAAA,GAAA,kBAAA,EAAY;AAAC,IAAA,KAAA,EAAO,QAAR;AAAkB,IAAA,WAAA,EAAa;AAA/B,GAAZ,CAAf;AACA,MAAI;AAAA,IAAA,SAAA,EAAC;AAAD,MAAc,CAAA,GAAA,gBAAA,GAAlB;AACA,MAAI,QAAA,GAAW,CAAA,GAAA,cAAA,EAAQ,MAAM,gBAAA,IAAoB,KAAI,GAAA,yCAAJ,EAAyB;AACxE,IAAA,UAAA,EAAY,KAAA,CAAM,UADsD;AAExE,IAAA,YAAA,EAAc,KAAA,CAAM,YAFoD;SAGxE,GAHwE;eAIxE,SAJwE;cAKxE,QALwE;eAMxE;AANwE,GAAzB,CAAlC,EAOX,CAAC,gBAAD,EAAmB,KAAA,CAAM,UAAzB,EAAqC,KAAA,CAAM,YAA3C,EAAyD,GAAzD,EAA8D,SAA9D,EAAyE,QAAzE,EAAmF,SAAnF,CAPW,CAAf;AASA,MAAI;AAAA,IAAA,eAAA,EAAC;AAAD,MAAoB,CAAA,GAAA,8BAAA,EAAwB;SAC9C,GAD8C;AAE9C,IAAA,gBAAA,EAAkB,KAAA,CAAM,gBAFsB;AAG9C,IAAA,gBAAA,EAAkB,QAH4B;mBAI9C,aAJ8C;eAK9C;AAL8C,GAAxB,CAAxB;AAQA,MAAI,EAAA,GAAK,CAAA,GAAA,YAAA,EAAM,KAAA,CAAM,EAAZ,CAAT;AACA,GAAA,GAAA,yCAAA,EAAQ,GAAR,CAAY,KAAZ,EAAmB;AAAC,IAAA,gBAAA,EAAkB,QAAnB;AAA6B,IAAA,OAAA,EAAS;mBAAC,WAAD;oBAAc;AAAd;AAAtC,GAAnB;AAEA,MAAI,gBAAA,GAAmB,CAAA,GAAA,yCAAA,EAAiC;AACtD,IAAA,gBAAA,EAAkB,KAAA,CAAM,gBAD8B;AAEtD,IAAA,cAAA,EAAgB,CAAC,EAAE,WAAA,IAAe,YAAjB;AAFqC,GAAjC,CAAvB;AAKA,MAAI,QAAA,GAAW,CAAA,GAAA,qBAAA,EAAe,KAAf,EAAsB;AAAC,IAAA,SAAA,EAAW;AAAZ,GAAtB,CAAf;AACA,MAAI,SAAA,GAA2B,CAAA,GAAA,iBAAA,EAC7B,QAD6B,EAE7B;AACE,IAAA,IAAA,EAAM,MADR;QAEE,EAFF;AAGE,4BAAwB,KAAA,CAAM,gBAAN,CAAuB,aAAvB,KAAyC,UAAzC,GAAsD,MAAtD,GAA+D;AAHzF,GAF6B,EAO7B,KAAA,CAAM,4BAAN,GAAqC,EAArC,GAA0C,eAPb,EAQ7B,gBAR6B,CAA/B;;AAWA,MAAI,aAAJ,EAAmB;AACjB,IAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAA,CAAM,UAAN,CAAiB,IAA9C;AACA,IAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAA,CAAM,UAAN,CAAiB,WAA9C;AACD;;AAED,GAAA,GAAA,yCAAA,EAA6B;gBAAC;AAAD,GAA7B,EAA2C,KAA3C;AACA,SAAO;eACL;AADK,GAAP;AAGF;AuCjIA;;;;;;;;;;AAUC;;;AAYM,SAAS,yCAAT,GAA6C;AAClD,SAAO;AACL,IAAA,aAAA,EAAe;AACb,MAAA,IAAA,EAAM;AADO;AADV,GAAP;AAKF;AC5BA;;;;;;;;;;AAUC;;;AAoCM,SAAS,yCAAT,CAA+E,KAA/E,EAAuG,KAAvG,EAAiH,GAAjH,EAAgK;AACrK,MAAI;AAAA,IAAA,IAAA,EACF,IADE;AACE,IAAA,aAAA,EACJ,aAFE;AAEW,IAAA,qBAAA,EACb,qBAHE;AAGmB,IAAA,QAAA,EACrB;AAJE,MAKA,KALJ;AAOA,MAAI;AAAC,IAAA,OAAA,EAAS;AAAA,MAAA,WAAA,EAAC;AAAD;AAAV,MAA2B,CAAA,GAAA,yCAAA,EAAQ,GAAR,CAAY,KAAZ,CAA/B;AACA,MAAI;AAAA,IAAA,SAAA,EAAC,SAAD;AAAU,IAAA,SAAA,EAAE;AAAZ,MAAyB,CAAA,GAAA,wBAAA,EAAkB;AAC7C,IAAA,gBAAA,EAAkB,KAAA,CAAM,gBADqB;AAE7C,IAAA,GAAA,EAAK,IAAA,CAAK,GAFmC;SAG7C,GAH6C;mBAI7C,aAJ6C;2BAK7C,qBAL6C;AAM7C,IAAA,QAAA,EAAU,WAAA,GAAc,MAAM,WAAA,CAAY,IAAA,CAAK,GAAjB,CAApB,GAA4C,QANT;AAO7C,IAAA,UAAA,EAAY,KAAA,CAAM,UAAN,CAAiB,IAAjB,KAA0B;AAPO,GAAlB,CAA7B;AAUA,MAAI,UAAA,GAAa,KAAA,CAAM,gBAAN,CAAuB,UAAvB,CAAkC,IAAA,CAAK,GAAvC,CAAjB;AAEA,MAAI,QAAA,GAA0B;AAC5B,IAAA,IAAA,EAAM,KADsB;AAE5B,qBAAiB,KAAA,CAAM,gBAAN,CAAuB,aAAvB,KAAyC,MAAzC,GAAkD,UAAlD,GAA+D,SAFpD;AAG5B,OAAG;AAHyB,GAA9B;AAMA,MAAI,aAAJ,EACE,QAAQ,CAAC,eAAD,CAAR,GAA4B,IAAA,CAAK,KAAL,GAAa,CAAzC,CA5BmK,CA4BvH;;AAG9C,SAAO;cACL,QADK;eAEL;AAFK,GAAP;AAIF;ACjFA;;;;;;;;;;AAUC;;;AA0CM,SAAS,yCAAT,CAAqD,KAArD,EAA2E,KAA3E,EAAmG,GAAnG,EAAmJ;AACxJ,MAAI;AAAA,IAAA,IAAA,EACF,IADE;AACE,IAAA,aAAA,EACJ,aAFE;AAGF,IAAA,SAAA,GAAY,OAHV;AAGU,IAAA,qBAAA,EACZ,qBAJE;AAImB,IAAA,QAAA,EACrB;AALE,MAMA,KANJ;AAQA,MAAI;AAAA,IAAA,SAAA,EAAC;AAAD,MAAc,CAAA,GAAA,gBAAA,GAAlB;AACA,MAAI;AAAA,IAAA,gBAAA,EAAC,gBAAD;AAAmB,IAAA,OAAA,EAAS;AAAA,MAAA,YAAA,EAAC;AAAD;AAA5B,MAA8C,CAAA,GAAA,yCAAA,EAAQ,GAAR,CAAY,KAAZ,CAAlD,CAVwJ,CAYxJ;AACA;;AACA,MAAI,KAAA,GAAQ,MAAM;AAChB,QAAI,UAAA,GAAa,CAAA,GAAA,6BAAA,EAAuB,GAAA,CAAI,OAA3B,CAAjB;;AACA,QAAI,SAAA,KAAc,OAAlB,EAA2B;AACzB;AACA,UAAI,GAAA,CAAI,OAAJ,CAAY,QAAZ,CAAqB,QAAA,CAAS,aAA9B,KAAgD,GAAA,CAAI,OAAJ,KAAgB,QAAA,CAAS,aAA7E,EACE;AAGF,UAAI,SAAA,GAAY,KAAA,CAAM,gBAAN,CAAuB,kBAAvB,KAA8C,MAA9C,GACZ,0BAAA,CAAK,UAAL,CADY,GAEZ,UAAA,CAAW,UAAX,EAFJ;;AAGA,UAAI,SAAJ,EAAe;AACb,SAAA,GAAA,kBAAA,EAAY,SAAZ;AACA;AACD;AACF;;AAED,QAAI,CAAC,GAAA,CAAI,OAAJ,CAAY,QAAZ,CAAqB,QAAA,CAAS,aAA9B,CAAL,EACE,CAAA,GAAA,kBAAA,EAAY,GAAA,CAAI,OAAhB;AAEJ,GApBA;;AAsBA,MAAI;AAAA,IAAA,SAAA,EAAC,SAAD;AAAU,IAAA,SAAA,EAAE;AAAZ,MAAyB,CAAA,GAAA,wBAAA,EAAkB;AAC7C,IAAA,gBAAA,EAAkB,KAAA,CAAM,gBADqB;AAE7C,IAAA,GAAA,EAAK,IAAA,CAAK,GAFmC;SAG7C,GAH6C;mBAI7C,aAJ6C;WAK7C,KAL6C;2BAM7C,qBAN6C;AAO7C,IAAA,QAAA,EAAU,YAAA,GAAe,MAAM,YAAA,CAAa,IAAA,CAAK,GAAlB,CAArB,GAA8C,QAPX;AAQ7C,IAAA,UAAA,EAAY,KAAA,CAAM,UAAN,CAAiB,IAAjB,KAA0B;AARO,GAAlB,CAA7B;;AAWA,MAAI,gBAAA,GAAoB,CAAD,IAA2B;AAChD,QAAI,CAAC,CAAA,CAAE,aAAF,CAAgB,QAAhB,CAAyB,CAAA,CAAE,MAA3B,CAAD,IAAkD,KAAA,CAAM,4BAA5D,EACE;AAGF,QAAI,MAAA,GAAS,CAAA,GAAA,6BAAA,EAAuB,GAAA,CAAI,OAA3B,CAAb;AACA,IAAA,MAAA,CAAO,WAAP,GAAqB,QAAA,CAAS,aAA9B;;AAEA,YAAQ,CAAA,CAAE,GAAV;AACE,WAAK,WAAL;AAAkB;AAChB;AACA,cAAI,SAAA,GAAY,SAAA,KAAc,KAAd,GACZ,MAAA,CAAO,QAAP,EADY,GAEZ,MAAA,CAAO,YAAP,EAFJ,CAFgB,CAMhB;;AACA,cAAI,SAAA,KAAc,OAAd,IAAyB,SAAA,KAAc,GAAA,CAAI,OAA/C,EACE,SAAA,GAAY,IAAZ;;AAGF,cAAI,SAAJ,EAAe;AACb,YAAA,CAAA,CAAE,cAAF;AACA,YAAA,CAAA,CAAE,eAAF;AACA,aAAA,GAAA,kBAAA,EAAY,SAAZ;AACF,WAJA,MAIO;AACL;AACA;AACA;AACA;AACA;AACA,gBAAI,IAAA,GAAO,gBAAA,CAAiB,YAAjB,CAA8B,IAAA,CAAK,GAAnC,CAAX;AACA,gBAAI,IAAA,KAAS,IAAA,CAAK,GAAlB,EACE;AAGF,YAAA,CAAA,CAAE,cAAF;AACA,YAAA,CAAA,CAAE,eAAF;AACA,gBAAI,SAAA,KAAc,MAAd,IAAwB,SAAA,KAAc,KAA1C,EACE,CAAA,GAAA,kBAAA,EAAY,GAAA,CAAI,OAAhB,EADF,KAEO;AACL,cAAA,MAAA,CAAO,WAAP,GAAqB,GAAA,CAAI,OAAzB;AACA,cAAA,SAAA,GAAY,SAAA,KAAc,KAAd,GACR,MAAA,CAAO,UAAP,EADQ,GAER,0BAAA,CAAK,MAAL,CAFJ;AAGA,kBAAI,SAAJ,EACE,CAAA,GAAA,kBAAA,EAAY,SAAZ;AAEH;AACF;;AACD;AACF;;AACA,WAAK,YAAL;AAAmB;AACjB,cAAI,UAAA,GAAY,SAAA,KAAc,KAAd,GACZ,MAAA,CAAO,YAAP,EADY,GAEZ,MAAA,CAAO,QAAP,EAFJ;AAIA,cAAI,SAAA,KAAc,OAAd,IAAyB,UAAA,KAAc,GAAA,CAAI,OAA/C,EACE,UAAA,GAAY,IAAZ;;AAGF,cAAI,UAAJ,EAAe;AACb,YAAA,CAAA,CAAE,cAAF;AACA,YAAA,CAAA,CAAE,eAAF;AACA,aAAA,GAAA,kBAAA,EAAY,UAAZ;AACF,WAJA,MAIO;AACL,gBAAI,IAAA,GAAO,gBAAA,CAAiB,aAAjB,CAA+B,IAAA,CAAK,GAApC,CAAX;AACA,gBAAI,IAAA,KAAS,IAAA,CAAK,GAAlB,EACE;AAGF,YAAA,CAAA,CAAE,cAAF;AACA,YAAA,CAAA,CAAE,eAAF;AACA,gBAAI,SAAA,KAAc,MAAd,IAAwB,SAAA,KAAc,KAA1C,EACE,CAAA,GAAA,kBAAA,EAAY,GAAA,CAAI,OAAhB,EADF,KAEO;AACL,cAAA,MAAA,CAAO,WAAP,GAAqB,GAAA,CAAI,OAAzB;AACA,cAAA,UAAA,GAAY,SAAA,KAAc,KAAd,GACR,0BAAA,CAAK,MAAL,CADQ,GAER,MAAA,CAAO,UAAP,EAFJ;AAGA,kBAAI,UAAJ,EACE,CAAA,GAAA,kBAAA,EAAY,UAAZ;AAEH;AACF;;AACD;AACF;;AACA,WAAK,SAAL;AACA,WAAK,WAAL;AACE;AACA;AACA;AACA,YAAI,CAAC,CAAA,CAAE,MAAH,IAAa,GAAA,CAAI,OAAJ,CAAY,QAAZ,CAAqB,CAAA,CAAE,MAAvB,CAAjB,EAA4D;AAC1D,UAAA,CAAA,CAAE,eAAF;AACA,UAAA,CAAA,CAAE,cAAF;AACA,UAAA,GAAA,CAAI,OAAJ,CAAY,aAAZ,CAA0B,aAA1B,CACE,IAAI,aAAJ,CAAkB,CAAA,CAAE,WAAF,CAAc,IAAhC,EAAsC,CAAA,CAAE,WAAxC,CADF;AAGD;;AACD;AA1FJ;AA4FF,GApGA,CA/CwJ,CAqJxJ;AACA;;;AACA,MAAI,OAAA,GAAW,CAAD,IAAO;AACnB,QAAI,CAAA,CAAE,MAAF,KAAa,GAAA,CAAI,OAArB,EAA8B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,CAAC,CAAA,GAAA,qBAAA,GAAL,EACE,KAAA,CAAM,gBAAN,CAAuB,aAAvB,CAAqC,IAAA,CAAK,GAA1C;AAEF;AACD,KAZkB,CAcnB;AACA;;;AACA,IAAA,qBAAA,CAAsB,MAAM;AAC1B,UAAI,SAAA,KAAc,OAAd,IAAyB,QAAA,CAAS,aAAT,KAA2B,GAAA,CAAI,OAA5D,EACE,KAAA;AAEJ,KAJA,CAAA;AAKF,GArBA;;AAuBA,MAAI,aAAA,GAA+B,CAAA,GAAA,iBAAA,EAAW,SAAX,EAAsB;AACvD,IAAA,IAAA,EAAM,UADiD;sBAEvD,gBAFuD;aAGvD;AAHuD,GAAtB,CAAnC;;MAOoC,c;;AADpC,MAAI,aAAJ,EACE,aAAa,CAAC,eAAD,CAAb,GAAkC,CAAA,CAAA,cAAA,GAAA,IAAA,CAAK,QAAL,MAAa,IAAb,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAAiB,IAAA,CAAK,KAAtB,IAA+B,CAAjE,CArLsJ,CAqLlF;;AAGtE,SAAO;mBACL,aADK;eAEL;AAFK,GAAP;AAIF;;AAEA,SAAS,0BAAT,CAAc,MAAd,EAAkC;AAChC,MAAI,IAAJ;AACA,MAAI,IAAJ;;AACA,KAAG;AACD,IAAA,IAAA,GAAO,MAAA,CAAO,SAAP,EAAP;AACA,QAAI,IAAJ,EACE,IAAA,GAAO,IAAP;AAEJ,GALA,QAKS,IALT;;AAMA,SAAO,IAAP;AACF;;ACnOO,SAAS,yCAAT,CAAkE,KAAlE,EAAyG,KAAzG,EAA4J;AACjK,MAAI;AAAA,IAAA,GAAA,EAAC;AAAD,MAAQ,KAAZ;AAEA,MAAI,OAAA,GAAU,KAAA,CAAM,gBAApB;AACA,MAAI,UAAA,GAAa,CAAA,GAAA,YAAA,GAAjB;AACA,MAAI,UAAA,GAAa,CAAC,KAAA,CAAM,gBAAN,CAAuB,aAAvB,CAAqC,GAArC,CAAlB;AACA,MAAI,UAAA,GAAa,KAAA,CAAM,gBAAN,CAAuB,UAAvB,CAAkC,GAAlC,CAAjB;;AAEA,MAAI,QAAA,GAAW,MAAM,OAAA,CAAQ,MAAR,CAAe,GAAf,CAArB;;AAEA,QAAM,eAAA,GAAkB,CAAA,GAAA,kCAAA,GAA4B,GAAA,aAAA,sBAAA,CAAA,yBAAA,CAA5B,EAAxB;AAEA,SAAO;AACL,IAAA,aAAA,EAAe;AACb,MAAA,EAAA,EAAI,UADS;AAEb,oBAAc,eAAA,CAAgB,MAAhB,CAAuB,QAAvB,CAFD;kBAGb,UAHa;kBAIb,UAJa;gBAKb;AALa;AADV,GAAP;AASF","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nexport {useGrid} from './useGrid';\nexport {useGridRowGroup} from './useGridRowGroup';\nexport {useGridRow} from './useGridRow';\nexport {useGridCell} from './useGridCell';\nexport {useGridSelectionCheckbox} from './useGridSelectionCheckbox';\nexport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nexport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\n\nexport type {GridProps, GridAria} from './useGrid';\nexport type {GridCellAria, GridCellProps} from './useGridCell';\nexport type {GridRowGroupAria} from './useGridRowGroup';\nexport type {GridRowProps, GridRowAria} from './useGridRow';\nexport type {GridKeyboardDelegateOptions} from './GridKeyboardDelegate';\nexport type {AriaGridSelectionCheckboxProps, GridSelectionCheckboxAria} from './useGridSelectionCheckbox';\nexport type {HighlightSelectionDescriptionProps} from './useHighlightSelectionDescription';\nexport type {GridSelectionAnnouncementProps} from './useGridSelectionAnnouncement';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {Key, RefObject} from 'react';\nimport {Layout, Rect} from '@react-stately/virtualizer';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[children.length - 1].key\n        : children[0].key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl'\n        ? children[item.index - 1]\n        : children[item.index + 1];\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[0].key\n        : children[children.length - 1].key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl'\n        ? children[item.index + 1]\n        : children[item.index - 1];\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return [...item.childNodes][0].key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, KeyboardDelegate} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {Key, RefObject, useMemo} from 'react';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    scrollRef,\n    getRowText,\n    onRowAction,\n    onCellAction\n  } = props;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId(props.id);\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let gridProps: DOMAttributes = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    state.isKeyboardNavigationDisabled ? {} : collectionProps,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  useGridSelectionAnnouncement({getRowText}, state);\n  return {\n    gridProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport {Key} from 'react';\nimport type {KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {Collection, Node, Selection} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key, useRef} from 'react';\nimport {SelectionManager} from '@react-stately/selection';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useUpdateEffect} from '@react-aria/utils';\n\nexport interface GridSelectionAnnouncementProps {\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string\n}\n\ninterface GridSelectionState<T> {\n  /** A collection of items in the grid. */\n  collection: Collection<Node<T>>,\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\nexport function useGridSelectionAnnouncement<T>(props: GridSelectionAnnouncementProps, state: GridSelectionState<T>) {\n  let {\n    getRowText = (key) => state.collection.getItem(key)?.textValue\n  } = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(stringFormatter.format('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(stringFormatter.format('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(stringFormatter.format('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? stringFormatter.format('selectedAll')\n          : stringFormatter.format('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n","{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n","{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n","{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n","{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n","{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n","{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n","{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n","{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n","{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n","{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n","{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n","{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n","{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n","{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n","{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n","{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n","{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n","{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n","{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n","{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n","{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n","{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface HighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: HighlightSelectionDescriptionProps): AriaLabelingProps {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = stringFormatter.format('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {RefObject} from 'react';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: Node<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<FocusableElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: DOMAttributes = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {mergeProps} from '@react-aria/utils';\nimport {KeyboardEvent as ReactKeyboardEvent, RefObject} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: GridNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<FocusableElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) {\n        return;\n      }\n\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as FocusableElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let onKeyDownCapture = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as Element) || state.isKeyboardNavigationDisabled) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as FocusableElement\n          : walker.previousNode() as FocusableElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as FocusableElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as FocusableElement\n          : walker.nextNode() as FocusableElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as FocusableElement;\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as Element)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: DOMAttributes = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = (node.colIndex ?? node.index) + 1; // aria-colindex is 1-based\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaGridSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface GridSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: AriaGridSelectionCheckboxProps, state: GridState<T, C>): GridSelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected,\n      isDisabled,\n      onChange\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}